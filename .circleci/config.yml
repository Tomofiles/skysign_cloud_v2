version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.15.2
  slack: circleci/slack@3.4.2

slack-fail-post-step: &slack-fail-post-step
  post-steps:
    - slack/status:
          webhook: "${SLACK_WEBHOOK}"
          fail_only: true

jobs:
  build_and_test_http_gateway:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "http-gateway_${CIRCLE_SHA1}"
          checkout: true
          path: ./http-gateway

  build_and_test_helper_api:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "helper-api_${CIRCLE_SHA1}"
          checkout: true
          path: ./helper-api

  build_and_test_communication:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "communication_${CIRCLE_SHA1}"
          checkout: true
          path: ./communication

  build_and_test_vehicle:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "vehicle_${CIRCLE_SHA1}"
          checkout: true
          path: ./vehicle

  build_and_test_mission:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "mission_${CIRCLE_SHA1}"
          checkout: true
          path: ./mission

  build_and_test_flightplan:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "flightplan_${CIRCLE_SHA1}"
          checkout: true
          path: ./flightplan

  build_and_test_flightoperation:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "flightoperation_${CIRCLE_SHA1}"
          checkout: true
          path: ./flightoperation

  build_and_test_flightreport:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "flightreport_${CIRCLE_SHA1}"
          checkout: true
          path: ./flightreport

  build_and_test_action:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "action_${CIRCLE_SHA1}"
          checkout: true
          path: ./action

  build_and_test_client:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "client_${CIRCLE_SHA1}"
          checkout: true
          path: ./client
          extra-build-args: "--build-arg CESIUM_KEY=${CESIUM_KEY}"

  build_and_test_edge:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "edge_${CIRCLE_SHA1}"
          checkout: true
          path: ./edge

  build_and_push_http_gateway:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "http-gateway_${CIRCLE_SHA1}"
          path: ./http-gateway

  build_and_push_helper_api:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "helper-api_${CIRCLE_SHA1}"
          path: ./helper-api

  build_and_push_communication:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "communication_${CIRCLE_SHA1}"
          path: ./communication

  build_and_push_vehicle:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "vehicle_${CIRCLE_SHA1}"
          path: ./vehicle

  build_and_push_mission:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "mission_${CIRCLE_SHA1}"
          path: ./mission

  build_and_push_flightplan:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "flightplan_${CIRCLE_SHA1}"
          path: ./flightplan

  build_and_push_flightoperation:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "flightoperation_${CIRCLE_SHA1}"
          path: ./flightoperation

  build_and_push_flightreport:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "flightreport_${CIRCLE_SHA1}"
          path: ./flightreport

  build_and_push_action:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "action_${CIRCLE_SHA1}"
          path: ./action

  build_and_push_client:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          region: AWS_DEFAULT_REGION
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: ${AWS_RESOURCE_NAME_PREFIX}
          tag: "client_${CIRCLE_SHA1}"
          path: ./client
          extra-build-args: "--build-arg CESIUM_KEY=${CESIUM_KEY}"

  create_pull_request:
    docker:
      - image: circleci/python:3.7.4-stretch
    steps:
      - checkout
      - run:
          name: install hub
          command: |
            curl -sSLf https://github.com/github/hub/releases/download/v2.8.3/hub-linux-amd64-2.8.3.tgz | \
            tar zxf - --strip-components=1 -C /tmp/ && \
            sudo mv /tmp/bin/hub /usr/local/bin/hub
            hub --version
      - run:
          name: install envsubst
          command: |
            sudo apt-get install -qq -y gettext
      - run:
          name: git clone commit push create pull request
          command: |
            git config --global user.name tomofiles-circleci
            git config --global user.email tomofiles-circleci@email.com
            git clone git@github.com:Tomofiles/${SKYSIGN_CONFIG_REPO}.git
            cd ${SKYSIGN_CONFIG_REPO}/
            git checkout -b release-${CIRCLE_SHA1}
            rm -f manifest/*
            envsubst < ../build/deploy/skysign-action-gateway-backend-envoy.yaml > manifest/skysign-action-gateway-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-action-gateway-backend.yaml > manifest/skysign-action-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-action-gateway.yaml > manifest/skysign-action-gateway.yaml
            envsubst < ../build/deploy/skysign-action-service-backend-envoy.yaml > manifest/skysign-action-service-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-action-service-backend.yaml > manifest/skysign-action-service-backend.yaml
            envsubst < ../build/deploy/skysign-action-service.yaml > manifest/skysign-action-service.yaml
            envsubst < ../build/deploy/skysign-client-backend.yaml > manifest/skysign-client-backend.yaml
            envsubst < ../build/deploy/skysign-client.yaml > manifest/skysign-client.yaml
            envsubst < ../build/deploy/skysign-communication-gateway-backend-envoy.yaml > manifest/skysign-communication-gateway-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-communication-gateway-backend.yaml > manifest/skysign-communication-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-communication-gateway.yaml > manifest/skysign-communication-gateway.yaml
            envsubst < ../build/deploy/skysign-communication-service-backend-envoy.yaml > manifest/skysign-communication-service-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-communication-service-backend.yaml > manifest/skysign-communication-service-backend.yaml
            envsubst < ../build/deploy/skysign-communication-service.yaml > manifest/skysign-communication-service.yaml
            envsubst < ../build/deploy/skysign-db.yaml > manifest/skysign-db.yaml
            envsubst < ../build/deploy/skysign-endpoint.yaml > manifest/skysign-endpoint.yaml
            envsubst < ../build/deploy/skysign-flightoperation-gateway-backend-envoy.yaml > manifest/skysign-flightoperation-gateway-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-flightoperation-gateway-backend.yaml > manifest/skysign-flightoperation-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-flightoperation-gateway.yaml > manifest/skysign-flightoperation-gateway.yaml
            envsubst < ../build/deploy/skysign-flightoperation-service-backend-envoy.yaml > manifest/skysign-flightoperation-service-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-flightoperation-service-backend.yaml > manifest/skysign-flightoperation-service-backend.yaml
            envsubst < ../build/deploy/skysign-flightoperation-service.yaml > manifest/skysign-flightoperation-service.yaml
            envsubst < ../build/deploy/skysign-flightplan-gateway-backend-envoy.yaml > manifest/skysign-flightplan-gateway-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-flightplan-gateway-backend.yaml > manifest/skysign-flightplan-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-flightplan-gateway.yaml > manifest/skysign-flightplan-gateway.yaml
            envsubst < ../build/deploy/skysign-flightplan-service-backend-envoy.yaml > manifest/skysign-flightplan-service-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-flightplan-service-backend.yaml > manifest/skysign-flightplan-service-backend.yaml
            envsubst < ../build/deploy/skysign-flightplan-service.yaml > manifest/skysign-flightplan-service.yaml
            envsubst < ../build/deploy/skysign-flightreport-gateway-backend-envoy.yaml > manifest/skysign-flightreport-gateway-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-flightreport-gateway-backend.yaml > manifest/skysign-flightreport-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-flightreport-gateway.yaml > manifest/skysign-flightreport-gateway.yaml
            envsubst < ../build/deploy/skysign-flightreport-service-backend-envoy.yaml > manifest/skysign-flightreport-service-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-flightreport-service-backend.yaml > manifest/skysign-flightreport-service-backend.yaml
            envsubst < ../build/deploy/skysign-flightreport-service.yaml > manifest/skysign-flightreport-service.yaml
            envsubst < ../build/deploy/skysign-helper-gateway-backend.yaml > manifest/skysign-helper-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-helper-gateway.yaml > manifest/skysign-helper-gateway.yaml
            envsubst < ../build/deploy/skysign-helper-service-backend.yaml > manifest/skysign-helper-service-backend.yaml
            envsubst < ../build/deploy/skysign-helper-service.yaml > manifest/skysign-helper-service.yaml
            envsubst < ../build/deploy/skysign-mission-gateway-backend-envoy.yaml > manifest/skysign-mission-gateway-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-mission-gateway-backend.yaml > manifest/skysign-mission-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-mission-gateway.yaml > manifest/skysign-mission-gateway.yaml
            envsubst < ../build/deploy/skysign-mission-service-backend-envoy.yaml > manifest/skysign-mission-service-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-mission-service-backend.yaml > manifest/skysign-mission-service-backend.yaml
            envsubst < ../build/deploy/skysign-mission-service.yaml > manifest/skysign-mission-service.yaml
            envsubst < ../build/deploy/skysign-vehicle-gateway-backend-envoy.yaml > manifest/skysign-vehicle-gateway-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-vehicle-gateway-backend.yaml > manifest/skysign-vehicle-gateway-backend.yaml
            envsubst < ../build/deploy/skysign-vehicle-gateway.yaml > manifest/skysign-vehicle-gateway.yaml
            envsubst < ../build/deploy/skysign-vehicle-service-backend-envoy.yaml > manifest/skysign-vehicle-service-backend-envoy.yaml
            envsubst < ../build/deploy/skysign-vehicle-service-backend.yaml > manifest/skysign-vehicle-service-backend.yaml
            envsubst < ../build/deploy/skysign-vehicle-service.yaml > manifest/skysign-vehicle-service.yaml
            git add .
            git commit -m "release-${CIRCLE_SHA1}"
            git push --set-upstream origin release-${CIRCLE_SHA1}
            hub pull-request -F .github/PULL_REQUEST_TEMPLATE.md -m "[image update] skysign ${CIRCLE_SHA1}"

  notify-slack:
    docker:
      - image: "cimg/base:stable"
    steps:
      - slack/status:
          webhook: "${SLACK_WEBHOOK}"

  notify-slack-master:
    docker:
      - image: "cimg/base:stable"
    steps:
      - slack/status:
          webhook: "${SLACK_WEBHOOK}"

workflows:
  skysign-cicd-workflow:
    jobs:
      - build_and_test_http_gateway:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_helper_api:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_communication:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_vehicle:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_mission:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_flightplan:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_flightoperation:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_flightreport:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_action:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_client:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - build_and_test_edge:
          filters:
            branches:
              ignore: master
          <<: *slack-fail-post-step
      - notify-slack:
          requires:
            - build_and_test_http_gateway
            - build_and_test_helper_api
            - build_and_test_communication
            - build_and_test_vehicle
            - build_and_test_mission
            - build_and_test_flightplan
            - build_and_test_flightoperation
            - build_and_test_flightreport
            - build_and_test_action
            - build_and_test_client
            - build_and_test_edge
          filters:
            branches:
              ignore: master
      - build_and_push_http_gateway:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_helper_api:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_communication:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_vehicle:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_mission:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_flightplan:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_flightoperation:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_flightreport:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_action:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - build_and_push_client:
          filters:
            branches:
              only: master
          <<: *slack-fail-post-step
      - notify-slack-master:
          requires:
            - build_and_push_http_gateway
            - build_and_push_helper_api
            - build_and_push_communication
            - build_and_push_vehicle
            - build_and_push_mission
            - build_and_push_flightplan
            - build_and_push_flightoperation
            - build_and_push_flightreport
            - build_and_push_action
            - build_and_push_client
          filters:
            branches:
              only: master
      - create_pull_request:
          requires:
            - notify-slack-master
          filters:
            branches:
              only: master
