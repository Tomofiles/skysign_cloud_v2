// To render:
// https://dreampuf.github.io/GraphvizOnline/
digraph G {
  Client [label="Client", shape=Box];
  HTTPFrontend1 [label="<Communicaton>\ngRPC gateway\n[Golang]"];
  HTTPFrontend2 [label="<Mission>\ngRPC gateway\n[Golang]"];
  HTTPFrontend3 [label="<Vehicle>\ngRPC gateway\n[Golang]"];
  MissionsBackend [label="<Mission>\nbackend\n[Java]"];
  CommunicationBackend [label="<Communication>\nbackend\n[Java]"];
  PostgreSQL1 [label="PostgreSQL", shape=cylinder];
  PostgreSQL2 [label="PostgreSQL", shape=cylinder];
  RabbitMQ [label="RabbitMQ", shape=box3d];
  ReverseProxy [label="Reverse Proxy"];
  StaticContents [label="Static contents\n[React/Cesium]"];
  Edge_ [label="Edge\n[Golang]"];
  MavsdkBackend [label="Mavsdk\nbackend server"];
  PX4 [label="PX4"];
  
  Client -> ReverseProxy [label="HTTP"];
  Edge_ -> ReverseProxy [label="HTTP"];
  
  CommunicationBackend -> PostgreSQL1;
  MissionsBackend -> PostgreSQL2;
  
  CommunicationBackend -> RabbitMQ;
    
  subgraph cluster_0 {
    label="Container\nplatform";
    ReverseProxy -> HTTPFrontend1 [label="HTTP"];
    ReverseProxy -> HTTPFrontend2 [label="HTTP"];
    ReverseProxy -> StaticContents [label="HTTP"];
    ReverseProxy -> HTTPFrontend3 [label="HTTP"];
  
    HTTPFrontend1 -> CommunicationBackend [label="gRPC"];
    HTTPFrontend2 -> MissionsBackend [label="gRPC"];
    HTTPFrontend3 -> CommunicationBackend [label="gRPC"];
  }
  
  subgraph cluster_1 {
    label="Unmanned\nVehicle";
    Edge_ -> MavsdkBackend [label="gRPC", dir=both];
    MavsdkBackend -> PX4 [label="Mavlink", dir=both, style=dotted];
  }
}