apiVersion: v1
kind: Service
metadata:
  name: skysign-flight-operation-gateway
  labels:
    run: skysign-flight-operation-gateway
spec:
  type: NodePort
  ports:
  - port: 6000
    protocol: TCP
  selector:
    run: skysign-flight-operation-gateway-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: skysign-flight-operation-gateway-backend
  labels:
    run: skysign-flight-operation-gateway-backend
spec:
  selector:
    matchLabels:
      run: skysign-flight-operation-gateway-backend
  replicas: 1
  template:
    metadata:
      labels:
        run: skysign-flight-operation-gateway-backend
    spec:
      volumes:
      - name: envoy
        configMap:
          name: skysign-flight-operation-gateway-backend-envoy
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.17-latest
        command:
          - "/usr/local/bin/envoy"
        args:
          - "--config-path /etc/envoy/envoy.json"
          - "--bootstrap-version 2"
        ports:
          - containerPort: 8001
            name: envoy-admin
        volumeMounts:
          - name: envoy
            mountPath: /etc/envoy
      - name: skysign-flight-operation-gateway-backend
        image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/skysign-cloud-v2:http-gateway_${CIRCLE_SHA1}
        command: ["/app/flight-operation-gateway"]
        args: ["-port", "6000", "-backend_host", "127.0.0.1", "-backend_port", "5001", "-logtostderr"]
        ports:
        - containerPort: 6000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: skysign-flight-operation-gateway-backend-envoy
data:
  envoy.json: |
    {
      "static_resources": {
        "listeners": [
          {
            "name": "listener_0",
            "address": {
              "socket_address": { "address": "127.0.0.1", "port_value": "5001" }
            },
            "filter_chains": {
              "filters": [
                {
                  "name": "envoy.http_connection_manager",
                  "config": {
                    "codec_type": "AUTO",
                    "stat_prefix": "egress_http",
                    "route_config": {
                      "name": "local_route",
                      "virtual_hosts": [
                        {
                          "name": "skysign-flight-operation-service-backend",
                          "domains": ["*"],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/",
                                "headers": [
                                  {"name": "content-type", "exact_match": "application/grpc"}
                                ]
                              },
                              "route": {
                                "cluster": "skysign-flight-operation-service-backend"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "access_log": [
                      {
                        "name": "envoy.file_access_log",
                        "config": {
                          "path": "/dev/stdout"
                        }
                      }
                    ],
                    "http_filters": [
                      {
                        "name": "envoy.router",
                        "config": {}
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "clusters": [
          {
            "name": "skysign-flight-operation-service-backend",
            "http2_protocol_options": {},
            "connect_timeout": "0.25s",
            "type": "STRICT_DNS",
            "lb_policy": "ROUND_ROBIN",
            "hosts": [
              {
                "socket_address": { "address": "skysign-flight-operation-service", "port_value": "5001" }
              }
            ]
          }
        ]       
      },
      "admin": {
        "access_log_path": "/dev/stdout",
        "address": {
          "socket_address": { "address": "127.0.0.1", "port_value": "8001" }
        }
      }
    }