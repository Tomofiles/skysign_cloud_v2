// To render:
// https://dreampuf.github.io/GraphvizOnline/
digraph G {
  Client [label="Client", shape=Box];
  HTTPFrontend1 [label="<Remote-Communication>\ngRPC gateway\n[Golang]"];
  HTTPFrontend2 [label="<Fleet-Formation>\ngRPC gateway\n[Golang]"];
  HTTPFrontend3 [label="<Flight-Operation>\ngRPC gateway\n[Golang]"];
  HTTPFrontend4 [label="<Collection-Analysis>\ngRPC gateway\n[Golang]"];

  RemoteCommunicationBackend [label="<Remote-Communication>\nbackend\n[Golang]"];
  FleetFormationBackend [label="<Fleet-Formation>\nbackend\n[Golang]"];
  FlightOperationBackend [label="<Flight-Operation>\nbackend\n[Golang]"];
  CollectionAnalysisBackend [label="<Collection-Analysis>\nbackend\n[Golang]"];
  
  PostgreSQL1 [label="PostgreSQL", shape=cylinder];
  PostgreSQL2 [label="PostgreSQL", shape=cylinder];
  PostgreSQL3 [label="PostgreSQL", shape=cylinder];
  PostgreSQL4 [label="PostgreSQL", shape=cylinder];

  RabbitMQ [label="RabbitMQ", shape=box3d];
  
  ReverseProxy [label="Reverse Proxy"];
  
  StaticContents [label="Static contents\n[React/Cesium]"];
  
  Edge_ [label="Edge\n[Golang]"];
  
  MavsdkBackend [label="Mavsdk\nbackend server"];
  
  PX4 [label="PX4"];
  
  Client -> ReverseProxy [label="HTTP"];
  Edge_ -> ReverseProxy [label="HTTP"];
  
  RemoteCommunicationBackend -> PostgreSQL1;
  FleetFormationBackend -> PostgreSQL2;
  FlightOperationBackend -> PostgreSQL3;
  CollectionAnalysisBackend -> PostgreSQL4;

  RemoteCommunicationBackend -> RabbitMQ;
  FleetFormationBackend -> RabbitMQ;
  FlightOperationBackend -> RabbitMQ;
  CollectionAnalysisBackend -> RabbitMQ;

  subgraph cluster_0 {
    label="Container\nplatform";
    ReverseProxy -> StaticContents [label="HTTP"];
    ReverseProxy -> HTTPFrontend1 [label="HTTP"];
    ReverseProxy -> HTTPFrontend2 [label="HTTP"];
    ReverseProxy -> HTTPFrontend3 [label="HTTP"];
    ReverseProxy -> HTTPFrontend4 [label="HTTP"];
  
    HTTPFrontend1 -> RemoteCommunicationBackend [label="gRPC"];
    HTTPFrontend2 -> FleetFormationBackend [label="gRPC"];
    HTTPFrontend3 -> FlightOperationBackend [label="gRPC"];
    HTTPFrontend4 -> CollectionAnalysisBackend [label="gRPC"];
  }
  
  subgraph cluster_1 {
    label="Unmanned\nVehicle";
    Edge_ -> MavsdkBackend [label="gRPC", dir=both];
    MavsdkBackend -> PX4 [label="Mavlink", dir=both, style=dotted];
  }
}