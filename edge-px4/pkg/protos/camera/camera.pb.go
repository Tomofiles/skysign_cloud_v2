// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MAVSDK-Proto/protos/camera/camera.proto

package mavsdk_rpc_camera

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Camera mode type.
type CameraMode int32

const (
	CameraMode_UNKNOWN CameraMode = 0
	CameraMode_PHOTO   CameraMode = 1
	CameraMode_VIDEO   CameraMode = 2
)

var CameraMode_name = map[int32]string{
	0: "UNKNOWN",
	1: "PHOTO",
	2: "VIDEO",
}

var CameraMode_value = map[string]int32{
	"UNKNOWN": 0,
	"PHOTO":   1,
	"VIDEO":   2,
}

func (x CameraMode) String() string {
	return proto.EnumName(CameraMode_name, int32(x))
}

func (CameraMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{0}
}

// Possible results returned for camera commands
type CameraResult_Result int32

const (
	CameraResult_UNKNOWN        CameraResult_Result = 0
	CameraResult_SUCCESS        CameraResult_Result = 1
	CameraResult_IN_PROGRESS    CameraResult_Result = 2
	CameraResult_BUSY           CameraResult_Result = 3
	CameraResult_DENIED         CameraResult_Result = 4
	CameraResult_ERROR          CameraResult_Result = 5
	CameraResult_TIMEOUT        CameraResult_Result = 6
	CameraResult_WRONG_ARGUMENT CameraResult_Result = 7
)

var CameraResult_Result_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "IN_PROGRESS",
	3: "BUSY",
	4: "DENIED",
	5: "ERROR",
	6: "TIMEOUT",
	7: "WRONG_ARGUMENT",
}

var CameraResult_Result_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"IN_PROGRESS":    2,
	"BUSY":           3,
	"DENIED":         4,
	"ERROR":          5,
	"TIMEOUT":        6,
	"WRONG_ARGUMENT": 7,
}

func (x CameraResult_Result) String() string {
	return proto.EnumName(CameraResult_Result_name, int32(x))
}

func (CameraResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{30, 0}
}

type VideoStreamInfo_VideoStreamStatus int32

const (
	VideoStreamInfo_NOT_RUNNING VideoStreamInfo_VideoStreamStatus = 0
	VideoStreamInfo_IN_PROGRESS VideoStreamInfo_VideoStreamStatus = 1
)

var VideoStreamInfo_VideoStreamStatus_name = map[int32]string{
	0: "NOT_RUNNING",
	1: "IN_PROGRESS",
}

var VideoStreamInfo_VideoStreamStatus_value = map[string]int32{
	"NOT_RUNNING": 0,
	"IN_PROGRESS": 1,
}

func (x VideoStreamInfo_VideoStreamStatus) String() string {
	return proto.EnumName(VideoStreamInfo_VideoStreamStatus_name, int32(x))
}

func (VideoStreamInfo_VideoStreamStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{36, 0}
}

// Storage status type.
type CameraStatus_StorageStatus int32

const (
	CameraStatus_NOT_AVAILABLE CameraStatus_StorageStatus = 0
	CameraStatus_UNFORMATTED   CameraStatus_StorageStatus = 1
	CameraStatus_FORMATTED     CameraStatus_StorageStatus = 2
)

var CameraStatus_StorageStatus_name = map[int32]string{
	0: "NOT_AVAILABLE",
	1: "UNFORMATTED",
	2: "FORMATTED",
}

var CameraStatus_StorageStatus_value = map[string]int32{
	"NOT_AVAILABLE": 0,
	"UNFORMATTED":   1,
	"FORMATTED":     2,
}

func (x CameraStatus_StorageStatus) String() string {
	return proto.EnumName(CameraStatus_StorageStatus_name, int32(x))
}

func (CameraStatus_StorageStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{37, 0}
}

type TakePhotoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakePhotoRequest) Reset()         { *m = TakePhotoRequest{} }
func (m *TakePhotoRequest) String() string { return proto.CompactTextString(m) }
func (*TakePhotoRequest) ProtoMessage()    {}
func (*TakePhotoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{0}
}

func (m *TakePhotoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakePhotoRequest.Unmarshal(m, b)
}
func (m *TakePhotoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakePhotoRequest.Marshal(b, m, deterministic)
}
func (m *TakePhotoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakePhotoRequest.Merge(m, src)
}
func (m *TakePhotoRequest) XXX_Size() int {
	return xxx_messageInfo_TakePhotoRequest.Size(m)
}
func (m *TakePhotoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TakePhotoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TakePhotoRequest proto.InternalMessageInfo

type TakePhotoResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TakePhotoResponse) Reset()         { *m = TakePhotoResponse{} }
func (m *TakePhotoResponse) String() string { return proto.CompactTextString(m) }
func (*TakePhotoResponse) ProtoMessage()    {}
func (*TakePhotoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{1}
}

func (m *TakePhotoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakePhotoResponse.Unmarshal(m, b)
}
func (m *TakePhotoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakePhotoResponse.Marshal(b, m, deterministic)
}
func (m *TakePhotoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakePhotoResponse.Merge(m, src)
}
func (m *TakePhotoResponse) XXX_Size() int {
	return xxx_messageInfo_TakePhotoResponse.Size(m)
}
func (m *TakePhotoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TakePhotoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TakePhotoResponse proto.InternalMessageInfo

func (m *TakePhotoResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type StartPhotoIntervalRequest struct {
	IntervalS            float32  `protobuf:"fixed32,1,opt,name=interval_s,json=intervalS,proto3" json:"interval_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartPhotoIntervalRequest) Reset()         { *m = StartPhotoIntervalRequest{} }
func (m *StartPhotoIntervalRequest) String() string { return proto.CompactTextString(m) }
func (*StartPhotoIntervalRequest) ProtoMessage()    {}
func (*StartPhotoIntervalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{2}
}

func (m *StartPhotoIntervalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartPhotoIntervalRequest.Unmarshal(m, b)
}
func (m *StartPhotoIntervalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartPhotoIntervalRequest.Marshal(b, m, deterministic)
}
func (m *StartPhotoIntervalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartPhotoIntervalRequest.Merge(m, src)
}
func (m *StartPhotoIntervalRequest) XXX_Size() int {
	return xxx_messageInfo_StartPhotoIntervalRequest.Size(m)
}
func (m *StartPhotoIntervalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartPhotoIntervalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartPhotoIntervalRequest proto.InternalMessageInfo

func (m *StartPhotoIntervalRequest) GetIntervalS() float32 {
	if m != nil {
		return m.IntervalS
	}
	return 0
}

type StartPhotoIntervalResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StartPhotoIntervalResponse) Reset()         { *m = StartPhotoIntervalResponse{} }
func (m *StartPhotoIntervalResponse) String() string { return proto.CompactTextString(m) }
func (*StartPhotoIntervalResponse) ProtoMessage()    {}
func (*StartPhotoIntervalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{3}
}

func (m *StartPhotoIntervalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartPhotoIntervalResponse.Unmarshal(m, b)
}
func (m *StartPhotoIntervalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartPhotoIntervalResponse.Marshal(b, m, deterministic)
}
func (m *StartPhotoIntervalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartPhotoIntervalResponse.Merge(m, src)
}
func (m *StartPhotoIntervalResponse) XXX_Size() int {
	return xxx_messageInfo_StartPhotoIntervalResponse.Size(m)
}
func (m *StartPhotoIntervalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartPhotoIntervalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartPhotoIntervalResponse proto.InternalMessageInfo

func (m *StartPhotoIntervalResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type StopPhotoIntervalRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopPhotoIntervalRequest) Reset()         { *m = StopPhotoIntervalRequest{} }
func (m *StopPhotoIntervalRequest) String() string { return proto.CompactTextString(m) }
func (*StopPhotoIntervalRequest) ProtoMessage()    {}
func (*StopPhotoIntervalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{4}
}

func (m *StopPhotoIntervalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopPhotoIntervalRequest.Unmarshal(m, b)
}
func (m *StopPhotoIntervalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopPhotoIntervalRequest.Marshal(b, m, deterministic)
}
func (m *StopPhotoIntervalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopPhotoIntervalRequest.Merge(m, src)
}
func (m *StopPhotoIntervalRequest) XXX_Size() int {
	return xxx_messageInfo_StopPhotoIntervalRequest.Size(m)
}
func (m *StopPhotoIntervalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopPhotoIntervalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopPhotoIntervalRequest proto.InternalMessageInfo

type StopPhotoIntervalResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StopPhotoIntervalResponse) Reset()         { *m = StopPhotoIntervalResponse{} }
func (m *StopPhotoIntervalResponse) String() string { return proto.CompactTextString(m) }
func (*StopPhotoIntervalResponse) ProtoMessage()    {}
func (*StopPhotoIntervalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{5}
}

func (m *StopPhotoIntervalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopPhotoIntervalResponse.Unmarshal(m, b)
}
func (m *StopPhotoIntervalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopPhotoIntervalResponse.Marshal(b, m, deterministic)
}
func (m *StopPhotoIntervalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopPhotoIntervalResponse.Merge(m, src)
}
func (m *StopPhotoIntervalResponse) XXX_Size() int {
	return xxx_messageInfo_StopPhotoIntervalResponse.Size(m)
}
func (m *StopPhotoIntervalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopPhotoIntervalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopPhotoIntervalResponse proto.InternalMessageInfo

func (m *StopPhotoIntervalResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type StartVideoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartVideoRequest) Reset()         { *m = StartVideoRequest{} }
func (m *StartVideoRequest) String() string { return proto.CompactTextString(m) }
func (*StartVideoRequest) ProtoMessage()    {}
func (*StartVideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{6}
}

func (m *StartVideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVideoRequest.Unmarshal(m, b)
}
func (m *StartVideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVideoRequest.Marshal(b, m, deterministic)
}
func (m *StartVideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVideoRequest.Merge(m, src)
}
func (m *StartVideoRequest) XXX_Size() int {
	return xxx_messageInfo_StartVideoRequest.Size(m)
}
func (m *StartVideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartVideoRequest proto.InternalMessageInfo

type StartVideoResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StartVideoResponse) Reset()         { *m = StartVideoResponse{} }
func (m *StartVideoResponse) String() string { return proto.CompactTextString(m) }
func (*StartVideoResponse) ProtoMessage()    {}
func (*StartVideoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{7}
}

func (m *StartVideoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVideoResponse.Unmarshal(m, b)
}
func (m *StartVideoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVideoResponse.Marshal(b, m, deterministic)
}
func (m *StartVideoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVideoResponse.Merge(m, src)
}
func (m *StartVideoResponse) XXX_Size() int {
	return xxx_messageInfo_StartVideoResponse.Size(m)
}
func (m *StartVideoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVideoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartVideoResponse proto.InternalMessageInfo

func (m *StartVideoResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type StopVideoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopVideoRequest) Reset()         { *m = StopVideoRequest{} }
func (m *StopVideoRequest) String() string { return proto.CompactTextString(m) }
func (*StopVideoRequest) ProtoMessage()    {}
func (*StopVideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{8}
}

func (m *StopVideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopVideoRequest.Unmarshal(m, b)
}
func (m *StopVideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopVideoRequest.Marshal(b, m, deterministic)
}
func (m *StopVideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopVideoRequest.Merge(m, src)
}
func (m *StopVideoRequest) XXX_Size() int {
	return xxx_messageInfo_StopVideoRequest.Size(m)
}
func (m *StopVideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopVideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopVideoRequest proto.InternalMessageInfo

type StopVideoResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StopVideoResponse) Reset()         { *m = StopVideoResponse{} }
func (m *StopVideoResponse) String() string { return proto.CompactTextString(m) }
func (*StopVideoResponse) ProtoMessage()    {}
func (*StopVideoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{9}
}

func (m *StopVideoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopVideoResponse.Unmarshal(m, b)
}
func (m *StopVideoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopVideoResponse.Marshal(b, m, deterministic)
}
func (m *StopVideoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopVideoResponse.Merge(m, src)
}
func (m *StopVideoResponse) XXX_Size() int {
	return xxx_messageInfo_StopVideoResponse.Size(m)
}
func (m *StopVideoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopVideoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopVideoResponse proto.InternalMessageInfo

func (m *StopVideoResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type StartVideoStreamingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartVideoStreamingRequest) Reset()         { *m = StartVideoStreamingRequest{} }
func (m *StartVideoStreamingRequest) String() string { return proto.CompactTextString(m) }
func (*StartVideoStreamingRequest) ProtoMessage()    {}
func (*StartVideoStreamingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{10}
}

func (m *StartVideoStreamingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVideoStreamingRequest.Unmarshal(m, b)
}
func (m *StartVideoStreamingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVideoStreamingRequest.Marshal(b, m, deterministic)
}
func (m *StartVideoStreamingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVideoStreamingRequest.Merge(m, src)
}
func (m *StartVideoStreamingRequest) XXX_Size() int {
	return xxx_messageInfo_StartVideoStreamingRequest.Size(m)
}
func (m *StartVideoStreamingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVideoStreamingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartVideoStreamingRequest proto.InternalMessageInfo

type StartVideoStreamingResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StartVideoStreamingResponse) Reset()         { *m = StartVideoStreamingResponse{} }
func (m *StartVideoStreamingResponse) String() string { return proto.CompactTextString(m) }
func (*StartVideoStreamingResponse) ProtoMessage()    {}
func (*StartVideoStreamingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{11}
}

func (m *StartVideoStreamingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVideoStreamingResponse.Unmarshal(m, b)
}
func (m *StartVideoStreamingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVideoStreamingResponse.Marshal(b, m, deterministic)
}
func (m *StartVideoStreamingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVideoStreamingResponse.Merge(m, src)
}
func (m *StartVideoStreamingResponse) XXX_Size() int {
	return xxx_messageInfo_StartVideoStreamingResponse.Size(m)
}
func (m *StartVideoStreamingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVideoStreamingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartVideoStreamingResponse proto.InternalMessageInfo

func (m *StartVideoStreamingResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type StopVideoStreamingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopVideoStreamingRequest) Reset()         { *m = StopVideoStreamingRequest{} }
func (m *StopVideoStreamingRequest) String() string { return proto.CompactTextString(m) }
func (*StopVideoStreamingRequest) ProtoMessage()    {}
func (*StopVideoStreamingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{12}
}

func (m *StopVideoStreamingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopVideoStreamingRequest.Unmarshal(m, b)
}
func (m *StopVideoStreamingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopVideoStreamingRequest.Marshal(b, m, deterministic)
}
func (m *StopVideoStreamingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopVideoStreamingRequest.Merge(m, src)
}
func (m *StopVideoStreamingRequest) XXX_Size() int {
	return xxx_messageInfo_StopVideoStreamingRequest.Size(m)
}
func (m *StopVideoStreamingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopVideoStreamingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopVideoStreamingRequest proto.InternalMessageInfo

type StopVideoStreamingResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StopVideoStreamingResponse) Reset()         { *m = StopVideoStreamingResponse{} }
func (m *StopVideoStreamingResponse) String() string { return proto.CompactTextString(m) }
func (*StopVideoStreamingResponse) ProtoMessage()    {}
func (*StopVideoStreamingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{13}
}

func (m *StopVideoStreamingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopVideoStreamingResponse.Unmarshal(m, b)
}
func (m *StopVideoStreamingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopVideoStreamingResponse.Marshal(b, m, deterministic)
}
func (m *StopVideoStreamingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopVideoStreamingResponse.Merge(m, src)
}
func (m *StopVideoStreamingResponse) XXX_Size() int {
	return xxx_messageInfo_StopVideoStreamingResponse.Size(m)
}
func (m *StopVideoStreamingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopVideoStreamingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopVideoStreamingResponse proto.InternalMessageInfo

func (m *StopVideoStreamingResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type SetModeRequest struct {
	CameraMode           CameraMode `protobuf:"varint,1,opt,name=camera_mode,json=cameraMode,proto3,enum=mavsdk.rpc.camera.CameraMode" json:"camera_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetModeRequest) Reset()         { *m = SetModeRequest{} }
func (m *SetModeRequest) String() string { return proto.CompactTextString(m) }
func (*SetModeRequest) ProtoMessage()    {}
func (*SetModeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{14}
}

func (m *SetModeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetModeRequest.Unmarshal(m, b)
}
func (m *SetModeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetModeRequest.Marshal(b, m, deterministic)
}
func (m *SetModeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetModeRequest.Merge(m, src)
}
func (m *SetModeRequest) XXX_Size() int {
	return xxx_messageInfo_SetModeRequest.Size(m)
}
func (m *SetModeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetModeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetModeRequest proto.InternalMessageInfo

func (m *SetModeRequest) GetCameraMode() CameraMode {
	if m != nil {
		return m.CameraMode
	}
	return CameraMode_UNKNOWN
}

type SetModeResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetModeResponse) Reset()         { *m = SetModeResponse{} }
func (m *SetModeResponse) String() string { return proto.CompactTextString(m) }
func (*SetModeResponse) ProtoMessage()    {}
func (*SetModeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{15}
}

func (m *SetModeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetModeResponse.Unmarshal(m, b)
}
func (m *SetModeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetModeResponse.Marshal(b, m, deterministic)
}
func (m *SetModeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetModeResponse.Merge(m, src)
}
func (m *SetModeResponse) XXX_Size() int {
	return xxx_messageInfo_SetModeResponse.Size(m)
}
func (m *SetModeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetModeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetModeResponse proto.InternalMessageInfo

func (m *SetModeResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

type SubscribeModeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeModeRequest) Reset()         { *m = SubscribeModeRequest{} }
func (m *SubscribeModeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeModeRequest) ProtoMessage()    {}
func (*SubscribeModeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{16}
}

func (m *SubscribeModeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeModeRequest.Unmarshal(m, b)
}
func (m *SubscribeModeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeModeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeModeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeModeRequest.Merge(m, src)
}
func (m *SubscribeModeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeModeRequest.Size(m)
}
func (m *SubscribeModeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeModeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeModeRequest proto.InternalMessageInfo

type ModeResponse struct {
	CameraMode           CameraMode `protobuf:"varint,1,opt,name=camera_mode,json=cameraMode,proto3,enum=mavsdk.rpc.camera.CameraMode" json:"camera_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ModeResponse) Reset()         { *m = ModeResponse{} }
func (m *ModeResponse) String() string { return proto.CompactTextString(m) }
func (*ModeResponse) ProtoMessage()    {}
func (*ModeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{17}
}

func (m *ModeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModeResponse.Unmarshal(m, b)
}
func (m *ModeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModeResponse.Marshal(b, m, deterministic)
}
func (m *ModeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModeResponse.Merge(m, src)
}
func (m *ModeResponse) XXX_Size() int {
	return xxx_messageInfo_ModeResponse.Size(m)
}
func (m *ModeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ModeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ModeResponse proto.InternalMessageInfo

func (m *ModeResponse) GetCameraMode() CameraMode {
	if m != nil {
		return m.CameraMode
	}
	return CameraMode_UNKNOWN
}

type SubscribeVideoStreamInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeVideoStreamInfoRequest) Reset()         { *m = SubscribeVideoStreamInfoRequest{} }
func (m *SubscribeVideoStreamInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeVideoStreamInfoRequest) ProtoMessage()    {}
func (*SubscribeVideoStreamInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{18}
}

func (m *SubscribeVideoStreamInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeVideoStreamInfoRequest.Unmarshal(m, b)
}
func (m *SubscribeVideoStreamInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeVideoStreamInfoRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeVideoStreamInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeVideoStreamInfoRequest.Merge(m, src)
}
func (m *SubscribeVideoStreamInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeVideoStreamInfoRequest.Size(m)
}
func (m *SubscribeVideoStreamInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeVideoStreamInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeVideoStreamInfoRequest proto.InternalMessageInfo

type VideoStreamInfoResponse struct {
	VideoStreamInfo      *VideoStreamInfo `protobuf:"bytes,1,opt,name=video_stream_info,json=videoStreamInfo,proto3" json:"video_stream_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *VideoStreamInfoResponse) Reset()         { *m = VideoStreamInfoResponse{} }
func (m *VideoStreamInfoResponse) String() string { return proto.CompactTextString(m) }
func (*VideoStreamInfoResponse) ProtoMessage()    {}
func (*VideoStreamInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{19}
}

func (m *VideoStreamInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoStreamInfoResponse.Unmarshal(m, b)
}
func (m *VideoStreamInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoStreamInfoResponse.Marshal(b, m, deterministic)
}
func (m *VideoStreamInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoStreamInfoResponse.Merge(m, src)
}
func (m *VideoStreamInfoResponse) XXX_Size() int {
	return xxx_messageInfo_VideoStreamInfoResponse.Size(m)
}
func (m *VideoStreamInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoStreamInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VideoStreamInfoResponse proto.InternalMessageInfo

func (m *VideoStreamInfoResponse) GetVideoStreamInfo() *VideoStreamInfo {
	if m != nil {
		return m.VideoStreamInfo
	}
	return nil
}

type SubscribeCaptureInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeCaptureInfoRequest) Reset()         { *m = SubscribeCaptureInfoRequest{} }
func (m *SubscribeCaptureInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeCaptureInfoRequest) ProtoMessage()    {}
func (*SubscribeCaptureInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{20}
}

func (m *SubscribeCaptureInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeCaptureInfoRequest.Unmarshal(m, b)
}
func (m *SubscribeCaptureInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeCaptureInfoRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeCaptureInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeCaptureInfoRequest.Merge(m, src)
}
func (m *SubscribeCaptureInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeCaptureInfoRequest.Size(m)
}
func (m *SubscribeCaptureInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeCaptureInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeCaptureInfoRequest proto.InternalMessageInfo

type CaptureInfoResponse struct {
	CaptureInfo          *CaptureInfo `protobuf:"bytes,1,opt,name=capture_info,json=captureInfo,proto3" json:"capture_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CaptureInfoResponse) Reset()         { *m = CaptureInfoResponse{} }
func (m *CaptureInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CaptureInfoResponse) ProtoMessage()    {}
func (*CaptureInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{21}
}

func (m *CaptureInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureInfoResponse.Unmarshal(m, b)
}
func (m *CaptureInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureInfoResponse.Marshal(b, m, deterministic)
}
func (m *CaptureInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureInfoResponse.Merge(m, src)
}
func (m *CaptureInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CaptureInfoResponse.Size(m)
}
func (m *CaptureInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureInfoResponse proto.InternalMessageInfo

func (m *CaptureInfoResponse) GetCaptureInfo() *CaptureInfo {
	if m != nil {
		return m.CaptureInfo
	}
	return nil
}

type SubscribeCameraStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeCameraStatusRequest) Reset()         { *m = SubscribeCameraStatusRequest{} }
func (m *SubscribeCameraStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeCameraStatusRequest) ProtoMessage()    {}
func (*SubscribeCameraStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{22}
}

func (m *SubscribeCameraStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeCameraStatusRequest.Unmarshal(m, b)
}
func (m *SubscribeCameraStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeCameraStatusRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeCameraStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeCameraStatusRequest.Merge(m, src)
}
func (m *SubscribeCameraStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeCameraStatusRequest.Size(m)
}
func (m *SubscribeCameraStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeCameraStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeCameraStatusRequest proto.InternalMessageInfo

type CameraStatusResponse struct {
	CameraStatus         *CameraStatus `protobuf:"bytes,1,opt,name=camera_status,json=cameraStatus,proto3" json:"camera_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CameraStatusResponse) Reset()         { *m = CameraStatusResponse{} }
func (m *CameraStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CameraStatusResponse) ProtoMessage()    {}
func (*CameraStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{23}
}

func (m *CameraStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraStatusResponse.Unmarshal(m, b)
}
func (m *CameraStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraStatusResponse.Marshal(b, m, deterministic)
}
func (m *CameraStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraStatusResponse.Merge(m, src)
}
func (m *CameraStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CameraStatusResponse.Size(m)
}
func (m *CameraStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CameraStatusResponse proto.InternalMessageInfo

func (m *CameraStatusResponse) GetCameraStatus() *CameraStatus {
	if m != nil {
		return m.CameraStatus
	}
	return nil
}

type SubscribeCurrentSettingsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeCurrentSettingsRequest) Reset()         { *m = SubscribeCurrentSettingsRequest{} }
func (m *SubscribeCurrentSettingsRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeCurrentSettingsRequest) ProtoMessage()    {}
func (*SubscribeCurrentSettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{24}
}

func (m *SubscribeCurrentSettingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeCurrentSettingsRequest.Unmarshal(m, b)
}
func (m *SubscribeCurrentSettingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeCurrentSettingsRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeCurrentSettingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeCurrentSettingsRequest.Merge(m, src)
}
func (m *SubscribeCurrentSettingsRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeCurrentSettingsRequest.Size(m)
}
func (m *SubscribeCurrentSettingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeCurrentSettingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeCurrentSettingsRequest proto.InternalMessageInfo

type CurrentSettingsResponse struct {
	CurrentSettings      []*Setting `protobuf:"bytes,1,rep,name=current_settings,json=currentSettings,proto3" json:"current_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CurrentSettingsResponse) Reset()         { *m = CurrentSettingsResponse{} }
func (m *CurrentSettingsResponse) String() string { return proto.CompactTextString(m) }
func (*CurrentSettingsResponse) ProtoMessage()    {}
func (*CurrentSettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{25}
}

func (m *CurrentSettingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentSettingsResponse.Unmarshal(m, b)
}
func (m *CurrentSettingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentSettingsResponse.Marshal(b, m, deterministic)
}
func (m *CurrentSettingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentSettingsResponse.Merge(m, src)
}
func (m *CurrentSettingsResponse) XXX_Size() int {
	return xxx_messageInfo_CurrentSettingsResponse.Size(m)
}
func (m *CurrentSettingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentSettingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentSettingsResponse proto.InternalMessageInfo

func (m *CurrentSettingsResponse) GetCurrentSettings() []*Setting {
	if m != nil {
		return m.CurrentSettings
	}
	return nil
}

type SubscribePossibleSettingOptionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribePossibleSettingOptionsRequest) Reset() {
	*m = SubscribePossibleSettingOptionsRequest{}
}
func (m *SubscribePossibleSettingOptionsRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribePossibleSettingOptionsRequest) ProtoMessage()    {}
func (*SubscribePossibleSettingOptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{26}
}

func (m *SubscribePossibleSettingOptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribePossibleSettingOptionsRequest.Unmarshal(m, b)
}
func (m *SubscribePossibleSettingOptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribePossibleSettingOptionsRequest.Marshal(b, m, deterministic)
}
func (m *SubscribePossibleSettingOptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribePossibleSettingOptionsRequest.Merge(m, src)
}
func (m *SubscribePossibleSettingOptionsRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribePossibleSettingOptionsRequest.Size(m)
}
func (m *SubscribePossibleSettingOptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribePossibleSettingOptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribePossibleSettingOptionsRequest proto.InternalMessageInfo

type PossibleSettingOptionsResponse struct {
	SettingOptions       []*SettingOptions `protobuf:"bytes,1,rep,name=setting_options,json=settingOptions,proto3" json:"setting_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PossibleSettingOptionsResponse) Reset()         { *m = PossibleSettingOptionsResponse{} }
func (m *PossibleSettingOptionsResponse) String() string { return proto.CompactTextString(m) }
func (*PossibleSettingOptionsResponse) ProtoMessage()    {}
func (*PossibleSettingOptionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{27}
}

func (m *PossibleSettingOptionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PossibleSettingOptionsResponse.Unmarshal(m, b)
}
func (m *PossibleSettingOptionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PossibleSettingOptionsResponse.Marshal(b, m, deterministic)
}
func (m *PossibleSettingOptionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PossibleSettingOptionsResponse.Merge(m, src)
}
func (m *PossibleSettingOptionsResponse) XXX_Size() int {
	return xxx_messageInfo_PossibleSettingOptionsResponse.Size(m)
}
func (m *PossibleSettingOptionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PossibleSettingOptionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PossibleSettingOptionsResponse proto.InternalMessageInfo

func (m *PossibleSettingOptionsResponse) GetSettingOptions() []*SettingOptions {
	if m != nil {
		return m.SettingOptions
	}
	return nil
}

type SetSettingRequest struct {
	Setting              *Setting `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSettingRequest) Reset()         { *m = SetSettingRequest{} }
func (m *SetSettingRequest) String() string { return proto.CompactTextString(m) }
func (*SetSettingRequest) ProtoMessage()    {}
func (*SetSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{28}
}

func (m *SetSettingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSettingRequest.Unmarshal(m, b)
}
func (m *SetSettingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSettingRequest.Marshal(b, m, deterministic)
}
func (m *SetSettingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSettingRequest.Merge(m, src)
}
func (m *SetSettingRequest) XXX_Size() int {
	return xxx_messageInfo_SetSettingRequest.Size(m)
}
func (m *SetSettingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSettingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetSettingRequest proto.InternalMessageInfo

func (m *SetSettingRequest) GetSetting() *Setting {
	if m != nil {
		return m.Setting
	}
	return nil
}

type SetSettingResponse struct {
	CameraResult         *CameraResult `protobuf:"bytes,1,opt,name=camera_result,json=cameraResult,proto3" json:"camera_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetSettingResponse) Reset()         { *m = SetSettingResponse{} }
func (m *SetSettingResponse) String() string { return proto.CompactTextString(m) }
func (*SetSettingResponse) ProtoMessage()    {}
func (*SetSettingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{29}
}

func (m *SetSettingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSettingResponse.Unmarshal(m, b)
}
func (m *SetSettingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSettingResponse.Marshal(b, m, deterministic)
}
func (m *SetSettingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSettingResponse.Merge(m, src)
}
func (m *SetSettingResponse) XXX_Size() int {
	return xxx_messageInfo_SetSettingResponse.Size(m)
}
func (m *SetSettingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSettingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetSettingResponse proto.InternalMessageInfo

func (m *SetSettingResponse) GetCameraResult() *CameraResult {
	if m != nil {
		return m.CameraResult
	}
	return nil
}

// Result type.
type CameraResult struct {
	Result               CameraResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.camera.CameraResult_Result" json:"result,omitempty"`
	ResultStr            string              `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CameraResult) Reset()         { *m = CameraResult{} }
func (m *CameraResult) String() string { return proto.CompactTextString(m) }
func (*CameraResult) ProtoMessage()    {}
func (*CameraResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{30}
}

func (m *CameraResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraResult.Unmarshal(m, b)
}
func (m *CameraResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraResult.Marshal(b, m, deterministic)
}
func (m *CameraResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraResult.Merge(m, src)
}
func (m *CameraResult) XXX_Size() int {
	return xxx_messageInfo_CameraResult.Size(m)
}
func (m *CameraResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraResult.DiscardUnknown(m)
}

var xxx_messageInfo_CameraResult proto.InternalMessageInfo

func (m *CameraResult) GetResult() CameraResult_Result {
	if m != nil {
		return m.Result
	}
	return CameraResult_UNKNOWN
}

func (m *CameraResult) GetResultStr() string {
	if m != nil {
		return m.ResultStr
	}
	return ""
}

// Information about a picture just captured.
type CaptureInfo struct {
	Position             *Position   `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	AttitudeQuaternion   *Quaternion `protobuf:"bytes,2,opt,name=attitude_quaternion,json=attitudeQuaternion,proto3" json:"attitude_quaternion,omitempty"`
	AttitudeEulerAngle   *EulerAngle `protobuf:"bytes,3,opt,name=attitude_euler_angle,json=attitudeEulerAngle,proto3" json:"attitude_euler_angle,omitempty"`
	TimeUtcUs            uint64      `protobuf:"varint,4,opt,name=time_utc_us,json=timeUtcUs,proto3" json:"time_utc_us,omitempty"`
	IsSuccess            bool        `protobuf:"varint,5,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Index                int32       `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	FileUrl              string      `protobuf:"bytes,7,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CaptureInfo) Reset()         { *m = CaptureInfo{} }
func (m *CaptureInfo) String() string { return proto.CompactTextString(m) }
func (*CaptureInfo) ProtoMessage()    {}
func (*CaptureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{31}
}

func (m *CaptureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureInfo.Unmarshal(m, b)
}
func (m *CaptureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureInfo.Marshal(b, m, deterministic)
}
func (m *CaptureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureInfo.Merge(m, src)
}
func (m *CaptureInfo) XXX_Size() int {
	return xxx_messageInfo_CaptureInfo.Size(m)
}
func (m *CaptureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureInfo proto.InternalMessageInfo

func (m *CaptureInfo) GetPosition() *Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CaptureInfo) GetAttitudeQuaternion() *Quaternion {
	if m != nil {
		return m.AttitudeQuaternion
	}
	return nil
}

func (m *CaptureInfo) GetAttitudeEulerAngle() *EulerAngle {
	if m != nil {
		return m.AttitudeEulerAngle
	}
	return nil
}

func (m *CaptureInfo) GetTimeUtcUs() uint64 {
	if m != nil {
		return m.TimeUtcUs
	}
	return 0
}

func (m *CaptureInfo) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *CaptureInfo) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *CaptureInfo) GetFileUrl() string {
	if m != nil {
		return m.FileUrl
	}
	return ""
}

// Position type in global coordinates.
type Position struct {
	LatitudeDeg          float64  `protobuf:"fixed64,1,opt,name=latitude_deg,json=latitudeDeg,proto3" json:"latitude_deg,omitempty"`
	LongitudeDeg         float64  `protobuf:"fixed64,2,opt,name=longitude_deg,json=longitudeDeg,proto3" json:"longitude_deg,omitempty"`
	AbsoluteAltitudeM    float32  `protobuf:"fixed32,3,opt,name=absolute_altitude_m,json=absoluteAltitudeM,proto3" json:"absolute_altitude_m,omitempty"`
	RelativeAltitudeM    float32  `protobuf:"fixed32,4,opt,name=relative_altitude_m,json=relativeAltitudeM,proto3" json:"relative_altitude_m,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{32}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetLatitudeDeg() float64 {
	if m != nil {
		return m.LatitudeDeg
	}
	return 0
}

func (m *Position) GetLongitudeDeg() float64 {
	if m != nil {
		return m.LongitudeDeg
	}
	return 0
}

func (m *Position) GetAbsoluteAltitudeM() float32 {
	if m != nil {
		return m.AbsoluteAltitudeM
	}
	return 0
}

func (m *Position) GetRelativeAltitudeM() float32 {
	if m != nil {
		return m.RelativeAltitudeM
	}
	return 0
}

//
// Quaternion type.
//
// All rotations and axis systems follow the right-hand rule.
// The Hamilton quaternion product definition is used.
// A zero-rotation quaternion is represented by (1,0,0,0).
// The quaternion could also be written as w + xi + yj + zk.
//
// For more info see: https://en.wikipedia.org/wiki/Quaternion
type Quaternion struct {
	W                    float32  `protobuf:"fixed32,1,opt,name=w,proto3" json:"w,omitempty"`
	X                    float32  `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Quaternion) Reset()         { *m = Quaternion{} }
func (m *Quaternion) String() string { return proto.CompactTextString(m) }
func (*Quaternion) ProtoMessage()    {}
func (*Quaternion) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{33}
}

func (m *Quaternion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quaternion.Unmarshal(m, b)
}
func (m *Quaternion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quaternion.Marshal(b, m, deterministic)
}
func (m *Quaternion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quaternion.Merge(m, src)
}
func (m *Quaternion) XXX_Size() int {
	return xxx_messageInfo_Quaternion.Size(m)
}
func (m *Quaternion) XXX_DiscardUnknown() {
	xxx_messageInfo_Quaternion.DiscardUnknown(m)
}

var xxx_messageInfo_Quaternion proto.InternalMessageInfo

func (m *Quaternion) GetW() float32 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *Quaternion) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Quaternion) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Quaternion) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

//
// Euler angle type.
//
// All rotations and axis systems follow the right-hand rule.
// The Euler angles follow the convention of a 3-2-1 intrinsic Tait-Bryan rotation sequence.
//
// For more info see https://en.wikipedia.org/wiki/Euler_angles
type EulerAngle struct {
	RollDeg              float32  `protobuf:"fixed32,1,opt,name=roll_deg,json=rollDeg,proto3" json:"roll_deg,omitempty"`
	PitchDeg             float32  `protobuf:"fixed32,2,opt,name=pitch_deg,json=pitchDeg,proto3" json:"pitch_deg,omitempty"`
	YawDeg               float32  `protobuf:"fixed32,3,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EulerAngle) Reset()         { *m = EulerAngle{} }
func (m *EulerAngle) String() string { return proto.CompactTextString(m) }
func (*EulerAngle) ProtoMessage()    {}
func (*EulerAngle) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{34}
}

func (m *EulerAngle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EulerAngle.Unmarshal(m, b)
}
func (m *EulerAngle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EulerAngle.Marshal(b, m, deterministic)
}
func (m *EulerAngle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EulerAngle.Merge(m, src)
}
func (m *EulerAngle) XXX_Size() int {
	return xxx_messageInfo_EulerAngle.Size(m)
}
func (m *EulerAngle) XXX_DiscardUnknown() {
	xxx_messageInfo_EulerAngle.DiscardUnknown(m)
}

var xxx_messageInfo_EulerAngle proto.InternalMessageInfo

func (m *EulerAngle) GetRollDeg() float32 {
	if m != nil {
		return m.RollDeg
	}
	return 0
}

func (m *EulerAngle) GetPitchDeg() float32 {
	if m != nil {
		return m.PitchDeg
	}
	return 0
}

func (m *EulerAngle) GetYawDeg() float32 {
	if m != nil {
		return m.YawDeg
	}
	return 0
}

// Type for video stream settings.
type VideoStreamSettings struct {
	FrameRateHz             float32  `protobuf:"fixed32,1,opt,name=frame_rate_hz,json=frameRateHz,proto3" json:"frame_rate_hz,omitempty"`
	HorizontalResolutionPix uint32   `protobuf:"varint,2,opt,name=horizontal_resolution_pix,json=horizontalResolutionPix,proto3" json:"horizontal_resolution_pix,omitempty"`
	VerticalResolutionPix   uint32   `protobuf:"varint,3,opt,name=vertical_resolution_pix,json=verticalResolutionPix,proto3" json:"vertical_resolution_pix,omitempty"`
	BitRateBS               uint32   `protobuf:"varint,4,opt,name=bit_rate_b_s,json=bitRateBS,proto3" json:"bit_rate_b_s,omitempty"`
	RotationDeg             uint32   `protobuf:"varint,5,opt,name=rotation_deg,json=rotationDeg,proto3" json:"rotation_deg,omitempty"`
	Uri                     string   `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *VideoStreamSettings) Reset()         { *m = VideoStreamSettings{} }
func (m *VideoStreamSettings) String() string { return proto.CompactTextString(m) }
func (*VideoStreamSettings) ProtoMessage()    {}
func (*VideoStreamSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{35}
}

func (m *VideoStreamSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoStreamSettings.Unmarshal(m, b)
}
func (m *VideoStreamSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoStreamSettings.Marshal(b, m, deterministic)
}
func (m *VideoStreamSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoStreamSettings.Merge(m, src)
}
func (m *VideoStreamSettings) XXX_Size() int {
	return xxx_messageInfo_VideoStreamSettings.Size(m)
}
func (m *VideoStreamSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoStreamSettings.DiscardUnknown(m)
}

var xxx_messageInfo_VideoStreamSettings proto.InternalMessageInfo

func (m *VideoStreamSettings) GetFrameRateHz() float32 {
	if m != nil {
		return m.FrameRateHz
	}
	return 0
}

func (m *VideoStreamSettings) GetHorizontalResolutionPix() uint32 {
	if m != nil {
		return m.HorizontalResolutionPix
	}
	return 0
}

func (m *VideoStreamSettings) GetVerticalResolutionPix() uint32 {
	if m != nil {
		return m.VerticalResolutionPix
	}
	return 0
}

func (m *VideoStreamSettings) GetBitRateBS() uint32 {
	if m != nil {
		return m.BitRateBS
	}
	return 0
}

func (m *VideoStreamSettings) GetRotationDeg() uint32 {
	if m != nil {
		return m.RotationDeg
	}
	return 0
}

func (m *VideoStreamSettings) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// Information about the video stream.
type VideoStreamInfo struct {
	VideoStreamSettings  *VideoStreamSettings              `protobuf:"bytes,1,opt,name=video_stream_settings,json=videoStreamSettings,proto3" json:"video_stream_settings,omitempty"`
	VideoStreamStatus    VideoStreamInfo_VideoStreamStatus `protobuf:"varint,2,opt,name=video_stream_status,json=videoStreamStatus,proto3,enum=mavsdk.rpc.camera.VideoStreamInfo_VideoStreamStatus" json:"video_stream_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *VideoStreamInfo) Reset()         { *m = VideoStreamInfo{} }
func (m *VideoStreamInfo) String() string { return proto.CompactTextString(m) }
func (*VideoStreamInfo) ProtoMessage()    {}
func (*VideoStreamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{36}
}

func (m *VideoStreamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoStreamInfo.Unmarshal(m, b)
}
func (m *VideoStreamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoStreamInfo.Marshal(b, m, deterministic)
}
func (m *VideoStreamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoStreamInfo.Merge(m, src)
}
func (m *VideoStreamInfo) XXX_Size() int {
	return xxx_messageInfo_VideoStreamInfo.Size(m)
}
func (m *VideoStreamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoStreamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VideoStreamInfo proto.InternalMessageInfo

func (m *VideoStreamInfo) GetVideoStreamSettings() *VideoStreamSettings {
	if m != nil {
		return m.VideoStreamSettings
	}
	return nil
}

func (m *VideoStreamInfo) GetVideoStreamStatus() VideoStreamInfo_VideoStreamStatus {
	if m != nil {
		return m.VideoStreamStatus
	}
	return VideoStreamInfo_NOT_RUNNING
}

// Information about the camera status.
type CameraStatus struct {
	VideoOn              bool                       `protobuf:"varint,1,opt,name=video_on,json=videoOn,proto3" json:"video_on,omitempty"`
	PhotoIntervalOn      bool                       `protobuf:"varint,2,opt,name=photo_interval_on,json=photoIntervalOn,proto3" json:"photo_interval_on,omitempty"`
	UsedStorageMib       float32                    `protobuf:"fixed32,3,opt,name=used_storage_mib,json=usedStorageMib,proto3" json:"used_storage_mib,omitempty"`
	AvailableStorageMib  float32                    `protobuf:"fixed32,4,opt,name=available_storage_mib,json=availableStorageMib,proto3" json:"available_storage_mib,omitempty"`
	TotalStorageMib      float32                    `protobuf:"fixed32,5,opt,name=total_storage_mib,json=totalStorageMib,proto3" json:"total_storage_mib,omitempty"`
	RecordingTimeS       float32                    `protobuf:"fixed32,6,opt,name=recording_time_s,json=recordingTimeS,proto3" json:"recording_time_s,omitempty"`
	MediaFolderName      string                     `protobuf:"bytes,7,opt,name=media_folder_name,json=mediaFolderName,proto3" json:"media_folder_name,omitempty"`
	StorageStatus        CameraStatus_StorageStatus `protobuf:"varint,8,opt,name=storage_status,json=storageStatus,proto3,enum=mavsdk.rpc.camera.CameraStatus_StorageStatus" json:"storage_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CameraStatus) Reset()         { *m = CameraStatus{} }
func (m *CameraStatus) String() string { return proto.CompactTextString(m) }
func (*CameraStatus) ProtoMessage()    {}
func (*CameraStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{37}
}

func (m *CameraStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraStatus.Unmarshal(m, b)
}
func (m *CameraStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraStatus.Marshal(b, m, deterministic)
}
func (m *CameraStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraStatus.Merge(m, src)
}
func (m *CameraStatus) XXX_Size() int {
	return xxx_messageInfo_CameraStatus.Size(m)
}
func (m *CameraStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CameraStatus proto.InternalMessageInfo

func (m *CameraStatus) GetVideoOn() bool {
	if m != nil {
		return m.VideoOn
	}
	return false
}

func (m *CameraStatus) GetPhotoIntervalOn() bool {
	if m != nil {
		return m.PhotoIntervalOn
	}
	return false
}

func (m *CameraStatus) GetUsedStorageMib() float32 {
	if m != nil {
		return m.UsedStorageMib
	}
	return 0
}

func (m *CameraStatus) GetAvailableStorageMib() float32 {
	if m != nil {
		return m.AvailableStorageMib
	}
	return 0
}

func (m *CameraStatus) GetTotalStorageMib() float32 {
	if m != nil {
		return m.TotalStorageMib
	}
	return 0
}

func (m *CameraStatus) GetRecordingTimeS() float32 {
	if m != nil {
		return m.RecordingTimeS
	}
	return 0
}

func (m *CameraStatus) GetMediaFolderName() string {
	if m != nil {
		return m.MediaFolderName
	}
	return ""
}

func (m *CameraStatus) GetStorageStatus() CameraStatus_StorageStatus {
	if m != nil {
		return m.StorageStatus
	}
	return CameraStatus_NOT_AVAILABLE
}

// Type to represent a setting with a selected option.
type Setting struct {
	SettingId            string   `protobuf:"bytes,1,opt,name=setting_id,json=settingId,proto3" json:"setting_id,omitempty"`
	SettingDescription   string   `protobuf:"bytes,2,opt,name=setting_description,json=settingDescription,proto3" json:"setting_description,omitempty"`
	Option               *Option  `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Setting) Reset()         { *m = Setting{} }
func (m *Setting) String() string { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()    {}
func (*Setting) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{38}
}

func (m *Setting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Setting.Unmarshal(m, b)
}
func (m *Setting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Setting.Marshal(b, m, deterministic)
}
func (m *Setting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Setting.Merge(m, src)
}
func (m *Setting) XXX_Size() int {
	return xxx_messageInfo_Setting.Size(m)
}
func (m *Setting) XXX_DiscardUnknown() {
	xxx_messageInfo_Setting.DiscardUnknown(m)
}

var xxx_messageInfo_Setting proto.InternalMessageInfo

func (m *Setting) GetSettingId() string {
	if m != nil {
		return m.SettingId
	}
	return ""
}

func (m *Setting) GetSettingDescription() string {
	if m != nil {
		return m.SettingDescription
	}
	return ""
}

func (m *Setting) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

// Type to represent a setting option.
type Option struct {
	OptionId             string   `protobuf:"bytes,1,opt,name=option_id,json=optionId,proto3" json:"option_id,omitempty"`
	OptionDescription    string   `protobuf:"bytes,2,opt,name=option_description,json=optionDescription,proto3" json:"option_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{39}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetOptionId() string {
	if m != nil {
		return m.OptionId
	}
	return ""
}

func (m *Option) GetOptionDescription() string {
	if m != nil {
		return m.OptionDescription
	}
	return ""
}

// Type to represent a setting with a list of options to choose from.
type SettingOptions struct {
	SettingId            string    `protobuf:"bytes,1,opt,name=setting_id,json=settingId,proto3" json:"setting_id,omitempty"`
	SettingDescription   string    `protobuf:"bytes,2,opt,name=setting_description,json=settingDescription,proto3" json:"setting_description,omitempty"`
	Options              []*Option `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SettingOptions) Reset()         { *m = SettingOptions{} }
func (m *SettingOptions) String() string { return proto.CompactTextString(m) }
func (*SettingOptions) ProtoMessage()    {}
func (*SettingOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_20f912bc4482b455, []int{40}
}

func (m *SettingOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingOptions.Unmarshal(m, b)
}
func (m *SettingOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingOptions.Marshal(b, m, deterministic)
}
func (m *SettingOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingOptions.Merge(m, src)
}
func (m *SettingOptions) XXX_Size() int {
	return xxx_messageInfo_SettingOptions.Size(m)
}
func (m *SettingOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SettingOptions proto.InternalMessageInfo

func (m *SettingOptions) GetSettingId() string {
	if m != nil {
		return m.SettingId
	}
	return ""
}

func (m *SettingOptions) GetSettingDescription() string {
	if m != nil {
		return m.SettingDescription
	}
	return ""
}

func (m *SettingOptions) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterEnum("mavsdk.rpc.camera.CameraMode", CameraMode_name, CameraMode_value)
	proto.RegisterEnum("mavsdk.rpc.camera.CameraResult_Result", CameraResult_Result_name, CameraResult_Result_value)
	proto.RegisterEnum("mavsdk.rpc.camera.VideoStreamInfo_VideoStreamStatus", VideoStreamInfo_VideoStreamStatus_name, VideoStreamInfo_VideoStreamStatus_value)
	proto.RegisterEnum("mavsdk.rpc.camera.CameraStatus_StorageStatus", CameraStatus_StorageStatus_name, CameraStatus_StorageStatus_value)
	proto.RegisterType((*TakePhotoRequest)(nil), "mavsdk.rpc.camera.TakePhotoRequest")
	proto.RegisterType((*TakePhotoResponse)(nil), "mavsdk.rpc.camera.TakePhotoResponse")
	proto.RegisterType((*StartPhotoIntervalRequest)(nil), "mavsdk.rpc.camera.StartPhotoIntervalRequest")
	proto.RegisterType((*StartPhotoIntervalResponse)(nil), "mavsdk.rpc.camera.StartPhotoIntervalResponse")
	proto.RegisterType((*StopPhotoIntervalRequest)(nil), "mavsdk.rpc.camera.StopPhotoIntervalRequest")
	proto.RegisterType((*StopPhotoIntervalResponse)(nil), "mavsdk.rpc.camera.StopPhotoIntervalResponse")
	proto.RegisterType((*StartVideoRequest)(nil), "mavsdk.rpc.camera.StartVideoRequest")
	proto.RegisterType((*StartVideoResponse)(nil), "mavsdk.rpc.camera.StartVideoResponse")
	proto.RegisterType((*StopVideoRequest)(nil), "mavsdk.rpc.camera.StopVideoRequest")
	proto.RegisterType((*StopVideoResponse)(nil), "mavsdk.rpc.camera.StopVideoResponse")
	proto.RegisterType((*StartVideoStreamingRequest)(nil), "mavsdk.rpc.camera.StartVideoStreamingRequest")
	proto.RegisterType((*StartVideoStreamingResponse)(nil), "mavsdk.rpc.camera.StartVideoStreamingResponse")
	proto.RegisterType((*StopVideoStreamingRequest)(nil), "mavsdk.rpc.camera.StopVideoStreamingRequest")
	proto.RegisterType((*StopVideoStreamingResponse)(nil), "mavsdk.rpc.camera.StopVideoStreamingResponse")
	proto.RegisterType((*SetModeRequest)(nil), "mavsdk.rpc.camera.SetModeRequest")
	proto.RegisterType((*SetModeResponse)(nil), "mavsdk.rpc.camera.SetModeResponse")
	proto.RegisterType((*SubscribeModeRequest)(nil), "mavsdk.rpc.camera.SubscribeModeRequest")
	proto.RegisterType((*ModeResponse)(nil), "mavsdk.rpc.camera.ModeResponse")
	proto.RegisterType((*SubscribeVideoStreamInfoRequest)(nil), "mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest")
	proto.RegisterType((*VideoStreamInfoResponse)(nil), "mavsdk.rpc.camera.VideoStreamInfoResponse")
	proto.RegisterType((*SubscribeCaptureInfoRequest)(nil), "mavsdk.rpc.camera.SubscribeCaptureInfoRequest")
	proto.RegisterType((*CaptureInfoResponse)(nil), "mavsdk.rpc.camera.CaptureInfoResponse")
	proto.RegisterType((*SubscribeCameraStatusRequest)(nil), "mavsdk.rpc.camera.SubscribeCameraStatusRequest")
	proto.RegisterType((*CameraStatusResponse)(nil), "mavsdk.rpc.camera.CameraStatusResponse")
	proto.RegisterType((*SubscribeCurrentSettingsRequest)(nil), "mavsdk.rpc.camera.SubscribeCurrentSettingsRequest")
	proto.RegisterType((*CurrentSettingsResponse)(nil), "mavsdk.rpc.camera.CurrentSettingsResponse")
	proto.RegisterType((*SubscribePossibleSettingOptionsRequest)(nil), "mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest")
	proto.RegisterType((*PossibleSettingOptionsResponse)(nil), "mavsdk.rpc.camera.PossibleSettingOptionsResponse")
	proto.RegisterType((*SetSettingRequest)(nil), "mavsdk.rpc.camera.SetSettingRequest")
	proto.RegisterType((*SetSettingResponse)(nil), "mavsdk.rpc.camera.SetSettingResponse")
	proto.RegisterType((*CameraResult)(nil), "mavsdk.rpc.camera.CameraResult")
	proto.RegisterType((*CaptureInfo)(nil), "mavsdk.rpc.camera.CaptureInfo")
	proto.RegisterType((*Position)(nil), "mavsdk.rpc.camera.Position")
	proto.RegisterType((*Quaternion)(nil), "mavsdk.rpc.camera.Quaternion")
	proto.RegisterType((*EulerAngle)(nil), "mavsdk.rpc.camera.EulerAngle")
	proto.RegisterType((*VideoStreamSettings)(nil), "mavsdk.rpc.camera.VideoStreamSettings")
	proto.RegisterType((*VideoStreamInfo)(nil), "mavsdk.rpc.camera.VideoStreamInfo")
	proto.RegisterType((*CameraStatus)(nil), "mavsdk.rpc.camera.CameraStatus")
	proto.RegisterType((*Setting)(nil), "mavsdk.rpc.camera.Setting")
	proto.RegisterType((*Option)(nil), "mavsdk.rpc.camera.Option")
	proto.RegisterType((*SettingOptions)(nil), "mavsdk.rpc.camera.SettingOptions")
}

func init() {
	proto.RegisterFile("MAVSDK-Proto/protos/camera/camera.proto", fileDescriptor_20f912bc4482b455)
}

var fileDescriptor_20f912bc4482b455 = []byte{
	// 1883 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x5f, 0x73, 0xdb, 0xc6,
	0x11, 0x37, 0x28, 0x8b, 0x7f, 0x96, 0xa2, 0x08, 0x1e, 0xed, 0x8a, 0xa2, 0x62, 0x5b, 0x46, 0x5c,
	0x9b, 0xe3, 0x5a, 0x54, 0xa3, 0xa4, 0xed, 0x34, 0x0f, 0x99, 0xa1, 0x44, 0xc6, 0x61, 0x13, 0x91,
	0xea, 0x81, 0xf4, 0x9f, 0xb4, 0x19, 0x14, 0x04, 0x4f, 0x32, 0x26, 0x20, 0xc0, 0x00, 0x07, 0xda,
	0xd6, 0x43, 0x5f, 0x3a, 0x7d, 0xe9, 0xf4, 0xad, 0xd3, 0x2f, 0xd2, 0x2f, 0xd2, 0xc7, 0x7e, 0x81,
	0x7e, 0x90, 0xce, 0x1d, 0x0e, 0x20, 0x40, 0x82, 0x94, 0x66, 0xca, 0x17, 0x89, 0xb7, 0xfb, 0xbb,
	0xdd, 0xdf, 0xdd, 0x1e, 0xf6, 0x6e, 0x17, 0x9e, 0x9d, 0xb7, 0x5e, 0xa9, 0xed, 0x6f, 0x8f, 0x2e,
	0x5c, 0x87, 0x3a, 0xc7, 0x53, 0xf6, 0xd7, 0x3b, 0x36, 0xf4, 0x09, 0x71, 0x75, 0xf1, 0xaf, 0xc9,
	0x85, 0xa8, 0x32, 0xd1, 0x67, 0xde, 0xf8, 0xc7, 0xa6, 0x3b, 0x35, 0x9a, 0x81, 0x42, 0x41, 0x20,
	0x0f, 0xf4, 0x1f, 0xc9, 0xc5, 0x3b, 0x87, 0x3a, 0x98, 0xfc, 0xe4, 0x13, 0x8f, 0x2a, 0x6f, 0xa1,
	0x12, 0x93, 0x79, 0x53, 0xc7, 0xf6, 0x08, 0x6a, 0x43, 0x29, 0x98, 0xa2, 0xb9, 0xc4, 0xf3, 0x2d,
	0x5a, 0x93, 0x0e, 0xa5, 0x46, 0xf1, 0xe4, 0x51, 0x73, 0xc9, 0x66, 0xf3, 0x8c, 0xff, 0xc3, 0x1c,
	0x86, 0x77, 0x8c, 0xd8, 0x48, 0xf9, 0x12, 0xf6, 0x55, 0xaa, 0xbb, 0x94, 0xdb, 0xee, 0xda, 0x94,
	0xb8, 0x33, 0xdd, 0x12, 0x7e, 0xd1, 0x03, 0x00, 0x53, 0x88, 0x34, 0x8f, 0xdb, 0xcf, 0xe0, 0x42,
	0x28, 0x51, 0x95, 0x11, 0xd4, 0xd3, 0xe6, 0x6e, 0x94, 0x5f, 0x1d, 0x6a, 0x2a, 0x75, 0xa6, 0x69,
	0xf4, 0x14, 0x9d, 0x71, 0x5f, 0xd2, 0x6d, 0xd4, 0x7d, 0x15, 0x2a, 0x7c, 0x89, 0xaf, 0xcc, 0x31,
	0x89, 0xc2, 0xf1, 0x3d, 0xa0, 0xb8, 0x70, 0xa3, 0x0e, 0x11, 0xc8, 0x6c, 0x4d, 0x09, 0x7f, 0x6f,
	0x19, 0x89, 0x48, 0xb6, 0x51, 0x77, 0x9f, 0x88, 0x10, 0x72, 0xdb, 0x2a, 0x75, 0x89, 0x3e, 0x31,
	0xed, 0xab, 0xd0, 0xb1, 0x01, 0x07, 0xa9, 0xda, 0x8d, 0x52, 0x38, 0x08, 0xa2, 0x98, 0xce, 0x80,
	0x1f, 0xb1, 0x65, 0xe5, 0x46, 0x09, 0x5c, 0xc0, 0xae, 0x4a, 0xe8, 0xb9, 0x33, 0x26, 0xe1, 0xb9,
	0xff, 0x0a, 0x8a, 0xc2, 0xee, 0xc4, 0x19, 0x13, 0x6e, 0x75, 0xf7, 0xe4, 0xc1, 0x4a, 0xab, 0x7c,
	0x2a, 0x18, 0xd1, 0x6f, 0xe5, 0x35, 0x94, 0x23, 0x8b, 0x1b, 0xa5, 0xfa, 0x33, 0xb8, 0xa7, 0xfa,
	0x23, 0xcf, 0x70, 0xcd, 0x11, 0x89, 0x11, 0x56, 0x7a, 0xb0, 0x93, 0xf0, 0xf6, 0xff, 0x2e, 0xe0,
	0x31, 0x3c, 0x8a, 0xfc, 0xc4, 0xf6, 0xbe, 0x6b, 0x5f, 0x46, 0x87, 0xd2, 0x84, 0xbd, 0x25, 0x8d,
	0xf0, 0xde, 0x83, 0xca, 0x8c, 0xa9, 0x34, 0x8f, 0xeb, 0x34, 0xd3, 0xbe, 0x74, 0xc4, 0x7a, 0x95,
	0x14, 0x0e, 0x8b, 0x66, 0xca, 0xb3, 0xa4, 0x40, 0x79, 0x00, 0x07, 0x11, 0x9b, 0x33, 0x7d, 0x4a,
	0x7d, 0x97, 0xc4, 0x99, 0xbc, 0x81, 0x6a, 0x42, 0x2a, 0x58, 0xb4, 0x60, 0xc7, 0x08, 0xc4, 0x71,
	0x02, 0x0f, 0x53, 0x37, 0x61, 0x3e, 0xbb, 0x68, 0xcc, 0x07, 0xca, 0x43, 0xf8, 0x24, 0xe6, 0x98,
	0x61, 0x55, 0xaa, 0x53, 0xdf, 0x0b, 0x3d, 0xff, 0x11, 0xee, 0x25, 0xc5, 0x4b, 0xc1, 0xf6, 0xb8,
	0xe2, 0xc6, 0x60, 0x8b, 0xf9, 0x22, 0xd8, 0xc1, 0x28, 0x11, 0x84, 0x33, 0xdf, 0x75, 0x89, 0x4d,
	0x55, 0x42, 0xa9, 0x69, 0x5f, 0x45, 0x04, 0xfe, 0x04, 0x7b, 0x4b, 0x1a, 0xc1, 0xa1, 0x03, 0xb2,
	0x11, 0xa8, 0x34, 0x4f, 0xe8, 0x6a, 0xd2, 0xe1, 0x56, 0xa3, 0x78, 0x52, 0x4f, 0xa1, 0x21, 0xa6,
	0xe3, 0xb2, 0x91, 0x34, 0xa7, 0x34, 0xe0, 0x69, 0x44, 0xe2, 0xc2, 0xf1, 0x3c, 0x73, 0x64, 0x11,
	0xa1, 0xec, 0x4f, 0xa9, 0xe9, 0xd8, 0x11, 0x17, 0x0b, 0x1e, 0xae, 0x02, 0x08, 0x4a, 0xbf, 0x83,
	0xb2, 0xa0, 0xa2, 0x39, 0x81, 0x4a, 0x30, 0x7a, 0xbc, 0x9a, 0x51, 0x68, 0x63, 0xd7, 0x4b, 0x8c,
	0x95, 0x2e, 0x54, 0x54, 0x12, 0xd2, 0x0c, 0xbf, 0xdb, 0x2f, 0x20, 0x27, 0x60, 0x62, 0xc7, 0xd7,
	0x2d, 0x35, 0x84, 0xf2, 0x74, 0x1e, 0x33, 0xb5, 0xd1, 0x0f, 0xf6, 0xbf, 0x12, 0xec, 0xc4, 0xd5,
	0xe8, 0x2b, 0xc8, 0xc6, 0xec, 0xed, 0x9e, 0x3c, 0xbd, 0xc1, 0x5e, 0x53, 0x98, 0x15, 0xb3, 0xd8,
	0x95, 0x1c, 0xfc, 0x62, 0x1f, 0x57, 0x2d, 0x73, 0x28, 0x35, 0x0a, 0xb8, 0x10, 0x48, 0x54, 0xea,
	0x2a, 0x3e, 0x64, 0x85, 0xa3, 0x22, 0xe4, 0x86, 0xbd, 0x6f, 0x7b, 0xfd, 0xd7, 0x3d, 0xf9, 0x0e,
	0x1b, 0xa8, 0xc3, 0xb3, 0xb3, 0x8e, 0xaa, 0xca, 0x12, 0x2a, 0x43, 0xb1, 0xdb, 0xd3, 0x2e, 0x70,
	0xff, 0x25, 0x66, 0x82, 0x0c, 0xca, 0xc3, 0xdd, 0xd3, 0xa1, 0xfa, 0x56, 0xde, 0x42, 0x00, 0xd9,
	0x76, 0xa7, 0xd7, 0xed, 0xb4, 0xe5, 0xbb, 0xa8, 0x00, 0xdb, 0x1d, 0x8c, 0xfb, 0x58, 0xde, 0x66,
	0xd3, 0x07, 0xdd, 0xf3, 0x4e, 0x7f, 0x38, 0x90, 0xb3, 0x08, 0xc1, 0xee, 0x6b, 0xdc, 0xef, 0xbd,
	0xd4, 0x5a, 0xf8, 0xe5, 0xf0, 0xbc, 0xd3, 0x1b, 0xc8, 0x39, 0xe5, 0x3f, 0x19, 0x28, 0xc6, 0xbe,
	0x22, 0xf4, 0x1b, 0xc8, 0x4f, 0x1d, 0xcf, 0x64, 0xa1, 0x12, 0xfb, 0x76, 0x90, 0xb2, 0xce, 0x0b,
	0x01, 0xc1, 0x11, 0x18, 0xf5, 0xa0, 0xaa, 0x53, 0x6a, 0x52, 0x7f, 0x4c, 0xb4, 0x9f, 0x7c, 0x9d,
	0x12, 0xd7, 0x66, 0x36, 0x32, 0xdc, 0x46, 0x5a, 0x02, 0xfb, 0x7d, 0x04, 0xc2, 0x28, 0x9c, 0x39,
	0x97, 0xa1, 0x3e, 0xdc, 0x8b, 0xec, 0x11, 0xdf, 0x22, 0xae, 0xa6, 0xdb, 0x57, 0x16, 0xa9, 0x6d,
	0xad, 0x34, 0xd8, 0x61, 0xa8, 0x16, 0x03, 0xcd, 0x0d, 0xce, 0x65, 0xe8, 0x21, 0x14, 0xa9, 0x39,
	0x21, 0x9a, 0x4f, 0x0d, 0xcd, 0xf7, 0x6a, 0x77, 0x0f, 0xa5, 0xc6, 0x5d, 0x5c, 0x60, 0xa2, 0x21,
	0x35, 0x86, 0x1e, 0x7f, 0x32, 0x79, 0x9a, 0xe7, 0x1b, 0x06, 0xf1, 0xbc, 0xda, 0xf6, 0xa1, 0xd4,
	0xc8, 0xe3, 0x82, 0xe9, 0xa9, 0x81, 0x00, 0xdd, 0x83, 0x6d, 0xd3, 0x1e, 0x93, 0x0f, 0xb5, 0xec,
	0xa1, 0xd4, 0xd8, 0xc6, 0xc1, 0x00, 0xed, 0x43, 0xfe, 0xd2, 0xb4, 0x88, 0xe6, 0xbb, 0x56, 0x2d,
	0xc7, 0x43, 0x9a, 0x63, 0xe3, 0xa1, 0x6b, 0x29, 0xff, 0x92, 0x20, 0x1f, 0xee, 0x13, 0x7a, 0x0c,
	0x3b, 0x96, 0x2e, 0x56, 0x33, 0x26, 0xc1, 0x21, 0x97, 0x70, 0x31, 0x94, 0xb5, 0xc9, 0x15, 0xfa,
	0x14, 0x4a, 0x96, 0x63, 0x5f, 0xcd, 0x31, 0x19, 0x8e, 0xd9, 0x89, 0x84, 0x0c, 0xd4, 0x84, 0xaa,
	0x3e, 0xf2, 0x1c, 0xcb, 0xa7, 0x44, 0xd3, 0x2d, 0x61, 0x70, 0xc2, 0x37, 0x25, 0x83, 0x2b, 0xa1,
	0xaa, 0x25, 0x34, 0xe7, 0x0c, 0xef, 0x12, 0xe6, 0x65, 0x96, 0xc0, 0xdf, 0x0d, 0xf0, 0xa1, 0x2a,
	0xc2, 0x2b, 0x6d, 0x80, 0x58, 0x0c, 0x76, 0x40, 0x7a, 0x2f, 0x1e, 0x8f, 0xd2, 0x7b, 0x36, 0xfa,
	0xc0, 0x49, 0x65, 0xb0, 0xf4, 0x81, 0x8d, 0x3e, 0x0a, 0xbf, 0xd2, 0x47, 0x36, 0xba, 0x16, 0x56,
	0xa5, 0x6b, 0xe5, 0x07, 0x80, 0xd8, 0xc6, 0xef, 0x43, 0xde, 0x75, 0x2c, 0x2b, 0x5a, 0x77, 0x06,
	0xe7, 0xd8, 0x98, 0x2d, 0xe7, 0x00, 0x0a, 0x53, 0x93, 0x1a, 0xef, 0xa2, 0xf5, 0x66, 0x70, 0x9e,
	0x0b, 0x98, 0x72, 0x0f, 0x72, 0x1f, 0xf5, 0xf7, 0x5c, 0x15, 0xf8, 0xc9, 0x7e, 0xd4, 0xdf, 0xb7,
	0xc9, 0x95, 0xf2, 0x97, 0x0c, 0x54, 0x63, 0x57, 0x4f, 0x98, 0xf1, 0x90, 0x02, 0xa5, 0x4b, 0x57,
	0x9f, 0x10, 0xcd, 0xd5, 0x29, 0xd1, 0xde, 0x5d, 0x0b, 0x6f, 0x45, 0x2e, 0xc4, 0x3a, 0x25, 0xdf,
	0x5c, 0xa3, 0x2f, 0x61, 0xff, 0x9d, 0xe3, 0x9a, 0xd7, 0x8e, 0x4d, 0x75, 0x8b, 0x25, 0x08, 0xb6,
	0x61, 0xa6, 0x63, 0x6b, 0x53, 0x33, 0x58, 0x5c, 0x09, 0xef, 0xcd, 0x01, 0x38, 0xd2, 0x5f, 0x98,
	0x1f, 0xd0, 0xaf, 0x61, 0x6f, 0x46, 0x5c, 0x6a, 0x1a, 0xcb, 0x33, 0xb7, 0xf8, 0xcc, 0xfb, 0xa1,
	0x3a, 0x39, 0xef, 0x11, 0xec, 0x8c, 0x4c, 0x1a, 0xb0, 0x1a, 0x69, 0xc1, 0xd1, 0x2b, 0xe1, 0xc2,
	0xc8, 0xa4, 0x8c, 0xd4, 0xa9, 0xca, 0x4e, 0x87, 0xeb, 0x50, 0x9d, 0x5b, 0x63, 0xcb, 0xdd, 0xe6,
	0x80, 0x62, 0x28, 0x63, 0x9b, 0x21, 0xc3, 0x96, 0xef, 0x9a, 0xfc, 0xf0, 0x15, 0x30, 0xfb, 0xa9,
	0xfc, 0x2d, 0x03, 0xe5, 0x85, 0x0b, 0x18, 0x7d, 0x0f, 0xf7, 0x13, 0xf7, 0x77, 0xec, 0xfe, 0x60,
	0x5f, 0xcd, 0xd3, 0xf5, 0x77, 0x78, 0x74, 0x13, 0x55, 0x67, 0x29, 0xbb, 0x3b, 0x86, 0x6a, 0xd2,
	0x76, 0x70, 0x41, 0x66, 0x78, 0x32, 0xfc, 0xe2, 0xe6, 0xd7, 0x41, 0xc2, 0x53, 0x70, 0x6b, 0x56,
	0x66, 0x8b, 0x22, 0xe5, 0x57, 0x50, 0x59, 0xc2, 0xb1, 0xbc, 0xd7, 0xeb, 0x0f, 0x34, 0x3c, 0xec,
	0xf5, 0xba, 0xbd, 0x97, 0xf2, 0x9d, 0xc5, 0x44, 0x28, 0x29, 0xff, 0xde, 0x0a, 0xb3, 0xb5, 0x98,
	0xb2, 0x0f, 0xf9, 0x80, 0xad, 0xc8, 0x63, 0x79, 0x9c, 0xe3, 0xe3, 0xbe, 0x8d, 0x9e, 0x43, 0x65,
	0xca, 0x0a, 0x0f, 0x2d, 0xaa, 0x90, 0x44, 0x9e, 0xca, 0xe3, 0xf2, 0x34, 0x5e, 0x91, 0xf4, 0x6d,
	0xd4, 0x00, 0xd9, 0xf7, 0xc8, 0x58, 0xf3, 0xa8, 0xe3, 0xea, 0x57, 0x44, 0x9b, 0x98, 0x23, 0x71,
	0x18, 0x77, 0x99, 0x5c, 0x0d, 0xc4, 0xe7, 0xe6, 0x08, 0x9d, 0xc0, 0x7d, 0x7d, 0xa6, 0x9b, 0x96,
	0x3e, 0xb2, 0x48, 0x02, 0x1e, 0x7c, 0x15, 0xd5, 0x48, 0x19, 0x9b, 0xf3, 0x1c, 0x2a, 0xd4, 0x61,
	0xe7, 0x30, 0x8e, 0xdf, 0xe6, 0xf8, 0x32, 0x57, 0xc4, 0xb0, 0x0d, 0x90, 0x5d, 0x62, 0x38, 0xee,
	0x98, 0x5d, 0xc2, 0x3c, 0x91, 0x79, 0xfc, 0x34, 0x64, 0xf0, 0x6e, 0x24, 0x1f, 0x98, 0x13, 0xa2,
	0x32, 0xab, 0x13, 0x32, 0x36, 0x75, 0xed, 0xd2, 0xb1, 0xc6, 0xc4, 0xd5, 0x6c, 0x7d, 0x42, 0x44,
	0x72, 0x2a, 0x73, 0xc5, 0xd7, 0x5c, 0xde, 0xd3, 0x27, 0x04, 0x0d, 0x60, 0x37, 0xf4, 0x2d, 0xe2,
	0x99, 0xe7, 0xf1, 0x3c, 0xba, 0xe1, 0xc1, 0xd3, 0x14, 0xcc, 0x44, 0x20, 0x4b, 0x5e, 0x7c, 0xa8,
	0x9c, 0x42, 0x29, 0xa1, 0x47, 0x15, 0x28, 0xb1, 0x00, 0xb6, 0x5e, 0xb5, 0xba, 0xdf, 0xb5, 0x4e,
	0xbf, 0xeb, 0x04, 0x21, 0x1c, 0xf6, 0xbe, 0xee, 0xe3, 0xf3, 0xd6, 0x60, 0xd0, 0x69, 0xcb, 0x12,
	0x2a, 0x41, 0x61, 0x3e, 0xcc, 0x28, 0x7f, 0x97, 0x20, 0x27, 0xce, 0x1e, 0x4b, 0xcd, 0xe1, 0xf3,
	0xc3, 0x1c, 0xf3, 0x70, 0x16, 0x70, 0x41, 0x48, 0xba, 0x63, 0x74, 0x0c, 0xd5, 0x50, 0x3d, 0x26,
	0xec, 0xc1, 0xc3, 0x5f, 0x1a, 0xe2, 0x8a, 0x45, 0x42, 0xd5, 0x9e, 0x6b, 0xd0, 0x67, 0x90, 0x0d,
	0x9e, 0x31, 0xe2, 0x36, 0xd9, 0x4f, 0x59, 0x6d, 0xf0, 0x5c, 0xc1, 0x02, 0xa8, 0x0c, 0x20, 0x1b,
	0x48, 0x58, 0xce, 0x0a, 0x64, 0x73, 0x2e, 0xf9, 0x40, 0xd0, 0x1d, 0xa3, 0x23, 0x40, 0x42, 0xb9,
	0xcc, 0xa4, 0x12, 0x68, 0x62, 0x44, 0x94, 0x7f, 0x4a, 0xbc, 0x82, 0x89, 0x3d, 0x8f, 0x36, 0xbe,
	0xd6, 0xcf, 0x21, 0x17, 0x3e, 0xd9, 0xb6, 0xf8, 0x93, 0x6d, 0xcd, 0x62, 0x43, 0xe4, 0xf3, 0x63,
	0x80, 0x79, 0x7d, 0x91, 0x7c, 0x90, 0x14, 0x60, 0xfb, 0xe2, 0x9b, 0xfe, 0xa0, 0x2f, 0x4b, 0xec,
	0xe7, 0xab, 0x6e, 0xbb, 0xd3, 0x97, 0x33, 0x27, 0x7f, 0x2d, 0x41, 0x49, 0x9c, 0x0f, 0xe2, 0xce,
	0x4c, 0x83, 0xa0, 0x37, 0x50, 0x88, 0x3a, 0x1f, 0xe8, 0xd3, 0x14, 0x9f, 0x8b, 0xbd, 0x92, 0xfa,
	0x93, 0xf5, 0xa0, 0xe0, 0x75, 0xa7, 0xdc, 0x41, 0x9e, 0x28, 0xe2, 0x13, 0xdd, 0x03, 0xf4, 0x22,
	0xed, 0xc1, 0xb8, 0xaa, 0x3f, 0x52, 0x3f, 0xba, 0x25, 0x3a, 0x72, 0x3a, 0x0d, 0x2a, 0xf9, 0xa4,
	0xcf, 0x5f, 0xa4, 0x5a, 0x49, 0xef, 0x79, 0xd4, 0x5f, 0xdc, 0x0e, 0x1c, 0x79, 0xfc, 0x03, 0xc0,
	0xbc, 0x84, 0x47, 0x4f, 0x56, 0x11, 0x8e, 0xf7, 0x1b, 0xea, 0x3f, 0xbf, 0x01, 0x15, 0x19, 0x7f,
	0x03, 0x85, 0xa8, 0x3a, 0x4f, 0x8d, 0xce, 0x62, 0x2b, 0xa3, 0xfe, 0x64, 0x3d, 0x28, 0xb2, 0x3c,
	0x83, 0x6a, 0x4a, 0xe7, 0x01, 0x1d, 0xad, 0x65, 0xb6, 0xd8, 0x3d, 0xa8, 0x37, 0x6f, 0x0b, 0x4f,
	0x9e, 0x8a, 0xc5, 0x7e, 0x03, 0x7a, 0xb1, 0x8e, 0xf5, 0x92, 0xd7, 0xa3, 0x5b, 0xa2, 0x23, 0xa7,
	0x98, 0xe7, 0x28, 0xfe, 0x91, 0xac, 0xa8, 0x84, 0x62, 0xb5, 0x7e, 0x5d, 0x59, 0x07, 0x89, 0x6c,
	0xfe, 0x00, 0xa5, 0x44, 0xa7, 0x00, 0x3d, 0x4b, 0x9b, 0x96, 0xd2, 0x4b, 0xa8, 0xa7, 0x55, 0x38,
	0x49, 0xe3, 0xbf, 0x94, 0xd0, 0x9f, 0xa1, 0xb6, 0xaa, 0x41, 0x80, 0x4e, 0xd6, 0x79, 0x4a, 0xef,
	0x26, 0xd4, 0x9f, 0xdf, 0xa2, 0x2f, 0x10, 0xf7, 0xef, 0xc6, 0x1a, 0x21, 0xf1, 0xc2, 0xa3, 0xb9,
	0xce, 0xf7, 0x72, 0xef, 0xa0, 0xfe, 0xf4, 0x86, 0x76, 0x40, 0xdc, 0xa7, 0x0f, 0xf7, 0x53, 0xbb,
	0x01, 0xe8, 0x78, 0xbd, 0xd3, 0xa5, 0xbe, 0x41, 0xfd, 0xd9, 0x4d, 0x8d, 0x80, 0x55, 0x5b, 0xbd,
	0x50, 0xec, 0xaf, 0xdf, 0xea, 0xf4, 0x9e, 0x41, 0xea, 0x56, 0xaf, 0x68, 0x22, 0x70, 0xff, 0xff,
	0x90, 0x62, 0x7d, 0x88, 0xf4, 0x0a, 0x1f, 0xfd, 0x76, 0x1d, 0x8f, 0xb5, 0x6d, 0x83, 0xfa, 0x67,
	0xe9, 0x85, 0xe1, 0x9a, 0x3e, 0x02, 0x67, 0xc5, 0xf2, 0x5a, 0x54, 0xb4, 0xa7, 0xe7, 0xb5, 0xc5,
	0xf6, 0x40, 0x7a, 0x5e, 0x5b, 0xaa, 0xfc, 0x95, 0x3b, 0xa7, 0x8f, 0x40, 0x36, 0x9d, 0x10, 0x1c,
	0x00, 0x4f, 0x8b, 0x41, 0x80, 0x78, 0x4b, 0x7f, 0x94, 0xe5, 0xed, 0xfb, 0xcf, 0xff, 0x17, 0x00,
	0x00, 0xff, 0xff, 0x07, 0xda, 0xac, 0x08, 0xe9, 0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CameraServiceClient is the client API for CameraService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CameraServiceClient interface {
	//
	// Take one photo.
	TakePhoto(ctx context.Context, in *TakePhotoRequest, opts ...grpc.CallOption) (*TakePhotoResponse, error)
	//
	// Start photo timelapse with a given interval.
	StartPhotoInterval(ctx context.Context, in *StartPhotoIntervalRequest, opts ...grpc.CallOption) (*StartPhotoIntervalResponse, error)
	//
	// Stop a running photo timelapse.
	StopPhotoInterval(ctx context.Context, in *StopPhotoIntervalRequest, opts ...grpc.CallOption) (*StopPhotoIntervalResponse, error)
	//
	// Start a video recording.
	StartVideo(ctx context.Context, in *StartVideoRequest, opts ...grpc.CallOption) (*StartVideoResponse, error)
	//
	// Stop a running video recording.
	StopVideo(ctx context.Context, in *StopVideoRequest, opts ...grpc.CallOption) (*StopVideoResponse, error)
	//
	// Start video streaming.
	StartVideoStreaming(ctx context.Context, in *StartVideoStreamingRequest, opts ...grpc.CallOption) (*StartVideoStreamingResponse, error)
	//
	// Stop current video streaming.
	StopVideoStreaming(ctx context.Context, in *StopVideoStreamingRequest, opts ...grpc.CallOption) (*StopVideoStreamingResponse, error)
	//
	// Set camera mode.
	SetMode(ctx context.Context, in *SetModeRequest, opts ...grpc.CallOption) (*SetModeResponse, error)
	//
	// Subscribe to camera mode updates.
	SubscribeMode(ctx context.Context, in *SubscribeModeRequest, opts ...grpc.CallOption) (CameraService_SubscribeModeClient, error)
	//
	// Subscribe to video stream info updates.
	SubscribeVideoStreamInfo(ctx context.Context, in *SubscribeVideoStreamInfoRequest, opts ...grpc.CallOption) (CameraService_SubscribeVideoStreamInfoClient, error)
	//
	// Subscribe to capture info updates.
	SubscribeCaptureInfo(ctx context.Context, in *SubscribeCaptureInfoRequest, opts ...grpc.CallOption) (CameraService_SubscribeCaptureInfoClient, error)
	//
	// Subscribe to camera status updates.
	SubscribeCameraStatus(ctx context.Context, in *SubscribeCameraStatusRequest, opts ...grpc.CallOption) (CameraService_SubscribeCameraStatusClient, error)
	//
	// Get the list of current camera settings.
	SubscribeCurrentSettings(ctx context.Context, in *SubscribeCurrentSettingsRequest, opts ...grpc.CallOption) (CameraService_SubscribeCurrentSettingsClient, error)
	//
	// Get the list of settings that can be changed.
	SubscribePossibleSettingOptions(ctx context.Context, in *SubscribePossibleSettingOptionsRequest, opts ...grpc.CallOption) (CameraService_SubscribePossibleSettingOptionsClient, error)
	//
	// Set a setting to some value.
	SetSetting(ctx context.Context, in *SetSettingRequest, opts ...grpc.CallOption) (*SetSettingResponse, error)
}

type cameraServiceClient struct {
	cc *grpc.ClientConn
}

func NewCameraServiceClient(cc *grpc.ClientConn) CameraServiceClient {
	return &cameraServiceClient{cc}
}

func (c *cameraServiceClient) TakePhoto(ctx context.Context, in *TakePhotoRequest, opts ...grpc.CallOption) (*TakePhotoResponse, error) {
	out := new(TakePhotoResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/TakePhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) StartPhotoInterval(ctx context.Context, in *StartPhotoIntervalRequest, opts ...grpc.CallOption) (*StartPhotoIntervalResponse, error) {
	out := new(StartPhotoIntervalResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/StartPhotoInterval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) StopPhotoInterval(ctx context.Context, in *StopPhotoIntervalRequest, opts ...grpc.CallOption) (*StopPhotoIntervalResponse, error) {
	out := new(StopPhotoIntervalResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/StopPhotoInterval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) StartVideo(ctx context.Context, in *StartVideoRequest, opts ...grpc.CallOption) (*StartVideoResponse, error) {
	out := new(StartVideoResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/StartVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) StopVideo(ctx context.Context, in *StopVideoRequest, opts ...grpc.CallOption) (*StopVideoResponse, error) {
	out := new(StopVideoResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/StopVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) StartVideoStreaming(ctx context.Context, in *StartVideoStreamingRequest, opts ...grpc.CallOption) (*StartVideoStreamingResponse, error) {
	out := new(StartVideoStreamingResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/StartVideoStreaming", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) StopVideoStreaming(ctx context.Context, in *StopVideoStreamingRequest, opts ...grpc.CallOption) (*StopVideoStreamingResponse, error) {
	out := new(StopVideoStreamingResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/StopVideoStreaming", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) SetMode(ctx context.Context, in *SetModeRequest, opts ...grpc.CallOption) (*SetModeResponse, error) {
	out := new(SetModeResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/SetMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) SubscribeMode(ctx context.Context, in *SubscribeModeRequest, opts ...grpc.CallOption) (CameraService_SubscribeModeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CameraService_serviceDesc.Streams[0], "/mavsdk.rpc.camera.CameraService/SubscribeMode", opts...)
	if err != nil {
		return nil, err
	}
	x := &cameraServiceSubscribeModeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CameraService_SubscribeModeClient interface {
	Recv() (*ModeResponse, error)
	grpc.ClientStream
}

type cameraServiceSubscribeModeClient struct {
	grpc.ClientStream
}

func (x *cameraServiceSubscribeModeClient) Recv() (*ModeResponse, error) {
	m := new(ModeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cameraServiceClient) SubscribeVideoStreamInfo(ctx context.Context, in *SubscribeVideoStreamInfoRequest, opts ...grpc.CallOption) (CameraService_SubscribeVideoStreamInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CameraService_serviceDesc.Streams[1], "/mavsdk.rpc.camera.CameraService/SubscribeVideoStreamInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &cameraServiceSubscribeVideoStreamInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CameraService_SubscribeVideoStreamInfoClient interface {
	Recv() (*VideoStreamInfoResponse, error)
	grpc.ClientStream
}

type cameraServiceSubscribeVideoStreamInfoClient struct {
	grpc.ClientStream
}

func (x *cameraServiceSubscribeVideoStreamInfoClient) Recv() (*VideoStreamInfoResponse, error) {
	m := new(VideoStreamInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cameraServiceClient) SubscribeCaptureInfo(ctx context.Context, in *SubscribeCaptureInfoRequest, opts ...grpc.CallOption) (CameraService_SubscribeCaptureInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CameraService_serviceDesc.Streams[2], "/mavsdk.rpc.camera.CameraService/SubscribeCaptureInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &cameraServiceSubscribeCaptureInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CameraService_SubscribeCaptureInfoClient interface {
	Recv() (*CaptureInfoResponse, error)
	grpc.ClientStream
}

type cameraServiceSubscribeCaptureInfoClient struct {
	grpc.ClientStream
}

func (x *cameraServiceSubscribeCaptureInfoClient) Recv() (*CaptureInfoResponse, error) {
	m := new(CaptureInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cameraServiceClient) SubscribeCameraStatus(ctx context.Context, in *SubscribeCameraStatusRequest, opts ...grpc.CallOption) (CameraService_SubscribeCameraStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CameraService_serviceDesc.Streams[3], "/mavsdk.rpc.camera.CameraService/SubscribeCameraStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &cameraServiceSubscribeCameraStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CameraService_SubscribeCameraStatusClient interface {
	Recv() (*CameraStatusResponse, error)
	grpc.ClientStream
}

type cameraServiceSubscribeCameraStatusClient struct {
	grpc.ClientStream
}

func (x *cameraServiceSubscribeCameraStatusClient) Recv() (*CameraStatusResponse, error) {
	m := new(CameraStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cameraServiceClient) SubscribeCurrentSettings(ctx context.Context, in *SubscribeCurrentSettingsRequest, opts ...grpc.CallOption) (CameraService_SubscribeCurrentSettingsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CameraService_serviceDesc.Streams[4], "/mavsdk.rpc.camera.CameraService/SubscribeCurrentSettings", opts...)
	if err != nil {
		return nil, err
	}
	x := &cameraServiceSubscribeCurrentSettingsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CameraService_SubscribeCurrentSettingsClient interface {
	Recv() (*CurrentSettingsResponse, error)
	grpc.ClientStream
}

type cameraServiceSubscribeCurrentSettingsClient struct {
	grpc.ClientStream
}

func (x *cameraServiceSubscribeCurrentSettingsClient) Recv() (*CurrentSettingsResponse, error) {
	m := new(CurrentSettingsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cameraServiceClient) SubscribePossibleSettingOptions(ctx context.Context, in *SubscribePossibleSettingOptionsRequest, opts ...grpc.CallOption) (CameraService_SubscribePossibleSettingOptionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CameraService_serviceDesc.Streams[5], "/mavsdk.rpc.camera.CameraService/SubscribePossibleSettingOptions", opts...)
	if err != nil {
		return nil, err
	}
	x := &cameraServiceSubscribePossibleSettingOptionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CameraService_SubscribePossibleSettingOptionsClient interface {
	Recv() (*PossibleSettingOptionsResponse, error)
	grpc.ClientStream
}

type cameraServiceSubscribePossibleSettingOptionsClient struct {
	grpc.ClientStream
}

func (x *cameraServiceSubscribePossibleSettingOptionsClient) Recv() (*PossibleSettingOptionsResponse, error) {
	m := new(PossibleSettingOptionsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cameraServiceClient) SetSetting(ctx context.Context, in *SetSettingRequest, opts ...grpc.CallOption) (*SetSettingResponse, error) {
	out := new(SetSettingResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.camera.CameraService/SetSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CameraServiceServer is the server API for CameraService service.
type CameraServiceServer interface {
	//
	// Take one photo.
	TakePhoto(context.Context, *TakePhotoRequest) (*TakePhotoResponse, error)
	//
	// Start photo timelapse with a given interval.
	StartPhotoInterval(context.Context, *StartPhotoIntervalRequest) (*StartPhotoIntervalResponse, error)
	//
	// Stop a running photo timelapse.
	StopPhotoInterval(context.Context, *StopPhotoIntervalRequest) (*StopPhotoIntervalResponse, error)
	//
	// Start a video recording.
	StartVideo(context.Context, *StartVideoRequest) (*StartVideoResponse, error)
	//
	// Stop a running video recording.
	StopVideo(context.Context, *StopVideoRequest) (*StopVideoResponse, error)
	//
	// Start video streaming.
	StartVideoStreaming(context.Context, *StartVideoStreamingRequest) (*StartVideoStreamingResponse, error)
	//
	// Stop current video streaming.
	StopVideoStreaming(context.Context, *StopVideoStreamingRequest) (*StopVideoStreamingResponse, error)
	//
	// Set camera mode.
	SetMode(context.Context, *SetModeRequest) (*SetModeResponse, error)
	//
	// Subscribe to camera mode updates.
	SubscribeMode(*SubscribeModeRequest, CameraService_SubscribeModeServer) error
	//
	// Subscribe to video stream info updates.
	SubscribeVideoStreamInfo(*SubscribeVideoStreamInfoRequest, CameraService_SubscribeVideoStreamInfoServer) error
	//
	// Subscribe to capture info updates.
	SubscribeCaptureInfo(*SubscribeCaptureInfoRequest, CameraService_SubscribeCaptureInfoServer) error
	//
	// Subscribe to camera status updates.
	SubscribeCameraStatus(*SubscribeCameraStatusRequest, CameraService_SubscribeCameraStatusServer) error
	//
	// Get the list of current camera settings.
	SubscribeCurrentSettings(*SubscribeCurrentSettingsRequest, CameraService_SubscribeCurrentSettingsServer) error
	//
	// Get the list of settings that can be changed.
	SubscribePossibleSettingOptions(*SubscribePossibleSettingOptionsRequest, CameraService_SubscribePossibleSettingOptionsServer) error
	//
	// Set a setting to some value.
	SetSetting(context.Context, *SetSettingRequest) (*SetSettingResponse, error)
}

// UnimplementedCameraServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCameraServiceServer struct {
}

func (*UnimplementedCameraServiceServer) TakePhoto(ctx context.Context, req *TakePhotoRequest) (*TakePhotoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TakePhoto not implemented")
}
func (*UnimplementedCameraServiceServer) StartPhotoInterval(ctx context.Context, req *StartPhotoIntervalRequest) (*StartPhotoIntervalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartPhotoInterval not implemented")
}
func (*UnimplementedCameraServiceServer) StopPhotoInterval(ctx context.Context, req *StopPhotoIntervalRequest) (*StopPhotoIntervalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopPhotoInterval not implemented")
}
func (*UnimplementedCameraServiceServer) StartVideo(ctx context.Context, req *StartVideoRequest) (*StartVideoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartVideo not implemented")
}
func (*UnimplementedCameraServiceServer) StopVideo(ctx context.Context, req *StopVideoRequest) (*StopVideoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopVideo not implemented")
}
func (*UnimplementedCameraServiceServer) StartVideoStreaming(ctx context.Context, req *StartVideoStreamingRequest) (*StartVideoStreamingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartVideoStreaming not implemented")
}
func (*UnimplementedCameraServiceServer) StopVideoStreaming(ctx context.Context, req *StopVideoStreamingRequest) (*StopVideoStreamingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopVideoStreaming not implemented")
}
func (*UnimplementedCameraServiceServer) SetMode(ctx context.Context, req *SetModeRequest) (*SetModeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMode not implemented")
}
func (*UnimplementedCameraServiceServer) SubscribeMode(req *SubscribeModeRequest, srv CameraService_SubscribeModeServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeMode not implemented")
}
func (*UnimplementedCameraServiceServer) SubscribeVideoStreamInfo(req *SubscribeVideoStreamInfoRequest, srv CameraService_SubscribeVideoStreamInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeVideoStreamInfo not implemented")
}
func (*UnimplementedCameraServiceServer) SubscribeCaptureInfo(req *SubscribeCaptureInfoRequest, srv CameraService_SubscribeCaptureInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeCaptureInfo not implemented")
}
func (*UnimplementedCameraServiceServer) SubscribeCameraStatus(req *SubscribeCameraStatusRequest, srv CameraService_SubscribeCameraStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeCameraStatus not implemented")
}
func (*UnimplementedCameraServiceServer) SubscribeCurrentSettings(req *SubscribeCurrentSettingsRequest, srv CameraService_SubscribeCurrentSettingsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeCurrentSettings not implemented")
}
func (*UnimplementedCameraServiceServer) SubscribePossibleSettingOptions(req *SubscribePossibleSettingOptionsRequest, srv CameraService_SubscribePossibleSettingOptionsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribePossibleSettingOptions not implemented")
}
func (*UnimplementedCameraServiceServer) SetSetting(ctx context.Context, req *SetSettingRequest) (*SetSettingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSetting not implemented")
}

func RegisterCameraServiceServer(s *grpc.Server, srv CameraServiceServer) {
	s.RegisterService(&_CameraService_serviceDesc, srv)
}

func _CameraService_TakePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakePhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).TakePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/TakePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).TakePhoto(ctx, req.(*TakePhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_StartPhotoInterval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartPhotoIntervalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).StartPhotoInterval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/StartPhotoInterval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).StartPhotoInterval(ctx, req.(*StartPhotoIntervalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_StopPhotoInterval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopPhotoIntervalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).StopPhotoInterval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/StopPhotoInterval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).StopPhotoInterval(ctx, req.(*StopPhotoIntervalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_StartVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).StartVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/StartVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).StartVideo(ctx, req.(*StartVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_StopVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).StopVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/StopVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).StopVideo(ctx, req.(*StopVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_StartVideoStreaming_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartVideoStreamingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).StartVideoStreaming(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/StartVideoStreaming",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).StartVideoStreaming(ctx, req.(*StartVideoStreamingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_StopVideoStreaming_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopVideoStreamingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).StopVideoStreaming(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/StopVideoStreaming",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).StopVideoStreaming(ctx, req.(*StopVideoStreamingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_SetMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetModeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).SetMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/SetMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).SetMode(ctx, req.(*SetModeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_SubscribeMode_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeModeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CameraServiceServer).SubscribeMode(m, &cameraServiceSubscribeModeServer{stream})
}

type CameraService_SubscribeModeServer interface {
	Send(*ModeResponse) error
	grpc.ServerStream
}

type cameraServiceSubscribeModeServer struct {
	grpc.ServerStream
}

func (x *cameraServiceSubscribeModeServer) Send(m *ModeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CameraService_SubscribeVideoStreamInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeVideoStreamInfoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CameraServiceServer).SubscribeVideoStreamInfo(m, &cameraServiceSubscribeVideoStreamInfoServer{stream})
}

type CameraService_SubscribeVideoStreamInfoServer interface {
	Send(*VideoStreamInfoResponse) error
	grpc.ServerStream
}

type cameraServiceSubscribeVideoStreamInfoServer struct {
	grpc.ServerStream
}

func (x *cameraServiceSubscribeVideoStreamInfoServer) Send(m *VideoStreamInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CameraService_SubscribeCaptureInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeCaptureInfoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CameraServiceServer).SubscribeCaptureInfo(m, &cameraServiceSubscribeCaptureInfoServer{stream})
}

type CameraService_SubscribeCaptureInfoServer interface {
	Send(*CaptureInfoResponse) error
	grpc.ServerStream
}

type cameraServiceSubscribeCaptureInfoServer struct {
	grpc.ServerStream
}

func (x *cameraServiceSubscribeCaptureInfoServer) Send(m *CaptureInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CameraService_SubscribeCameraStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeCameraStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CameraServiceServer).SubscribeCameraStatus(m, &cameraServiceSubscribeCameraStatusServer{stream})
}

type CameraService_SubscribeCameraStatusServer interface {
	Send(*CameraStatusResponse) error
	grpc.ServerStream
}

type cameraServiceSubscribeCameraStatusServer struct {
	grpc.ServerStream
}

func (x *cameraServiceSubscribeCameraStatusServer) Send(m *CameraStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CameraService_SubscribeCurrentSettings_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeCurrentSettingsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CameraServiceServer).SubscribeCurrentSettings(m, &cameraServiceSubscribeCurrentSettingsServer{stream})
}

type CameraService_SubscribeCurrentSettingsServer interface {
	Send(*CurrentSettingsResponse) error
	grpc.ServerStream
}

type cameraServiceSubscribeCurrentSettingsServer struct {
	grpc.ServerStream
}

func (x *cameraServiceSubscribeCurrentSettingsServer) Send(m *CurrentSettingsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CameraService_SubscribePossibleSettingOptions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribePossibleSettingOptionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CameraServiceServer).SubscribePossibleSettingOptions(m, &cameraServiceSubscribePossibleSettingOptionsServer{stream})
}

type CameraService_SubscribePossibleSettingOptionsServer interface {
	Send(*PossibleSettingOptionsResponse) error
	grpc.ServerStream
}

type cameraServiceSubscribePossibleSettingOptionsServer struct {
	grpc.ServerStream
}

func (x *cameraServiceSubscribePossibleSettingOptionsServer) Send(m *PossibleSettingOptionsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CameraService_SetSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).SetSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.camera.CameraService/SetSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).SetSetting(ctx, req.(*SetSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CameraService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mavsdk.rpc.camera.CameraService",
	HandlerType: (*CameraServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TakePhoto",
			Handler:    _CameraService_TakePhoto_Handler,
		},
		{
			MethodName: "StartPhotoInterval",
			Handler:    _CameraService_StartPhotoInterval_Handler,
		},
		{
			MethodName: "StopPhotoInterval",
			Handler:    _CameraService_StopPhotoInterval_Handler,
		},
		{
			MethodName: "StartVideo",
			Handler:    _CameraService_StartVideo_Handler,
		},
		{
			MethodName: "StopVideo",
			Handler:    _CameraService_StopVideo_Handler,
		},
		{
			MethodName: "StartVideoStreaming",
			Handler:    _CameraService_StartVideoStreaming_Handler,
		},
		{
			MethodName: "StopVideoStreaming",
			Handler:    _CameraService_StopVideoStreaming_Handler,
		},
		{
			MethodName: "SetMode",
			Handler:    _CameraService_SetMode_Handler,
		},
		{
			MethodName: "SetSetting",
			Handler:    _CameraService_SetSetting_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeMode",
			Handler:       _CameraService_SubscribeMode_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeVideoStreamInfo",
			Handler:       _CameraService_SubscribeVideoStreamInfo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeCaptureInfo",
			Handler:       _CameraService_SubscribeCaptureInfo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeCameraStatus",
			Handler:       _CameraService_SubscribeCameraStatus_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeCurrentSettings",
			Handler:       _CameraService_SubscribeCurrentSettings_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribePossibleSettingOptions",
			Handler:       _CameraService_SubscribePossibleSettingOptions_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "MAVSDK-Proto/protos/camera/camera.proto",
}
