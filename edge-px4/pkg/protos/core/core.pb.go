// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MAVSDK-Proto/protos/core/core.proto

package mavsdk_rpc_core

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubscribeConnectionStateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeConnectionStateRequest) Reset()         { *m = SubscribeConnectionStateRequest{} }
func (m *SubscribeConnectionStateRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeConnectionStateRequest) ProtoMessage()    {}
func (*SubscribeConnectionStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e630f111c1496c9, []int{0}
}

func (m *SubscribeConnectionStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeConnectionStateRequest.Unmarshal(m, b)
}
func (m *SubscribeConnectionStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeConnectionStateRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeConnectionStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeConnectionStateRequest.Merge(m, src)
}
func (m *SubscribeConnectionStateRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeConnectionStateRequest.Size(m)
}
func (m *SubscribeConnectionStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeConnectionStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeConnectionStateRequest proto.InternalMessageInfo

type ConnectionStateResponse struct {
	ConnectionState      *ConnectionState `protobuf:"bytes,1,opt,name=connection_state,json=connectionState,proto3" json:"connection_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ConnectionStateResponse) Reset()         { *m = ConnectionStateResponse{} }
func (m *ConnectionStateResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectionStateResponse) ProtoMessage()    {}
func (*ConnectionStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e630f111c1496c9, []int{1}
}

func (m *ConnectionStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionStateResponse.Unmarshal(m, b)
}
func (m *ConnectionStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionStateResponse.Marshal(b, m, deterministic)
}
func (m *ConnectionStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionStateResponse.Merge(m, src)
}
func (m *ConnectionStateResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectionStateResponse.Size(m)
}
func (m *ConnectionStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionStateResponse proto.InternalMessageInfo

func (m *ConnectionStateResponse) GetConnectionState() *ConnectionState {
	if m != nil {
		return m.ConnectionState
	}
	return nil
}

type ListRunningPluginsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRunningPluginsRequest) Reset()         { *m = ListRunningPluginsRequest{} }
func (m *ListRunningPluginsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRunningPluginsRequest) ProtoMessage()    {}
func (*ListRunningPluginsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e630f111c1496c9, []int{2}
}

func (m *ListRunningPluginsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRunningPluginsRequest.Unmarshal(m, b)
}
func (m *ListRunningPluginsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRunningPluginsRequest.Marshal(b, m, deterministic)
}
func (m *ListRunningPluginsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRunningPluginsRequest.Merge(m, src)
}
func (m *ListRunningPluginsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRunningPluginsRequest.Size(m)
}
func (m *ListRunningPluginsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRunningPluginsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRunningPluginsRequest proto.InternalMessageInfo

type ListRunningPluginsResponse struct {
	PluginInfo           []*PluginInfo `protobuf:"bytes,1,rep,name=plugin_info,json=pluginInfo,proto3" json:"plugin_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListRunningPluginsResponse) Reset()         { *m = ListRunningPluginsResponse{} }
func (m *ListRunningPluginsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRunningPluginsResponse) ProtoMessage()    {}
func (*ListRunningPluginsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e630f111c1496c9, []int{3}
}

func (m *ListRunningPluginsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRunningPluginsResponse.Unmarshal(m, b)
}
func (m *ListRunningPluginsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRunningPluginsResponse.Marshal(b, m, deterministic)
}
func (m *ListRunningPluginsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRunningPluginsResponse.Merge(m, src)
}
func (m *ListRunningPluginsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRunningPluginsResponse.Size(m)
}
func (m *ListRunningPluginsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRunningPluginsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRunningPluginsResponse proto.InternalMessageInfo

func (m *ListRunningPluginsResponse) GetPluginInfo() []*PluginInfo {
	if m != nil {
		return m.PluginInfo
	}
	return nil
}

// Connection state type.
type ConnectionState struct {
	Uuid                 uint64   `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	IsConnected          bool     `protobuf:"varint,2,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionState) Reset()         { *m = ConnectionState{} }
func (m *ConnectionState) String() string { return proto.CompactTextString(m) }
func (*ConnectionState) ProtoMessage()    {}
func (*ConnectionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e630f111c1496c9, []int{4}
}

func (m *ConnectionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionState.Unmarshal(m, b)
}
func (m *ConnectionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionState.Marshal(b, m, deterministic)
}
func (m *ConnectionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionState.Merge(m, src)
}
func (m *ConnectionState) XXX_Size() int {
	return xxx_messageInfo_ConnectionState.Size(m)
}
func (m *ConnectionState) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionState.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionState proto.InternalMessageInfo

func (m *ConnectionState) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *ConnectionState) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

// Plugin info type.
type PluginInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PluginInfo) Reset()         { *m = PluginInfo{} }
func (m *PluginInfo) String() string { return proto.CompactTextString(m) }
func (*PluginInfo) ProtoMessage()    {}
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e630f111c1496c9, []int{5}
}

func (m *PluginInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginInfo.Unmarshal(m, b)
}
func (m *PluginInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginInfo.Marshal(b, m, deterministic)
}
func (m *PluginInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginInfo.Merge(m, src)
}
func (m *PluginInfo) XXX_Size() int {
	return xxx_messageInfo_PluginInfo.Size(m)
}
func (m *PluginInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PluginInfo proto.InternalMessageInfo

func (m *PluginInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PluginInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PluginInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*SubscribeConnectionStateRequest)(nil), "mavsdk.rpc.core.SubscribeConnectionStateRequest")
	proto.RegisterType((*ConnectionStateResponse)(nil), "mavsdk.rpc.core.ConnectionStateResponse")
	proto.RegisterType((*ListRunningPluginsRequest)(nil), "mavsdk.rpc.core.ListRunningPluginsRequest")
	proto.RegisterType((*ListRunningPluginsResponse)(nil), "mavsdk.rpc.core.ListRunningPluginsResponse")
	proto.RegisterType((*ConnectionState)(nil), "mavsdk.rpc.core.ConnectionState")
	proto.RegisterType((*PluginInfo)(nil), "mavsdk.rpc.core.PluginInfo")
}

func init() {
	proto.RegisterFile("MAVSDK-Proto/protos/core/core.proto", fileDescriptor_1e630f111c1496c9)
}

var fileDescriptor_1e630f111c1496c9 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4f, 0xfa, 0x30,
	0x18, 0xfe, 0xed, 0x07, 0x7e, 0xf0, 0xce, 0x88, 0xe9, 0xc5, 0x09, 0x07, 0xc7, 0xbc, 0x2c, 0x1a,
	0x07, 0xc1, 0xab, 0x17, 0xc1, 0x83, 0x06, 0x35, 0xa4, 0x4b, 0x3c, 0x78, 0x21, 0xa3, 0x2b, 0xa4,
	0x51, 0xda, 0xd9, 0x76, 0x1c, 0xfc, 0xd3, 0x3d, 0x99, 0x16, 0x86, 0x91, 0x49, 0xf0, 0xd2, 0xbc,
	0x7d, 0x9e, 0xf7, 0xe3, 0xe9, 0xfb, 0x14, 0xce, 0x1e, 0x6f, 0x9e, 0xe3, 0xdb, 0xc1, 0xe5, 0x50,
	0x0a, 0x2d, 0xda, 0x99, 0x39, 0x55, 0x9b, 0x08, 0x49, 0xed, 0x11, 0x59, 0x00, 0xd5, 0x67, 0xc9,
	0x5c, 0xa5, 0xaf, 0x91, 0xcc, 0x48, 0x64, 0xe0, 0xa0, 0x05, 0xa7, 0x71, 0x3e, 0x56, 0x44, 0xb2,
	0x31, 0xed, 0x0b, 0xce, 0x29, 0xd1, 0x4c, 0xf0, 0x58, 0x27, 0x9a, 0x62, 0xfa, 0x9e, 0x53, 0xa5,
	0x83, 0x09, 0x1c, 0x97, 0x18, 0x95, 0x09, 0xae, 0x28, 0x1a, 0xc0, 0x11, 0x59, 0x51, 0x23, 0x65,
	0x38, 0xcf, 0xf1, 0x9d, 0xd0, 0xed, 0xfa, 0xd1, 0xda, 0xa4, 0x68, 0xbd, 0x47, 0x9d, 0xfc, 0x04,
	0x82, 0x26, 0x9c, 0x3c, 0x30, 0xa5, 0x71, 0xce, 0x39, 0xe3, 0xd3, 0xe1, 0x5b, 0x3e, 0x65, 0x5c,
	0x15, 0x22, 0x5e, 0xa0, 0xf1, 0x1b, 0xb9, 0xd4, 0x71, 0x0d, 0x6e, 0x66, 0xa1, 0x11, 0xe3, 0x13,
	0xe1, 0x39, 0x7e, 0x25, 0x74, 0xbb, 0xcd, 0x92, 0x84, 0x45, 0xd9, 0x3d, 0x9f, 0x08, 0x0c, 0xd9,
	0x2a, 0x0e, 0xee, 0xa0, 0xbe, 0x26, 0x0e, 0x21, 0xa8, 0xe6, 0x39, 0x4b, 0xed, 0x63, 0xaa, 0xd8,
	0xc6, 0xa8, 0x05, 0x07, 0x4c, 0x8d, 0x96, 0xaa, 0x69, 0xea, 0xfd, 0xf7, 0x9d, 0x70, 0x1f, 0xbb,
	0x4c, 0xf5, 0x0b, 0x28, 0x78, 0x02, 0xf8, 0x9e, 0x61, 0x9a, 0xf0, 0x64, 0xb6, 0xd8, 0x48, 0x0d,
	0xdb, 0x18, 0x79, 0xb0, 0x97, 0xa4, 0xa9, 0xa4, 0x4a, 0xd9, 0xfa, 0x1a, 0x2e, 0xae, 0x26, 0x3b,
	0x13, 0x52, 0x7b, 0x15, 0xdf, 0x09, 0x77, 0xb0, 0x8d, 0xbb, 0x9f, 0x0e, 0xb8, 0x7d, 0x21, 0x69,
	0x4c, 0xe5, 0x9c, 0x11, 0x8a, 0x3e, 0xc0, 0xdb, 0xe4, 0x16, 0xea, 0x94, 0x9e, 0xbb, 0xc5, 0xd8,
	0x46, 0xb8, 0xd5, 0xa3, 0xe5, 0x7e, 0x83, 0x7f, 0x1d, 0x07, 0x09, 0x40, 0x65, 0x07, 0xd0, 0x79,
	0xa9, 0xc7, 0x46, 0x0f, 0x1b, 0x17, 0x7f, 0xca, 0x2d, 0x46, 0xf6, 0x9a, 0x70, 0xc8, 0x44, 0x51,
	0x62, 0xd2, 0x7b, 0x35, 0xb3, 0x0b, 0xfb, 0xbf, 0xc7, 0xbb, 0xf6, 0x3f, 0x5f, 0x7d, 0x05, 0x00,
	0x00, 0xff, 0xff, 0xb8, 0x6c, 0xc8, 0x11, 0xf6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreServiceClient is the client API for CoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreServiceClient interface {
	// Subscribe to 'connection state' updates.
	SubscribeConnectionState(ctx context.Context, in *SubscribeConnectionStateRequest, opts ...grpc.CallOption) (CoreService_SubscribeConnectionStateClient, error)
	// Get a list of currently running plugins.
	ListRunningPlugins(ctx context.Context, in *ListRunningPluginsRequest, opts ...grpc.CallOption) (*ListRunningPluginsResponse, error)
}

type coreServiceClient struct {
	cc *grpc.ClientConn
}

func NewCoreServiceClient(cc *grpc.ClientConn) CoreServiceClient {
	return &coreServiceClient{cc}
}

func (c *coreServiceClient) SubscribeConnectionState(ctx context.Context, in *SubscribeConnectionStateRequest, opts ...grpc.CallOption) (CoreService_SubscribeConnectionStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CoreService_serviceDesc.Streams[0], "/mavsdk.rpc.core.CoreService/SubscribeConnectionState", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreServiceSubscribeConnectionStateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CoreService_SubscribeConnectionStateClient interface {
	Recv() (*ConnectionStateResponse, error)
	grpc.ClientStream
}

type coreServiceSubscribeConnectionStateClient struct {
	grpc.ClientStream
}

func (x *coreServiceSubscribeConnectionStateClient) Recv() (*ConnectionStateResponse, error) {
	m := new(ConnectionStateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreServiceClient) ListRunningPlugins(ctx context.Context, in *ListRunningPluginsRequest, opts ...grpc.CallOption) (*ListRunningPluginsResponse, error) {
	out := new(ListRunningPluginsResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.core.CoreService/ListRunningPlugins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServiceServer is the server API for CoreService service.
type CoreServiceServer interface {
	// Subscribe to 'connection state' updates.
	SubscribeConnectionState(*SubscribeConnectionStateRequest, CoreService_SubscribeConnectionStateServer) error
	// Get a list of currently running plugins.
	ListRunningPlugins(context.Context, *ListRunningPluginsRequest) (*ListRunningPluginsResponse, error)
}

// UnimplementedCoreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCoreServiceServer struct {
}

func (*UnimplementedCoreServiceServer) SubscribeConnectionState(req *SubscribeConnectionStateRequest, srv CoreService_SubscribeConnectionStateServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeConnectionState not implemented")
}
func (*UnimplementedCoreServiceServer) ListRunningPlugins(ctx context.Context, req *ListRunningPluginsRequest) (*ListRunningPluginsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRunningPlugins not implemented")
}

func RegisterCoreServiceServer(s *grpc.Server, srv CoreServiceServer) {
	s.RegisterService(&_CoreService_serviceDesc, srv)
}

func _CoreService_SubscribeConnectionState_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeConnectionStateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreServiceServer).SubscribeConnectionState(m, &coreServiceSubscribeConnectionStateServer{stream})
}

type CoreService_SubscribeConnectionStateServer interface {
	Send(*ConnectionStateResponse) error
	grpc.ServerStream
}

type coreServiceSubscribeConnectionStateServer struct {
	grpc.ServerStream
}

func (x *coreServiceSubscribeConnectionStateServer) Send(m *ConnectionStateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CoreService_ListRunningPlugins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRunningPluginsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ListRunningPlugins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.core.CoreService/ListRunningPlugins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ListRunningPlugins(ctx, req.(*ListRunningPluginsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mavsdk.rpc.core.CoreService",
	HandlerType: (*CoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRunningPlugins",
			Handler:    _CoreService_ListRunningPlugins_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeConnectionState",
			Handler:       _CoreService_SubscribeConnectionState_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "MAVSDK-Proto/protos/core/core.proto",
}
