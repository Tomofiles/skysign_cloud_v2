// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MAVSDK-Proto/protos/info/info.proto

package mavsdk_rpc_info

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Possible results returned for info requests.
type InfoResult_Result int32

const (
	InfoResult_UNKNOWN                      InfoResult_Result = 0
	InfoResult_SUCCESS                      InfoResult_Result = 1
	InfoResult_INFORMATION_NOT_RECEIVED_YET InfoResult_Result = 2
)

var InfoResult_Result_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "INFORMATION_NOT_RECEIVED_YET",
}

var InfoResult_Result_value = map[string]int32{
	"UNKNOWN":                      0,
	"SUCCESS":                      1,
	"INFORMATION_NOT_RECEIVED_YET": 2,
}

func (x InfoResult_Result) String() string {
	return proto.EnumName(InfoResult_Result_name, int32(x))
}

func (InfoResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0682caedfd4bb27e, []int{3, 0}
}

// System version information.
type Version struct {
	FlightSwMajor        int32    `protobuf:"varint,1,opt,name=flight_sw_major,json=flightSwMajor,proto3" json:"flight_sw_major,omitempty"`
	FlightSwMinor        int32    `protobuf:"varint,2,opt,name=flight_sw_minor,json=flightSwMinor,proto3" json:"flight_sw_minor,omitempty"`
	FlightSwPatch        int32    `protobuf:"varint,3,opt,name=flight_sw_patch,json=flightSwPatch,proto3" json:"flight_sw_patch,omitempty"`
	FlightSwVendorMajor  int32    `protobuf:"varint,4,opt,name=flight_sw_vendor_major,json=flightSwVendorMajor,proto3" json:"flight_sw_vendor_major,omitempty"`
	FlightSwVendorMinor  int32    `protobuf:"varint,5,opt,name=flight_sw_vendor_minor,json=flightSwVendorMinor,proto3" json:"flight_sw_vendor_minor,omitempty"`
	FlightSwVendorPatch  int32    `protobuf:"varint,6,opt,name=flight_sw_vendor_patch,json=flightSwVendorPatch,proto3" json:"flight_sw_vendor_patch,omitempty"`
	OsSwMajor            int32    `protobuf:"varint,7,opt,name=os_sw_major,json=osSwMajor,proto3" json:"os_sw_major,omitempty"`
	OsSwMinor            int32    `protobuf:"varint,8,opt,name=os_sw_minor,json=osSwMinor,proto3" json:"os_sw_minor,omitempty"`
	OsSwPatch            int32    `protobuf:"varint,9,opt,name=os_sw_patch,json=osSwPatch,proto3" json:"os_sw_patch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_0682caedfd4bb27e, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetFlightSwMajor() int32 {
	if m != nil {
		return m.FlightSwMajor
	}
	return 0
}

func (m *Version) GetFlightSwMinor() int32 {
	if m != nil {
		return m.FlightSwMinor
	}
	return 0
}

func (m *Version) GetFlightSwPatch() int32 {
	if m != nil {
		return m.FlightSwPatch
	}
	return 0
}

func (m *Version) GetFlightSwVendorMajor() int32 {
	if m != nil {
		return m.FlightSwVendorMajor
	}
	return 0
}

func (m *Version) GetFlightSwVendorMinor() int32 {
	if m != nil {
		return m.FlightSwVendorMinor
	}
	return 0
}

func (m *Version) GetFlightSwVendorPatch() int32 {
	if m != nil {
		return m.FlightSwVendorPatch
	}
	return 0
}

func (m *Version) GetOsSwMajor() int32 {
	if m != nil {
		return m.OsSwMajor
	}
	return 0
}

func (m *Version) GetOsSwMinor() int32 {
	if m != nil {
		return m.OsSwMinor
	}
	return 0
}

func (m *Version) GetOsSwPatch() int32 {
	if m != nil {
		return m.OsSwPatch
	}
	return 0
}

type GetVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0682caedfd4bb27e, []int{1}
}

func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(m, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

type GetVersionResponse struct {
	InfoResult           *InfoResult `protobuf:"bytes,1,opt,name=info_result,json=infoResult,proto3" json:"info_result,omitempty"`
	Version              *Version    `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0682caedfd4bb27e, []int{2}
}

func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(m, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetInfoResult() *InfoResult {
	if m != nil {
		return m.InfoResult
	}
	return nil
}

func (m *GetVersionResponse) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

// Result type.
type InfoResult struct {
	Result               InfoResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.info.InfoResult_Result" json:"result,omitempty"`
	ResultStr            string            `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InfoResult) Reset()         { *m = InfoResult{} }
func (m *InfoResult) String() string { return proto.CompactTextString(m) }
func (*InfoResult) ProtoMessage()    {}
func (*InfoResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_0682caedfd4bb27e, []int{3}
}

func (m *InfoResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResult.Unmarshal(m, b)
}
func (m *InfoResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResult.Marshal(b, m, deterministic)
}
func (m *InfoResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResult.Merge(m, src)
}
func (m *InfoResult) XXX_Size() int {
	return xxx_messageInfo_InfoResult.Size(m)
}
func (m *InfoResult) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResult.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResult proto.InternalMessageInfo

func (m *InfoResult) GetResult() InfoResult_Result {
	if m != nil {
		return m.Result
	}
	return InfoResult_UNKNOWN
}

func (m *InfoResult) GetResultStr() string {
	if m != nil {
		return m.ResultStr
	}
	return ""
}

func init() {
	proto.RegisterEnum("mavsdk.rpc.info.InfoResult_Result", InfoResult_Result_name, InfoResult_Result_value)
	proto.RegisterType((*Version)(nil), "mavsdk.rpc.info.Version")
	proto.RegisterType((*GetVersionRequest)(nil), "mavsdk.rpc.info.GetVersionRequest")
	proto.RegisterType((*GetVersionResponse)(nil), "mavsdk.rpc.info.GetVersionResponse")
	proto.RegisterType((*InfoResult)(nil), "mavsdk.rpc.info.InfoResult")
}

func init() {
	proto.RegisterFile("MAVSDK-Proto/protos/info/info.proto", fileDescriptor_0682caedfd4bb27e)
}

var fileDescriptor_0682caedfd4bb27e = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x5f, 0x6f, 0x94, 0x40,
	0x14, 0xc5, 0x4b, 0x6b, 0x41, 0x2e, 0xb1, 0x5d, 0xa7, 0x89, 0x21, 0x56, 0x4d, 0x43, 0x13, 0xe3,
	0x8b, 0x34, 0xa1, 0x6f, 0xc6, 0x97, 0x76, 0x17, 0x0d, 0x69, 0x16, 0x1a, 0xd8, 0xd2, 0xf8, 0x44,
	0xd6, 0xed, 0x60, 0xd1, 0x96, 0xc1, 0x99, 0x29, 0xfb, 0xea, 0x93, 0xdf, 0xc6, 0xef, 0x68, 0x66,
	0x06, 0x96, 0xfd, 0x43, 0xf6, 0x85, 0xcc, 0x9e, 0xfb, 0xbb, 0x73, 0x4e, 0xee, 0xdd, 0x81, 0xd3,
	0xf1, 0x45, 0x9a, 0x8c, 0xae, 0x3e, 0x5e, 0x53, 0xc2, 0xc9, 0x59, 0x25, 0xbe, 0xec, 0xac, 0x28,
	0x73, 0x22, 0x3f, 0xae, 0x14, 0xd0, 0xe1, 0xe3, 0xb4, 0x66, 0x77, 0xbf, 0x5c, 0x5a, 0xcd, 0x5c,
	0x21, 0x3b, 0x7f, 0xf6, 0xc0, 0x48, 0x31, 0x65, 0x05, 0x29, 0xd1, 0x7b, 0x38, 0xcc, 0x1f, 0x8a,
	0x1f, 0xf7, 0x3c, 0x63, 0xf3, 0xec, 0x71, 0xfa, 0x93, 0x50, 0x5b, 0x3b, 0xd1, 0x3e, 0xec, 0xc7,
	0x2f, 0x94, 0x9c, 0xcc, 0xc7, 0x42, 0x5c, 0xe3, 0x8a, 0x92, 0x50, 0x7b, 0x77, 0x8d, 0x13, 0xe2,
	0x2a, 0x57, 0x4d, 0xf9, 0xec, 0xde, 0xde, 0x5b, 0xe5, 0xae, 0x85, 0x88, 0xce, 0xe1, 0x55, 0xc7,
	0xd5, 0xb8, 0xbc, 0x23, 0xb4, 0xb1, 0x7f, 0x26, 0xf1, 0xa3, 0x16, 0x4f, 0x65, 0x4d, 0x85, 0xe8,
	0x6d, 0x92, 0x59, 0xf6, 0x7b, 0x9b, 0x64, 0xa2, 0xbe, 0x26, 0x15, 0x4c, 0xef, 0x6b, 0x52, 0xf1,
	0xde, 0x81, 0x45, 0x58, 0x37, 0x12, 0x43, 0x92, 0x26, 0x61, 0xed, 0x38, 0xba, 0xba, 0xb4, 0x7f,
	0xbe, 0x54, 0x97, 0xa6, 0x8b, 0xba, 0x72, 0x32, 0xbb, 0xba, 0xbc, 0xdf, 0x39, 0x82, 0x97, 0x5f,
	0x31, 0x6f, 0x96, 0x10, 0xe3, 0xdf, 0x4f, 0x98, 0x71, 0xe7, 0xaf, 0x06, 0x68, 0x59, 0x65, 0x15,
	0x29, 0x19, 0x46, 0x9f, 0xc1, 0x12, 0x6b, 0xcb, 0x28, 0x66, 0x4f, 0x0f, 0x5c, 0xae, 0xc7, 0xf2,
	0x8e, 0xdd, 0xb5, 0xad, 0xba, 0x41, 0x99, 0x93, 0x58, 0x22, 0x31, 0x14, 0x8b, 0x33, 0xf2, 0xc0,
	0xa8, 0xd5, 0x85, 0x72, 0x61, 0x96, 0x67, 0x6f, 0x74, 0xb6, 0x86, 0x2d, 0xe8, 0xfc, 0xd3, 0x00,
	0xba, 0xeb, 0xd0, 0x27, 0xd0, 0x97, 0xbc, 0x0f, 0x3c, 0x67, 0x8b, 0xb7, 0xdb, 0x44, 0x68, 0x3a,
	0xd0, 0x5b, 0x00, 0x75, 0xca, 0x18, 0x57, 0x7f, 0x19, 0x33, 0x36, 0x95, 0x92, 0x70, 0xea, 0x8c,
	0x40, 0x6f, 0x4c, 0x2c, 0x30, 0x6e, 0xc2, 0xab, 0x30, 0xba, 0x0d, 0x07, 0x3b, 0xe2, 0x47, 0x72,
	0x33, 0x1c, 0xfa, 0x49, 0x32, 0xd0, 0xd0, 0x09, 0xbc, 0x09, 0xc2, 0x2f, 0x51, 0x3c, 0xbe, 0x98,
	0x04, 0x51, 0x98, 0x85, 0xd1, 0x24, 0x8b, 0xfd, 0xa1, 0x1f, 0xa4, 0xfe, 0x28, 0xfb, 0xe6, 0x4f,
	0x06, 0xbb, 0x5e, 0x0e, 0x96, 0x48, 0x90, 0x60, 0x5a, 0x17, 0x33, 0x8c, 0x6e, 0x01, 0xba, 0x31,
	0xa2, 0xcd, 0xb4, 0x1b, 0x93, 0x7f, 0x7d, 0xba, 0x95, 0x51, 0x7b, 0x70, 0x76, 0x2e, 0x8f, 0xe1,
	0xa0, 0x20, 0x2d, 0x2a, 0xb0, 0x4b, 0x53, 0xf8, 0xca, 0xd7, 0xf7, 0x5d, 0x97, 0xaf, 0xed, 0xfc,
	0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x7a, 0x79, 0x1e, 0x94, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InfoServiceClient is the client API for InfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfoServiceClient interface {
	// Get the system version information.
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
}

type infoServiceClient struct {
	cc *grpc.ClientConn
}

func NewInfoServiceClient(cc *grpc.ClientConn) InfoServiceClient {
	return &infoServiceClient{cc}
}

func (c *infoServiceClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.info.InfoService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfoServiceServer is the server API for InfoService service.
type InfoServiceServer interface {
	// Get the system version information.
	GetVersion(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
}

// UnimplementedInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInfoServiceServer struct {
}

func (*UnimplementedInfoServiceServer) GetVersion(ctx context.Context, req *GetVersionRequest) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}

func RegisterInfoServiceServer(s *grpc.Server, srv InfoServiceServer) {
	s.RegisterService(&_InfoService_serviceDesc, srv)
}

func _InfoService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.info.InfoService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServiceServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mavsdk.rpc.info.InfoService",
	HandlerType: (*InfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _InfoService_GetVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MAVSDK-Proto/protos/info/info.proto",
}
