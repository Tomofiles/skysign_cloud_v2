// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MAVSDK-Proto/protos/offboard/offboard.proto

package mavsdk_rpc_offboard

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Possible results returned for offboard requests
type OffboardResult_Result int32

const (
	OffboardResult_UNKNOWN          OffboardResult_Result = 0
	OffboardResult_SUCCESS          OffboardResult_Result = 1
	OffboardResult_NO_SYSTEM        OffboardResult_Result = 2
	OffboardResult_CONNECTION_ERROR OffboardResult_Result = 3
	OffboardResult_BUSY             OffboardResult_Result = 4
	OffboardResult_COMMAND_DENIED   OffboardResult_Result = 5
	OffboardResult_TIMEOUT          OffboardResult_Result = 6
	OffboardResult_NO_SETPOINT_SET  OffboardResult_Result = 7
)

var OffboardResult_Result_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "NO_SYSTEM",
	3: "CONNECTION_ERROR",
	4: "BUSY",
	5: "COMMAND_DENIED",
	6: "TIMEOUT",
	7: "NO_SETPOINT_SET",
}

var OffboardResult_Result_value = map[string]int32{
	"UNKNOWN":          0,
	"SUCCESS":          1,
	"NO_SYSTEM":        2,
	"CONNECTION_ERROR": 3,
	"BUSY":             4,
	"COMMAND_DENIED":   5,
	"TIMEOUT":          6,
	"NO_SETPOINT_SET":  7,
}

func (x OffboardResult_Result) String() string {
	return proto.EnumName(OffboardResult_Result_name, int32(x))
}

func (OffboardResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{25, 0}
}

type StartRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{0}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

type StartResponse struct {
	OffboardResult       *OffboardResult `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StartResponse) Reset()         { *m = StartResponse{} }
func (m *StartResponse) String() string { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()    {}
func (*StartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{1}
}

func (m *StartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartResponse.Unmarshal(m, b)
}
func (m *StartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartResponse.Marshal(b, m, deterministic)
}
func (m *StartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartResponse.Merge(m, src)
}
func (m *StartResponse) XXX_Size() int {
	return xxx_messageInfo_StartResponse.Size(m)
}
func (m *StartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartResponse proto.InternalMessageInfo

func (m *StartResponse) GetOffboardResult() *OffboardResult {
	if m != nil {
		return m.OffboardResult
	}
	return nil
}

type StopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{2}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

type StopResponse struct {
	OffboardResult       *OffboardResult `protobuf:"bytes,1,opt,name=offboard_result,json=offboardResult,proto3" json:"offboard_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{3}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

func (m *StopResponse) GetOffboardResult() *OffboardResult {
	if m != nil {
		return m.OffboardResult
	}
	return nil
}

type IsActiveRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsActiveRequest) Reset()         { *m = IsActiveRequest{} }
func (m *IsActiveRequest) String() string { return proto.CompactTextString(m) }
func (*IsActiveRequest) ProtoMessage()    {}
func (*IsActiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{4}
}

func (m *IsActiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsActiveRequest.Unmarshal(m, b)
}
func (m *IsActiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsActiveRequest.Marshal(b, m, deterministic)
}
func (m *IsActiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsActiveRequest.Merge(m, src)
}
func (m *IsActiveRequest) XXX_Size() int {
	return xxx_messageInfo_IsActiveRequest.Size(m)
}
func (m *IsActiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsActiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsActiveRequest proto.InternalMessageInfo

type IsActiveResponse struct {
	IsActive             bool     `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsActiveResponse) Reset()         { *m = IsActiveResponse{} }
func (m *IsActiveResponse) String() string { return proto.CompactTextString(m) }
func (*IsActiveResponse) ProtoMessage()    {}
func (*IsActiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{5}
}

func (m *IsActiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsActiveResponse.Unmarshal(m, b)
}
func (m *IsActiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsActiveResponse.Marshal(b, m, deterministic)
}
func (m *IsActiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsActiveResponse.Merge(m, src)
}
func (m *IsActiveResponse) XXX_Size() int {
	return xxx_messageInfo_IsActiveResponse.Size(m)
}
func (m *IsActiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsActiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsActiveResponse proto.InternalMessageInfo

func (m *IsActiveResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type SetAttitudeRequest struct {
	Attitude             *Attitude `protobuf:"bytes,1,opt,name=attitude,proto3" json:"attitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetAttitudeRequest) Reset()         { *m = SetAttitudeRequest{} }
func (m *SetAttitudeRequest) String() string { return proto.CompactTextString(m) }
func (*SetAttitudeRequest) ProtoMessage()    {}
func (*SetAttitudeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{6}
}

func (m *SetAttitudeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAttitudeRequest.Unmarshal(m, b)
}
func (m *SetAttitudeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAttitudeRequest.Marshal(b, m, deterministic)
}
func (m *SetAttitudeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAttitudeRequest.Merge(m, src)
}
func (m *SetAttitudeRequest) XXX_Size() int {
	return xxx_messageInfo_SetAttitudeRequest.Size(m)
}
func (m *SetAttitudeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAttitudeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAttitudeRequest proto.InternalMessageInfo

func (m *SetAttitudeRequest) GetAttitude() *Attitude {
	if m != nil {
		return m.Attitude
	}
	return nil
}

type SetAttitudeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAttitudeResponse) Reset()         { *m = SetAttitudeResponse{} }
func (m *SetAttitudeResponse) String() string { return proto.CompactTextString(m) }
func (*SetAttitudeResponse) ProtoMessage()    {}
func (*SetAttitudeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{7}
}

func (m *SetAttitudeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAttitudeResponse.Unmarshal(m, b)
}
func (m *SetAttitudeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAttitudeResponse.Marshal(b, m, deterministic)
}
func (m *SetAttitudeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAttitudeResponse.Merge(m, src)
}
func (m *SetAttitudeResponse) XXX_Size() int {
	return xxx_messageInfo_SetAttitudeResponse.Size(m)
}
func (m *SetAttitudeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAttitudeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetAttitudeResponse proto.InternalMessageInfo

type SetActuatorControlRequest struct {
	ActuatorControl      *ActuatorControl `protobuf:"bytes,1,opt,name=actuator_control,json=actuatorControl,proto3" json:"actuator_control,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SetActuatorControlRequest) Reset()         { *m = SetActuatorControlRequest{} }
func (m *SetActuatorControlRequest) String() string { return proto.CompactTextString(m) }
func (*SetActuatorControlRequest) ProtoMessage()    {}
func (*SetActuatorControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{8}
}

func (m *SetActuatorControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetActuatorControlRequest.Unmarshal(m, b)
}
func (m *SetActuatorControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetActuatorControlRequest.Marshal(b, m, deterministic)
}
func (m *SetActuatorControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetActuatorControlRequest.Merge(m, src)
}
func (m *SetActuatorControlRequest) XXX_Size() int {
	return xxx_messageInfo_SetActuatorControlRequest.Size(m)
}
func (m *SetActuatorControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetActuatorControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetActuatorControlRequest proto.InternalMessageInfo

func (m *SetActuatorControlRequest) GetActuatorControl() *ActuatorControl {
	if m != nil {
		return m.ActuatorControl
	}
	return nil
}

type SetActuatorControlResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetActuatorControlResponse) Reset()         { *m = SetActuatorControlResponse{} }
func (m *SetActuatorControlResponse) String() string { return proto.CompactTextString(m) }
func (*SetActuatorControlResponse) ProtoMessage()    {}
func (*SetActuatorControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{9}
}

func (m *SetActuatorControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetActuatorControlResponse.Unmarshal(m, b)
}
func (m *SetActuatorControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetActuatorControlResponse.Marshal(b, m, deterministic)
}
func (m *SetActuatorControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetActuatorControlResponse.Merge(m, src)
}
func (m *SetActuatorControlResponse) XXX_Size() int {
	return xxx_messageInfo_SetActuatorControlResponse.Size(m)
}
func (m *SetActuatorControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetActuatorControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetActuatorControlResponse proto.InternalMessageInfo

type SetAttitudeRateRequest struct {
	AttitudeRate         *AttitudeRate `protobuf:"bytes,1,opt,name=attitude_rate,json=attitudeRate,proto3" json:"attitude_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetAttitudeRateRequest) Reset()         { *m = SetAttitudeRateRequest{} }
func (m *SetAttitudeRateRequest) String() string { return proto.CompactTextString(m) }
func (*SetAttitudeRateRequest) ProtoMessage()    {}
func (*SetAttitudeRateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{10}
}

func (m *SetAttitudeRateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAttitudeRateRequest.Unmarshal(m, b)
}
func (m *SetAttitudeRateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAttitudeRateRequest.Marshal(b, m, deterministic)
}
func (m *SetAttitudeRateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAttitudeRateRequest.Merge(m, src)
}
func (m *SetAttitudeRateRequest) XXX_Size() int {
	return xxx_messageInfo_SetAttitudeRateRequest.Size(m)
}
func (m *SetAttitudeRateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAttitudeRateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAttitudeRateRequest proto.InternalMessageInfo

func (m *SetAttitudeRateRequest) GetAttitudeRate() *AttitudeRate {
	if m != nil {
		return m.AttitudeRate
	}
	return nil
}

type SetAttitudeRateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAttitudeRateResponse) Reset()         { *m = SetAttitudeRateResponse{} }
func (m *SetAttitudeRateResponse) String() string { return proto.CompactTextString(m) }
func (*SetAttitudeRateResponse) ProtoMessage()    {}
func (*SetAttitudeRateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{11}
}

func (m *SetAttitudeRateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAttitudeRateResponse.Unmarshal(m, b)
}
func (m *SetAttitudeRateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAttitudeRateResponse.Marshal(b, m, deterministic)
}
func (m *SetAttitudeRateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAttitudeRateResponse.Merge(m, src)
}
func (m *SetAttitudeRateResponse) XXX_Size() int {
	return xxx_messageInfo_SetAttitudeRateResponse.Size(m)
}
func (m *SetAttitudeRateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAttitudeRateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetAttitudeRateResponse proto.InternalMessageInfo

type SetPositionNedRequest struct {
	PositionNedYaw       *PositionNedYaw `protobuf:"bytes,1,opt,name=position_ned_yaw,json=positionNedYaw,proto3" json:"position_ned_yaw,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SetPositionNedRequest) Reset()         { *m = SetPositionNedRequest{} }
func (m *SetPositionNedRequest) String() string { return proto.CompactTextString(m) }
func (*SetPositionNedRequest) ProtoMessage()    {}
func (*SetPositionNedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{12}
}

func (m *SetPositionNedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPositionNedRequest.Unmarshal(m, b)
}
func (m *SetPositionNedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPositionNedRequest.Marshal(b, m, deterministic)
}
func (m *SetPositionNedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPositionNedRequest.Merge(m, src)
}
func (m *SetPositionNedRequest) XXX_Size() int {
	return xxx_messageInfo_SetPositionNedRequest.Size(m)
}
func (m *SetPositionNedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPositionNedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPositionNedRequest proto.InternalMessageInfo

func (m *SetPositionNedRequest) GetPositionNedYaw() *PositionNedYaw {
	if m != nil {
		return m.PositionNedYaw
	}
	return nil
}

type SetPositionNedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPositionNedResponse) Reset()         { *m = SetPositionNedResponse{} }
func (m *SetPositionNedResponse) String() string { return proto.CompactTextString(m) }
func (*SetPositionNedResponse) ProtoMessage()    {}
func (*SetPositionNedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{13}
}

func (m *SetPositionNedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPositionNedResponse.Unmarshal(m, b)
}
func (m *SetPositionNedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPositionNedResponse.Marshal(b, m, deterministic)
}
func (m *SetPositionNedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPositionNedResponse.Merge(m, src)
}
func (m *SetPositionNedResponse) XXX_Size() int {
	return xxx_messageInfo_SetPositionNedResponse.Size(m)
}
func (m *SetPositionNedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPositionNedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetPositionNedResponse proto.InternalMessageInfo

type SetVelocityBodyRequest struct {
	VelocityBodyYawspeed *VelocityBodyYawspeed `protobuf:"bytes,1,opt,name=velocity_body_yawspeed,json=velocityBodyYawspeed,proto3" json:"velocity_body_yawspeed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SetVelocityBodyRequest) Reset()         { *m = SetVelocityBodyRequest{} }
func (m *SetVelocityBodyRequest) String() string { return proto.CompactTextString(m) }
func (*SetVelocityBodyRequest) ProtoMessage()    {}
func (*SetVelocityBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{14}
}

func (m *SetVelocityBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVelocityBodyRequest.Unmarshal(m, b)
}
func (m *SetVelocityBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVelocityBodyRequest.Marshal(b, m, deterministic)
}
func (m *SetVelocityBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVelocityBodyRequest.Merge(m, src)
}
func (m *SetVelocityBodyRequest) XXX_Size() int {
	return xxx_messageInfo_SetVelocityBodyRequest.Size(m)
}
func (m *SetVelocityBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVelocityBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetVelocityBodyRequest proto.InternalMessageInfo

func (m *SetVelocityBodyRequest) GetVelocityBodyYawspeed() *VelocityBodyYawspeed {
	if m != nil {
		return m.VelocityBodyYawspeed
	}
	return nil
}

type SetVelocityBodyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVelocityBodyResponse) Reset()         { *m = SetVelocityBodyResponse{} }
func (m *SetVelocityBodyResponse) String() string { return proto.CompactTextString(m) }
func (*SetVelocityBodyResponse) ProtoMessage()    {}
func (*SetVelocityBodyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{15}
}

func (m *SetVelocityBodyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVelocityBodyResponse.Unmarshal(m, b)
}
func (m *SetVelocityBodyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVelocityBodyResponse.Marshal(b, m, deterministic)
}
func (m *SetVelocityBodyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVelocityBodyResponse.Merge(m, src)
}
func (m *SetVelocityBodyResponse) XXX_Size() int {
	return xxx_messageInfo_SetVelocityBodyResponse.Size(m)
}
func (m *SetVelocityBodyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVelocityBodyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetVelocityBodyResponse proto.InternalMessageInfo

type SetVelocityNedRequest struct {
	VelocityNedYaw       *VelocityNedYaw `protobuf:"bytes,1,opt,name=velocity_ned_yaw,json=velocityNedYaw,proto3" json:"velocity_ned_yaw,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SetVelocityNedRequest) Reset()         { *m = SetVelocityNedRequest{} }
func (m *SetVelocityNedRequest) String() string { return proto.CompactTextString(m) }
func (*SetVelocityNedRequest) ProtoMessage()    {}
func (*SetVelocityNedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{16}
}

func (m *SetVelocityNedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVelocityNedRequest.Unmarshal(m, b)
}
func (m *SetVelocityNedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVelocityNedRequest.Marshal(b, m, deterministic)
}
func (m *SetVelocityNedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVelocityNedRequest.Merge(m, src)
}
func (m *SetVelocityNedRequest) XXX_Size() int {
	return xxx_messageInfo_SetVelocityNedRequest.Size(m)
}
func (m *SetVelocityNedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVelocityNedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetVelocityNedRequest proto.InternalMessageInfo

func (m *SetVelocityNedRequest) GetVelocityNedYaw() *VelocityNedYaw {
	if m != nil {
		return m.VelocityNedYaw
	}
	return nil
}

type SetVelocityNedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVelocityNedResponse) Reset()         { *m = SetVelocityNedResponse{} }
func (m *SetVelocityNedResponse) String() string { return proto.CompactTextString(m) }
func (*SetVelocityNedResponse) ProtoMessage()    {}
func (*SetVelocityNedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{17}
}

func (m *SetVelocityNedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVelocityNedResponse.Unmarshal(m, b)
}
func (m *SetVelocityNedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVelocityNedResponse.Marshal(b, m, deterministic)
}
func (m *SetVelocityNedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVelocityNedResponse.Merge(m, src)
}
func (m *SetVelocityNedResponse) XXX_Size() int {
	return xxx_messageInfo_SetVelocityNedResponse.Size(m)
}
func (m *SetVelocityNedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVelocityNedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetVelocityNedResponse proto.InternalMessageInfo

// Type for attitude body angles in NED reference frame (roll, pitch, yaw and thrust)
type Attitude struct {
	RollDeg              float32  `protobuf:"fixed32,1,opt,name=roll_deg,json=rollDeg,proto3" json:"roll_deg,omitempty"`
	PitchDeg             float32  `protobuf:"fixed32,2,opt,name=pitch_deg,json=pitchDeg,proto3" json:"pitch_deg,omitempty"`
	YawDeg               float32  `protobuf:"fixed32,3,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`
	ThrustValue          float32  `protobuf:"fixed32,4,opt,name=thrust_value,json=thrustValue,proto3" json:"thrust_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attitude) Reset()         { *m = Attitude{} }
func (m *Attitude) String() string { return proto.CompactTextString(m) }
func (*Attitude) ProtoMessage()    {}
func (*Attitude) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{18}
}

func (m *Attitude) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attitude.Unmarshal(m, b)
}
func (m *Attitude) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attitude.Marshal(b, m, deterministic)
}
func (m *Attitude) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attitude.Merge(m, src)
}
func (m *Attitude) XXX_Size() int {
	return xxx_messageInfo_Attitude.Size(m)
}
func (m *Attitude) XXX_DiscardUnknown() {
	xxx_messageInfo_Attitude.DiscardUnknown(m)
}

var xxx_messageInfo_Attitude proto.InternalMessageInfo

func (m *Attitude) GetRollDeg() float32 {
	if m != nil {
		return m.RollDeg
	}
	return 0
}

func (m *Attitude) GetPitchDeg() float32 {
	if m != nil {
		return m.PitchDeg
	}
	return 0
}

func (m *Attitude) GetYawDeg() float32 {
	if m != nil {
		return m.YawDeg
	}
	return 0
}

func (m *Attitude) GetThrustValue() float32 {
	if m != nil {
		return m.ThrustValue
	}
	return 0
}

//
// Eight controls that will be given to the group. Each control is a normalized
// (-1..+1) command value, which will be mapped and scaled through the mixer.
type ActuatorControlGroup struct {
	Controls             []float32 `protobuf:"fixed32,1,rep,packed,name=controls,proto3" json:"controls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ActuatorControlGroup) Reset()         { *m = ActuatorControlGroup{} }
func (m *ActuatorControlGroup) String() string { return proto.CompactTextString(m) }
func (*ActuatorControlGroup) ProtoMessage()    {}
func (*ActuatorControlGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{19}
}

func (m *ActuatorControlGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActuatorControlGroup.Unmarshal(m, b)
}
func (m *ActuatorControlGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActuatorControlGroup.Marshal(b, m, deterministic)
}
func (m *ActuatorControlGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActuatorControlGroup.Merge(m, src)
}
func (m *ActuatorControlGroup) XXX_Size() int {
	return xxx_messageInfo_ActuatorControlGroup.Size(m)
}
func (m *ActuatorControlGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ActuatorControlGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ActuatorControlGroup proto.InternalMessageInfo

func (m *ActuatorControlGroup) GetControls() []float32 {
	if m != nil {
		return m.Controls
	}
	return nil
}

//
// Type for actuator control.
//
// Control members should be normed to -1..+1 where 0 is neutral position.
// Throttle for single rotation direction motors is 0..1, negative range for reverse direction.
//
// One group support eight controls.
//
// Up to 16 actuator controls can be set. To ignore an output group, set all it conrols to NaN.
// If one or more controls in group is not NaN, then all NaN controls will sent as zero.
// The first 8 actuator controls internally map to control group 0, the latter 8 actuator
// controls map to control group 1. Depending on what controls are set (instead of NaN) 1 or 2
// MAVLink messages are actually sent.
//
// In PX4 v1.9.0 Only first four Control Groups are supported
// (https://github.com/PX4/Firmware/blob/v1.9.0/src/modules/mavlink/mavlink_receiver.cpp#L980).
type ActuatorControl struct {
	Groups               []*ActuatorControlGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ActuatorControl) Reset()         { *m = ActuatorControl{} }
func (m *ActuatorControl) String() string { return proto.CompactTextString(m) }
func (*ActuatorControl) ProtoMessage()    {}
func (*ActuatorControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{20}
}

func (m *ActuatorControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActuatorControl.Unmarshal(m, b)
}
func (m *ActuatorControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActuatorControl.Marshal(b, m, deterministic)
}
func (m *ActuatorControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActuatorControl.Merge(m, src)
}
func (m *ActuatorControl) XXX_Size() int {
	return xxx_messageInfo_ActuatorControl.Size(m)
}
func (m *ActuatorControl) XXX_DiscardUnknown() {
	xxx_messageInfo_ActuatorControl.DiscardUnknown(m)
}

var xxx_messageInfo_ActuatorControl proto.InternalMessageInfo

func (m *ActuatorControl) GetGroups() []*ActuatorControlGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

// Type for attitude rate commands in body coordinates (roll, pitch, yaw angular rate and thrust)
type AttitudeRate struct {
	RollDegS             float32  `protobuf:"fixed32,1,opt,name=roll_deg_s,json=rollDegS,proto3" json:"roll_deg_s,omitempty"`
	PitchDegS            float32  `protobuf:"fixed32,2,opt,name=pitch_deg_s,json=pitchDegS,proto3" json:"pitch_deg_s,omitempty"`
	YawDegS              float32  `protobuf:"fixed32,3,opt,name=yaw_deg_s,json=yawDegS,proto3" json:"yaw_deg_s,omitempty"`
	ThrustValue          float32  `protobuf:"fixed32,4,opt,name=thrust_value,json=thrustValue,proto3" json:"thrust_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttitudeRate) Reset()         { *m = AttitudeRate{} }
func (m *AttitudeRate) String() string { return proto.CompactTextString(m) }
func (*AttitudeRate) ProtoMessage()    {}
func (*AttitudeRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{21}
}

func (m *AttitudeRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttitudeRate.Unmarshal(m, b)
}
func (m *AttitudeRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttitudeRate.Marshal(b, m, deterministic)
}
func (m *AttitudeRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttitudeRate.Merge(m, src)
}
func (m *AttitudeRate) XXX_Size() int {
	return xxx_messageInfo_AttitudeRate.Size(m)
}
func (m *AttitudeRate) XXX_DiscardUnknown() {
	xxx_messageInfo_AttitudeRate.DiscardUnknown(m)
}

var xxx_messageInfo_AttitudeRate proto.InternalMessageInfo

func (m *AttitudeRate) GetRollDegS() float32 {
	if m != nil {
		return m.RollDegS
	}
	return 0
}

func (m *AttitudeRate) GetPitchDegS() float32 {
	if m != nil {
		return m.PitchDegS
	}
	return 0
}

func (m *AttitudeRate) GetYawDegS() float32 {
	if m != nil {
		return m.YawDegS
	}
	return 0
}

func (m *AttitudeRate) GetThrustValue() float32 {
	if m != nil {
		return m.ThrustValue
	}
	return 0
}

// Type for position commands in NED (North East Down) coordinates and yaw.
type PositionNedYaw struct {
	NorthM               float32  `protobuf:"fixed32,1,opt,name=north_m,json=northM,proto3" json:"north_m,omitempty"`
	EastM                float32  `protobuf:"fixed32,2,opt,name=east_m,json=eastM,proto3" json:"east_m,omitempty"`
	DownM                float32  `protobuf:"fixed32,3,opt,name=down_m,json=downM,proto3" json:"down_m,omitempty"`
	YawDeg               float32  `protobuf:"fixed32,4,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionNedYaw) Reset()         { *m = PositionNedYaw{} }
func (m *PositionNedYaw) String() string { return proto.CompactTextString(m) }
func (*PositionNedYaw) ProtoMessage()    {}
func (*PositionNedYaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{22}
}

func (m *PositionNedYaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionNedYaw.Unmarshal(m, b)
}
func (m *PositionNedYaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionNedYaw.Marshal(b, m, deterministic)
}
func (m *PositionNedYaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionNedYaw.Merge(m, src)
}
func (m *PositionNedYaw) XXX_Size() int {
	return xxx_messageInfo_PositionNedYaw.Size(m)
}
func (m *PositionNedYaw) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionNedYaw.DiscardUnknown(m)
}

var xxx_messageInfo_PositionNedYaw proto.InternalMessageInfo

func (m *PositionNedYaw) GetNorthM() float32 {
	if m != nil {
		return m.NorthM
	}
	return 0
}

func (m *PositionNedYaw) GetEastM() float32 {
	if m != nil {
		return m.EastM
	}
	return 0
}

func (m *PositionNedYaw) GetDownM() float32 {
	if m != nil {
		return m.DownM
	}
	return 0
}

func (m *PositionNedYaw) GetYawDeg() float32 {
	if m != nil {
		return m.YawDeg
	}
	return 0
}

// Type for velocity commands in body coordinates.
type VelocityBodyYawspeed struct {
	ForwardMS            float32  `protobuf:"fixed32,1,opt,name=forward_m_s,json=forwardMS,proto3" json:"forward_m_s,omitempty"`
	RightMS              float32  `protobuf:"fixed32,2,opt,name=right_m_s,json=rightMS,proto3" json:"right_m_s,omitempty"`
	DownMS               float32  `protobuf:"fixed32,3,opt,name=down_m_s,json=downMS,proto3" json:"down_m_s,omitempty"`
	YawspeedDegS         float32  `protobuf:"fixed32,4,opt,name=yawspeed_deg_s,json=yawspeedDegS,proto3" json:"yawspeed_deg_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VelocityBodyYawspeed) Reset()         { *m = VelocityBodyYawspeed{} }
func (m *VelocityBodyYawspeed) String() string { return proto.CompactTextString(m) }
func (*VelocityBodyYawspeed) ProtoMessage()    {}
func (*VelocityBodyYawspeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{23}
}

func (m *VelocityBodyYawspeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VelocityBodyYawspeed.Unmarshal(m, b)
}
func (m *VelocityBodyYawspeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VelocityBodyYawspeed.Marshal(b, m, deterministic)
}
func (m *VelocityBodyYawspeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VelocityBodyYawspeed.Merge(m, src)
}
func (m *VelocityBodyYawspeed) XXX_Size() int {
	return xxx_messageInfo_VelocityBodyYawspeed.Size(m)
}
func (m *VelocityBodyYawspeed) XXX_DiscardUnknown() {
	xxx_messageInfo_VelocityBodyYawspeed.DiscardUnknown(m)
}

var xxx_messageInfo_VelocityBodyYawspeed proto.InternalMessageInfo

func (m *VelocityBodyYawspeed) GetForwardMS() float32 {
	if m != nil {
		return m.ForwardMS
	}
	return 0
}

func (m *VelocityBodyYawspeed) GetRightMS() float32 {
	if m != nil {
		return m.RightMS
	}
	return 0
}

func (m *VelocityBodyYawspeed) GetDownMS() float32 {
	if m != nil {
		return m.DownMS
	}
	return 0
}

func (m *VelocityBodyYawspeed) GetYawspeedDegS() float32 {
	if m != nil {
		return m.YawspeedDegS
	}
	return 0
}

// Type for velocity commands in NED (North East Down) coordinates and yaw.
type VelocityNedYaw struct {
	NorthMS              float32  `protobuf:"fixed32,1,opt,name=north_m_s,json=northMS,proto3" json:"north_m_s,omitempty"`
	EastMS               float32  `protobuf:"fixed32,2,opt,name=east_m_s,json=eastMS,proto3" json:"east_m_s,omitempty"`
	DownMS               float32  `protobuf:"fixed32,3,opt,name=down_m_s,json=downMS,proto3" json:"down_m_s,omitempty"`
	YawDeg               float32  `protobuf:"fixed32,4,opt,name=yaw_deg,json=yawDeg,proto3" json:"yaw_deg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VelocityNedYaw) Reset()         { *m = VelocityNedYaw{} }
func (m *VelocityNedYaw) String() string { return proto.CompactTextString(m) }
func (*VelocityNedYaw) ProtoMessage()    {}
func (*VelocityNedYaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{24}
}

func (m *VelocityNedYaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VelocityNedYaw.Unmarshal(m, b)
}
func (m *VelocityNedYaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VelocityNedYaw.Marshal(b, m, deterministic)
}
func (m *VelocityNedYaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VelocityNedYaw.Merge(m, src)
}
func (m *VelocityNedYaw) XXX_Size() int {
	return xxx_messageInfo_VelocityNedYaw.Size(m)
}
func (m *VelocityNedYaw) XXX_DiscardUnknown() {
	xxx_messageInfo_VelocityNedYaw.DiscardUnknown(m)
}

var xxx_messageInfo_VelocityNedYaw proto.InternalMessageInfo

func (m *VelocityNedYaw) GetNorthMS() float32 {
	if m != nil {
		return m.NorthMS
	}
	return 0
}

func (m *VelocityNedYaw) GetEastMS() float32 {
	if m != nil {
		return m.EastMS
	}
	return 0
}

func (m *VelocityNedYaw) GetDownMS() float32 {
	if m != nil {
		return m.DownMS
	}
	return 0
}

func (m *VelocityNedYaw) GetYawDeg() float32 {
	if m != nil {
		return m.YawDeg
	}
	return 0
}

// Result type.
type OffboardResult struct {
	Result               OffboardResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.offboard.OffboardResult_Result" json:"result,omitempty"`
	ResultStr            string                `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *OffboardResult) Reset()         { *m = OffboardResult{} }
func (m *OffboardResult) String() string { return proto.CompactTextString(m) }
func (*OffboardResult) ProtoMessage()    {}
func (*OffboardResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6fef796e57c8343, []int{25}
}

func (m *OffboardResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OffboardResult.Unmarshal(m, b)
}
func (m *OffboardResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OffboardResult.Marshal(b, m, deterministic)
}
func (m *OffboardResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OffboardResult.Merge(m, src)
}
func (m *OffboardResult) XXX_Size() int {
	return xxx_messageInfo_OffboardResult.Size(m)
}
func (m *OffboardResult) XXX_DiscardUnknown() {
	xxx_messageInfo_OffboardResult.DiscardUnknown(m)
}

var xxx_messageInfo_OffboardResult proto.InternalMessageInfo

func (m *OffboardResult) GetResult() OffboardResult_Result {
	if m != nil {
		return m.Result
	}
	return OffboardResult_UNKNOWN
}

func (m *OffboardResult) GetResultStr() string {
	if m != nil {
		return m.ResultStr
	}
	return ""
}

func init() {
	proto.RegisterEnum("mavsdk.rpc.offboard.OffboardResult_Result", OffboardResult_Result_name, OffboardResult_Result_value)
	proto.RegisterType((*StartRequest)(nil), "mavsdk.rpc.offboard.StartRequest")
	proto.RegisterType((*StartResponse)(nil), "mavsdk.rpc.offboard.StartResponse")
	proto.RegisterType((*StopRequest)(nil), "mavsdk.rpc.offboard.StopRequest")
	proto.RegisterType((*StopResponse)(nil), "mavsdk.rpc.offboard.StopResponse")
	proto.RegisterType((*IsActiveRequest)(nil), "mavsdk.rpc.offboard.IsActiveRequest")
	proto.RegisterType((*IsActiveResponse)(nil), "mavsdk.rpc.offboard.IsActiveResponse")
	proto.RegisterType((*SetAttitudeRequest)(nil), "mavsdk.rpc.offboard.SetAttitudeRequest")
	proto.RegisterType((*SetAttitudeResponse)(nil), "mavsdk.rpc.offboard.SetAttitudeResponse")
	proto.RegisterType((*SetActuatorControlRequest)(nil), "mavsdk.rpc.offboard.SetActuatorControlRequest")
	proto.RegisterType((*SetActuatorControlResponse)(nil), "mavsdk.rpc.offboard.SetActuatorControlResponse")
	proto.RegisterType((*SetAttitudeRateRequest)(nil), "mavsdk.rpc.offboard.SetAttitudeRateRequest")
	proto.RegisterType((*SetAttitudeRateResponse)(nil), "mavsdk.rpc.offboard.SetAttitudeRateResponse")
	proto.RegisterType((*SetPositionNedRequest)(nil), "mavsdk.rpc.offboard.SetPositionNedRequest")
	proto.RegisterType((*SetPositionNedResponse)(nil), "mavsdk.rpc.offboard.SetPositionNedResponse")
	proto.RegisterType((*SetVelocityBodyRequest)(nil), "mavsdk.rpc.offboard.SetVelocityBodyRequest")
	proto.RegisterType((*SetVelocityBodyResponse)(nil), "mavsdk.rpc.offboard.SetVelocityBodyResponse")
	proto.RegisterType((*SetVelocityNedRequest)(nil), "mavsdk.rpc.offboard.SetVelocityNedRequest")
	proto.RegisterType((*SetVelocityNedResponse)(nil), "mavsdk.rpc.offboard.SetVelocityNedResponse")
	proto.RegisterType((*Attitude)(nil), "mavsdk.rpc.offboard.Attitude")
	proto.RegisterType((*ActuatorControlGroup)(nil), "mavsdk.rpc.offboard.ActuatorControlGroup")
	proto.RegisterType((*ActuatorControl)(nil), "mavsdk.rpc.offboard.ActuatorControl")
	proto.RegisterType((*AttitudeRate)(nil), "mavsdk.rpc.offboard.AttitudeRate")
	proto.RegisterType((*PositionNedYaw)(nil), "mavsdk.rpc.offboard.PositionNedYaw")
	proto.RegisterType((*VelocityBodyYawspeed)(nil), "mavsdk.rpc.offboard.VelocityBodyYawspeed")
	proto.RegisterType((*VelocityNedYaw)(nil), "mavsdk.rpc.offboard.VelocityNedYaw")
	proto.RegisterType((*OffboardResult)(nil), "mavsdk.rpc.offboard.OffboardResult")
}

func init() {
	proto.RegisterFile("MAVSDK-Proto/protos/offboard/offboard.proto", fileDescriptor_e6fef796e57c8343)
}

var fileDescriptor_e6fef796e57c8343 = []byte{
	// 1068 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcf, 0x4f, 0xe3, 0x46,
	0x14, 0xde, 0xb0, 0x90, 0x38, 0x2f, 0xe0, 0xb8, 0x03, 0xec, 0x82, 0xbb, 0x5b, 0x81, 0x77, 0xab,
	0x6e, 0x97, 0x36, 0x48, 0xf4, 0xd4, 0x23, 0x84, 0xb4, 0x8a, 0xb6, 0xb6, 0x91, 0x1d, 0xa8, 0x22,
	0xb5, 0x9a, 0x9a, 0xd8, 0x80, 0xb5, 0x49, 0xc6, 0xb5, 0x27, 0x89, 0x72, 0xe9, 0xb5, 0x87, 0xde,
	0xfa, 0x37, 0xf4, 0xdf, 0xac, 0x54, 0xcd, 0x78, 0xc6, 0x6b, 0x07, 0x27, 0xe4, 0xd2, 0x4b, 0xe4,
	0xf7, 0x63, 0xde, 0xf7, 0xbd, 0xcf, 0xe3, 0x99, 0x17, 0x38, 0x31, 0xcf, 0x6f, 0xdc, 0xcb, 0x0f,
	0xdf, 0x5e, 0xc5, 0x84, 0x92, 0xd3, 0x88, 0xfd, 0x26, 0xa7, 0xe4, 0xee, 0xee, 0x96, 0x78, 0xb1,
	0x9f, 0x3d, 0xb4, 0x78, 0x00, 0xed, 0x8e, 0xbc, 0x69, 0xe2, 0x7f, 0x6c, 0xc5, 0xd1, 0xa0, 0x25,
	0x43, 0x86, 0x0a, 0xdb, 0x2e, 0xf5, 0x62, 0xea, 0x04, 0xbf, 0x4f, 0x82, 0x84, 0x1a, 0xbf, 0xc2,
	0x8e, 0xb0, 0x93, 0x88, 0x8c, 0x93, 0x00, 0xfd, 0x04, 0x4d, 0x99, 0x8c, 0xe3, 0x20, 0x99, 0x0c,
	0xe9, 0x41, 0xe5, 0xa8, 0xf2, 0xae, 0x71, 0xf6, 0xa6, 0x55, 0x52, 0xaf, 0x65, 0x8b, 0x07, 0x87,
	0xa7, 0x3a, 0x2a, 0x29, 0xd8, 0xc6, 0x0e, 0x34, 0x5c, 0x4a, 0x22, 0x89, 0xf6, 0x0b, 0x43, 0x67,
	0xe6, 0xff, 0x02, 0xf6, 0x19, 0x34, 0xbb, 0xc9, 0xf9, 0x80, 0x86, 0xd3, 0x40, 0x02, 0x9e, 0x82,
	0xf6, 0xc9, 0x25, 0x40, 0x3f, 0x87, 0x7a, 0x98, 0x60, 0x8f, 0x3b, 0x39, 0x9c, 0xe2, 0x28, 0xa1,
	0x48, 0x32, 0x6c, 0x40, 0x6e, 0x40, 0xcf, 0x29, 0x0d, 0xe9, 0xc4, 0x97, 0x65, 0xd0, 0xf7, 0xa0,
	0x78, 0xc2, 0x25, 0x08, 0xbe, 0x2e, 0x25, 0x98, 0xad, 0xcb, 0xd2, 0x8d, 0x7d, 0xd8, 0x2d, 0x14,
	0x4c, 0x49, 0x18, 0x43, 0x38, 0x64, 0xee, 0x01, 0x9d, 0x78, 0x94, 0xc4, 0x6d, 0x32, 0xa6, 0x31,
	0x19, 0x4a, 0x38, 0x1b, 0x34, 0x4f, 0x44, 0xf0, 0x20, 0x0d, 0x09, 0xd8, 0xb7, 0xe5, 0xb0, 0x0b,
	0x65, 0x9a, 0x5e, 0xd1, 0x61, 0xbc, 0x02, 0xbd, 0x0c, 0x4d, 0x70, 0xf9, 0x0d, 0x5e, 0xe4, 0x29,
	0x7a, 0x34, 0xeb, 0xfb, 0x07, 0xd8, 0x91, 0x8d, 0xe0, 0xd8, 0xa3, 0xb2, 0xf9, 0xe3, 0xd5, 0xcd,
	0xb3, 0x02, 0xdb, 0x5e, 0xce, 0x32, 0x0e, 0xe1, 0xe5, 0x23, 0x04, 0x01, 0x7e, 0x07, 0xfb, 0x6e,
	0x40, 0xaf, 0x48, 0x12, 0xd2, 0x90, 0x8c, 0xad, 0xc0, 0x97, 0xd8, 0x26, 0x68, 0x91, 0xf0, 0xe2,
	0x71, 0xe0, 0xe3, 0xb9, 0x37, 0x5b, 0xb9, 0x39, 0x72, 0x25, 0xfa, 0xde, 0xcc, 0x51, 0xa3, 0x82,
	0x6d, 0x1c, 0xf0, 0x26, 0x0b, 0x38, 0x82, 0xc1, 0x9c, 0x47, 0x6e, 0x82, 0x21, 0x19, 0x84, 0x74,
	0x7e, 0x41, 0xfc, 0xb9, 0xa4, 0x80, 0xe1, 0xc5, 0x54, 0xb8, 0xf1, 0x2d, 0xf1, 0xe7, 0x8c, 0x43,
	0x12, 0x05, 0x81, 0x2f, 0x88, 0x7c, 0x5d, 0x4a, 0x24, 0x5f, 0xa9, 0x2f, 0x16, 0x38, 0x7b, 0xd3,
	0x12, 0xaf, 0xd0, 0xa5, 0x08, 0x5d, 0xd0, 0x45, 0x86, 0x8a, 0xba, 0x64, 0xa4, 0xd6, 0xd1, 0x25,
	0x57, 0x82, 0xeb, 0x32, 0x2d, 0xd8, 0x42, 0x97, 0x02, 0x8e, 0x60, 0xf0, 0x07, 0x28, 0xf2, 0x8d,
	0xa1, 0x43, 0x50, 0x62, 0x32, 0x1c, 0x62, 0x3f, 0xb8, 0xe7, 0x60, 0x1b, 0x4e, 0x8d, 0xd9, 0x97,
	0xc1, 0x3d, 0xfb, 0x9c, 0xa2, 0x90, 0x0e, 0x1e, 0x78, 0x6c, 0x83, 0xc7, 0x14, 0xee, 0x60, 0xc1,
	0x97, 0x50, 0x9b, 0x7b, 0x33, 0x1e, 0x7a, 0xce, 0x43, 0xd5, 0xb9, 0x37, 0x63, 0x81, 0x63, 0xd8,
	0xa6, 0x0f, 0xf1, 0x24, 0xa1, 0x78, 0xea, 0x0d, 0x27, 0xc1, 0xc1, 0x26, 0x8f, 0x36, 0x52, 0xdf,
	0x0d, 0x73, 0x19, 0x67, 0xb0, 0xb7, 0xb0, 0x63, 0x7f, 0x8c, 0xc9, 0x24, 0x42, 0x3a, 0x28, 0xe2,
	0xa3, 0x48, 0x0e, 0x2a, 0x47, 0xcf, 0x19, 0x9e, 0xb4, 0x8d, 0x1e, 0x34, 0x17, 0xd6, 0xa0, 0x73,
	0xa8, 0xde, 0xb3, 0x75, 0x69, 0xf2, 0xb2, 0x97, 0x56, 0x86, 0xe4, 0x88, 0x85, 0xc6, 0x5f, 0x15,
	0xd8, 0xce, 0x6f, 0x5e, 0xf4, 0x0a, 0x40, 0xca, 0x81, 0x13, 0x21, 0x88, 0x22, 0x04, 0x71, 0xd1,
	0x17, 0xd0, 0xc8, 0x14, 0xc1, 0x89, 0xd0, 0xa4, 0x2e, 0x35, 0x71, 0x91, 0x0e, 0x75, 0x21, 0x0a,
	0x4e, 0x84, 0x2c, 0xb5, 0x54, 0x16, 0x77, 0x1d, 0x5d, 0x22, 0x50, 0x8b, 0x7b, 0x9d, 0xa9, 0x3c,
	0x26, 0x31, 0x7d, 0xc0, 0x23, 0xc1, 0xa5, 0xca, 0x4d, 0x13, 0xed, 0x43, 0x35, 0xf0, 0x12, 0x8a,
	0x47, 0x82, 0xc4, 0x16, 0xb3, 0xb8, 0xdb, 0x27, 0xb3, 0x31, 0x1e, 0x09, 0xf4, 0x2d, 0x66, 0x99,
	0xf9, 0x97, 0xb5, 0x99, 0x7f, 0x59, 0xc6, 0xdf, 0x15, 0xd8, 0x2b, 0xdb, 0xd5, 0xac, 0xd3, 0x3b,
	0x12, 0xcf, 0xd8, 0xf1, 0x3d, 0xca, 0x84, 0xa8, 0x0b, 0x97, 0xc9, 0x3b, 0x8d, 0xc3, 0xfb, 0x07,
	0xca, 0xa3, 0x1b, 0x62, 0xdf, 0x30, 0x87, 0xe9, 0xa2, 0x03, 0x50, 0x52, 0x12, 0x99, 0x08, 0x9c,
	0x94, 0xe9, 0xa2, 0xb7, 0xa0, 0xca, 0x0f, 0x4d, 0x88, 0x94, 0xd2, 0xd9, 0x96, 0x5e, 0xa6, 0x94,
	0x31, 0x07, 0xb5, 0xb8, 0xb5, 0x19, 0x9a, 0x90, 0x21, 0xe3, 0x92, 0xea, 0x92, 0xa2, 0xa5, 0x4a,
	0x64, 0x44, 0xb8, 0x32, 0x2b, 0x79, 0x2c, 0xd5, 0xe3, 0xdf, 0x0a, 0xa8, 0xc5, 0xbb, 0x08, 0x5d,
	0x40, 0x35, 0x77, 0x81, 0xa9, 0x67, 0xef, 0xd7, 0xb8, 0xc0, 0x5a, 0xe2, 0x1e, 0x13, 0x2b, 0xd1,
	0x6b, 0x80, 0xf4, 0x09, 0x27, 0x34, 0xe6, 0x2c, 0xeb, 0x4e, 0x3d, 0xf5, 0xb8, 0x34, 0x36, 0xfe,
	0xac, 0x40, 0x55, 0xa0, 0x35, 0xa0, 0x76, 0x6d, 0x7d, 0xb0, 0xec, 0x9f, 0x2d, 0xed, 0x19, 0x33,
	0xdc, 0xeb, 0x76, 0xbb, 0xe3, 0xba, 0x5a, 0x05, 0xed, 0x40, 0xdd, 0xb2, 0xb1, 0xdb, 0x77, 0x7b,
	0x1d, 0x53, 0xdb, 0x40, 0x7b, 0xa0, 0xb5, 0x6d, 0xcb, 0xea, 0xb4, 0x7b, 0x5d, 0xdb, 0xc2, 0x1d,
	0xc7, 0xb1, 0x1d, 0xed, 0x39, 0x52, 0x60, 0xf3, 0xe2, 0xda, 0xed, 0x6b, 0x9b, 0x08, 0x81, 0xda,
	0xb6, 0x4d, 0xf3, 0xdc, 0xba, 0xc4, 0x97, 0x1d, 0xab, 0xdb, 0xb9, 0xd4, 0xb6, 0x58, 0xbd, 0x5e,
	0xd7, 0xec, 0xd8, 0xd7, 0x3d, 0xad, 0x8a, 0x76, 0xa1, 0xc9, 0xea, 0x75, 0x7a, 0x57, 0x76, 0xd7,
	0xea, 0xb1, 0x07, 0xad, 0x76, 0xf6, 0x4f, 0x0d, 0x9a, 0xb2, 0x15, 0x37, 0x88, 0xa7, 0xe1, 0x20,
	0x40, 0x57, 0xb0, 0xc5, 0x07, 0x09, 0x54, 0x7e, 0x39, 0xe4, 0x87, 0x0e, 0xdd, 0x58, 0x95, 0x22,
	0x4e, 0x9f, 0x67, 0xc8, 0x84, 0x4d, 0x36, 0x2c, 0xa0, 0xa3, 0x25, 0xd9, 0xd9, 0x58, 0xa1, 0x1f,
	0xaf, 0xc8, 0xc8, 0xca, 0xf5, 0x41, 0x91, 0xa3, 0x00, 0x2a, 0xbf, 0x46, 0x17, 0x86, 0x07, 0xfd,
	0xcb, 0x27, 0xb2, 0xb2, 0xd2, 0xb7, 0xd0, 0xc8, 0x5d, 0x6f, 0xe8, 0xab, 0x72, 0x3a, 0x8f, 0xc6,
	0x0a, 0xfd, 0xdd, 0xd3, 0x89, 0x19, 0xc6, 0x2c, 0x1d, 0x4c, 0x16, 0x0e, 0xb7, 0xd6, 0xd2, 0x0a,
	0xa5, 0x93, 0x85, 0x7e, 0xba, 0x76, 0x7e, 0x06, 0x3c, 0x86, 0xe6, 0xc2, 0xdd, 0x8d, 0x4e, 0x9e,
	0xe4, 0xfd, 0x69, 0x86, 0xd0, 0xbf, 0x59, 0x2f, 0x39, 0xc3, 0xfb, 0x08, 0x6a, 0xf1, 0xa2, 0x46,
	0xef, 0x97, 0x55, 0x78, 0x3c, 0x35, 0xe8, 0x27, 0x6b, 0xe5, 0x2e, 0x34, 0x97, 0x3f, 0xdb, 0x96,
	0x37, 0x57, 0x32, 0x21, 0x2c, 0x6f, 0xae, 0xf4, 0x4e, 0x97, 0xcd, 0xe5, 0xce, 0xad, 0xe5, 0xcd,
	0x3d, 0xbe, 0xfa, 0xf5, 0x93, 0xb5, 0x72, 0x25, 0xd8, 0xc5, 0x1b, 0x40, 0x21, 0x91, 0x4b, 0x64,
	0xfa, 0xc5, 0x8e, 0xfc, 0x72, 0xf9, 0x9f, 0x88, 0xdb, 0x2a, 0xff, 0xb3, 0xf0, 0xdd, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xd6, 0x19, 0x93, 0xa4, 0x5b, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OffboardServiceClient is the client API for OffboardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OffboardServiceClient interface {
	//
	// Start offboard control.
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error)
	//
	// Stop offboard control.
	//
	// The vehicle will be put into Hold mode: https://docs.px4.io/en/flight_modes/hold.html
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
	//
	// Check if offboard control is active.
	//
	// True means that the vehicle is in offboard mode and we are actively sending
	// setpoints.
	IsActive(ctx context.Context, in *IsActiveRequest, opts ...grpc.CallOption) (*IsActiveResponse, error)
	//
	// Set the attitude in terms of roll, pitch and yaw in degrees with thrust.
	SetAttitude(ctx context.Context, in *SetAttitudeRequest, opts ...grpc.CallOption) (*SetAttitudeResponse, error)
	//
	// Set direct actuator control values to groups #0 and #1.
	//
	// First 8 controls will go to control group 0, the following 8 controls to control group 1 (if
	// actuator_control.num_controls more than 8).
	SetActuatorControl(ctx context.Context, in *SetActuatorControlRequest, opts ...grpc.CallOption) (*SetActuatorControlResponse, error)
	//
	// Set the attitude rate in terms of pitch, roll and yaw angular rate along with thrust.
	SetAttitudeRate(ctx context.Context, in *SetAttitudeRateRequest, opts ...grpc.CallOption) (*SetAttitudeRateResponse, error)
	//
	// Set the position in NED coordinates and yaw.
	SetPositionNed(ctx context.Context, in *SetPositionNedRequest, opts ...grpc.CallOption) (*SetPositionNedResponse, error)
	//
	// Set the velocity in body coordinates and yaw angular rate.
	SetVelocityBody(ctx context.Context, in *SetVelocityBodyRequest, opts ...grpc.CallOption) (*SetVelocityBodyResponse, error)
	//
	// Set the velocity in NED coordinates and yaw.
	SetVelocityNed(ctx context.Context, in *SetVelocityNedRequest, opts ...grpc.CallOption) (*SetVelocityNedResponse, error)
}

type offboardServiceClient struct {
	cc *grpc.ClientConn
}

func NewOffboardServiceClient(cc *grpc.ClientConn) OffboardServiceClient {
	return &offboardServiceClient{cc}
}

func (c *offboardServiceClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error) {
	out := new(StartResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) IsActive(ctx context.Context, in *IsActiveRequest, opts ...grpc.CallOption) (*IsActiveResponse, error) {
	out := new(IsActiveResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/IsActive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) SetAttitude(ctx context.Context, in *SetAttitudeRequest, opts ...grpc.CallOption) (*SetAttitudeResponse, error) {
	out := new(SetAttitudeResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/SetAttitude", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) SetActuatorControl(ctx context.Context, in *SetActuatorControlRequest, opts ...grpc.CallOption) (*SetActuatorControlResponse, error) {
	out := new(SetActuatorControlResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/SetActuatorControl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) SetAttitudeRate(ctx context.Context, in *SetAttitudeRateRequest, opts ...grpc.CallOption) (*SetAttitudeRateResponse, error) {
	out := new(SetAttitudeRateResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/SetAttitudeRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) SetPositionNed(ctx context.Context, in *SetPositionNedRequest, opts ...grpc.CallOption) (*SetPositionNedResponse, error) {
	out := new(SetPositionNedResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/SetPositionNed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) SetVelocityBody(ctx context.Context, in *SetVelocityBodyRequest, opts ...grpc.CallOption) (*SetVelocityBodyResponse, error) {
	out := new(SetVelocityBodyResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/SetVelocityBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offboardServiceClient) SetVelocityNed(ctx context.Context, in *SetVelocityNedRequest, opts ...grpc.CallOption) (*SetVelocityNedResponse, error) {
	out := new(SetVelocityNedResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.offboard.OffboardService/SetVelocityNed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OffboardServiceServer is the server API for OffboardService service.
type OffboardServiceServer interface {
	//
	// Start offboard control.
	Start(context.Context, *StartRequest) (*StartResponse, error)
	//
	// Stop offboard control.
	//
	// The vehicle will be put into Hold mode: https://docs.px4.io/en/flight_modes/hold.html
	Stop(context.Context, *StopRequest) (*StopResponse, error)
	//
	// Check if offboard control is active.
	//
	// True means that the vehicle is in offboard mode and we are actively sending
	// setpoints.
	IsActive(context.Context, *IsActiveRequest) (*IsActiveResponse, error)
	//
	// Set the attitude in terms of roll, pitch and yaw in degrees with thrust.
	SetAttitude(context.Context, *SetAttitudeRequest) (*SetAttitudeResponse, error)
	//
	// Set direct actuator control values to groups #0 and #1.
	//
	// First 8 controls will go to control group 0, the following 8 controls to control group 1 (if
	// actuator_control.num_controls more than 8).
	SetActuatorControl(context.Context, *SetActuatorControlRequest) (*SetActuatorControlResponse, error)
	//
	// Set the attitude rate in terms of pitch, roll and yaw angular rate along with thrust.
	SetAttitudeRate(context.Context, *SetAttitudeRateRequest) (*SetAttitudeRateResponse, error)
	//
	// Set the position in NED coordinates and yaw.
	SetPositionNed(context.Context, *SetPositionNedRequest) (*SetPositionNedResponse, error)
	//
	// Set the velocity in body coordinates and yaw angular rate.
	SetVelocityBody(context.Context, *SetVelocityBodyRequest) (*SetVelocityBodyResponse, error)
	//
	// Set the velocity in NED coordinates and yaw.
	SetVelocityNed(context.Context, *SetVelocityNedRequest) (*SetVelocityNedResponse, error)
}

// UnimplementedOffboardServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOffboardServiceServer struct {
}

func (*UnimplementedOffboardServiceServer) Start(ctx context.Context, req *StartRequest) (*StartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedOffboardServiceServer) Stop(ctx context.Context, req *StopRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedOffboardServiceServer) IsActive(ctx context.Context, req *IsActiveRequest) (*IsActiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsActive not implemented")
}
func (*UnimplementedOffboardServiceServer) SetAttitude(ctx context.Context, req *SetAttitudeRequest) (*SetAttitudeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAttitude not implemented")
}
func (*UnimplementedOffboardServiceServer) SetActuatorControl(ctx context.Context, req *SetActuatorControlRequest) (*SetActuatorControlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetActuatorControl not implemented")
}
func (*UnimplementedOffboardServiceServer) SetAttitudeRate(ctx context.Context, req *SetAttitudeRateRequest) (*SetAttitudeRateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAttitudeRate not implemented")
}
func (*UnimplementedOffboardServiceServer) SetPositionNed(ctx context.Context, req *SetPositionNedRequest) (*SetPositionNedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPositionNed not implemented")
}
func (*UnimplementedOffboardServiceServer) SetVelocityBody(ctx context.Context, req *SetVelocityBodyRequest) (*SetVelocityBodyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVelocityBody not implemented")
}
func (*UnimplementedOffboardServiceServer) SetVelocityNed(ctx context.Context, req *SetVelocityNedRequest) (*SetVelocityNedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVelocityNed not implemented")
}

func RegisterOffboardServiceServer(s *grpc.Server, srv OffboardServiceServer) {
	s.RegisterService(&_OffboardService_serviceDesc, srv)
}

func _OffboardService_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_IsActive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsActiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).IsActive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/IsActive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).IsActive(ctx, req.(*IsActiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_SetAttitude_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAttitudeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).SetAttitude(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/SetAttitude",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).SetAttitude(ctx, req.(*SetAttitudeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_SetActuatorControl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetActuatorControlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).SetActuatorControl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/SetActuatorControl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).SetActuatorControl(ctx, req.(*SetActuatorControlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_SetAttitudeRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAttitudeRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).SetAttitudeRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/SetAttitudeRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).SetAttitudeRate(ctx, req.(*SetAttitudeRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_SetPositionNed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPositionNedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).SetPositionNed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/SetPositionNed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).SetPositionNed(ctx, req.(*SetPositionNedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_SetVelocityBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVelocityBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).SetVelocityBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/SetVelocityBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).SetVelocityBody(ctx, req.(*SetVelocityBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffboardService_SetVelocityNed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVelocityNedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffboardServiceServer).SetVelocityNed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.offboard.OffboardService/SetVelocityNed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffboardServiceServer).SetVelocityNed(ctx, req.(*SetVelocityNedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OffboardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mavsdk.rpc.offboard.OffboardService",
	HandlerType: (*OffboardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _OffboardService_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _OffboardService_Stop_Handler,
		},
		{
			MethodName: "IsActive",
			Handler:    _OffboardService_IsActive_Handler,
		},
		{
			MethodName: "SetAttitude",
			Handler:    _OffboardService_SetAttitude_Handler,
		},
		{
			MethodName: "SetActuatorControl",
			Handler:    _OffboardService_SetActuatorControl_Handler,
		},
		{
			MethodName: "SetAttitudeRate",
			Handler:    _OffboardService_SetAttitudeRate_Handler,
		},
		{
			MethodName: "SetPositionNed",
			Handler:    _OffboardService_SetPositionNed_Handler,
		},
		{
			MethodName: "SetVelocityBody",
			Handler:    _OffboardService_SetVelocityBody_Handler,
		},
		{
			MethodName: "SetVelocityNed",
			Handler:    _OffboardService_SetVelocityNed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MAVSDK-Proto/protos/offboard/offboard.proto",
}
