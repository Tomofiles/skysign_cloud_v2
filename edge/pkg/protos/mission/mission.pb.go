// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MAVSDK-Proto/protos/mission/mission.proto

package mavsdk_rpc_mission

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Possible camera actions at a mission item.
type MissionItem_CameraAction int32

const (
	MissionItem_NONE                 MissionItem_CameraAction = 0
	MissionItem_TAKE_PHOTO           MissionItem_CameraAction = 1
	MissionItem_START_PHOTO_INTERVAL MissionItem_CameraAction = 2
	MissionItem_STOP_PHOTO_INTERVAL  MissionItem_CameraAction = 3
	MissionItem_START_VIDEO          MissionItem_CameraAction = 4
	MissionItem_STOP_VIDEO           MissionItem_CameraAction = 5
)

var MissionItem_CameraAction_name = map[int32]string{
	0: "NONE",
	1: "TAKE_PHOTO",
	2: "START_PHOTO_INTERVAL",
	3: "STOP_PHOTO_INTERVAL",
	4: "START_VIDEO",
	5: "STOP_VIDEO",
}

var MissionItem_CameraAction_value = map[string]int32{
	"NONE":                 0,
	"TAKE_PHOTO":           1,
	"START_PHOTO_INTERVAL": 2,
	"STOP_PHOTO_INTERVAL":  3,
	"START_VIDEO":          4,
	"STOP_VIDEO":           5,
}

func (x MissionItem_CameraAction) String() string {
	return proto.EnumName(MissionItem_CameraAction_name, int32(x))
}

func (MissionItem_CameraAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{24, 0}
}

// Possible results returned for action requests.
type MissionResult_Result int32

const (
	MissionResult_UNKNOWN                  MissionResult_Result = 0
	MissionResult_SUCCESS                  MissionResult_Result = 1
	MissionResult_ERROR                    MissionResult_Result = 2
	MissionResult_TOO_MANY_MISSION_ITEMS   MissionResult_Result = 3
	MissionResult_BUSY                     MissionResult_Result = 4
	MissionResult_TIMEOUT                  MissionResult_Result = 5
	MissionResult_INVALID_ARGUMENT         MissionResult_Result = 6
	MissionResult_UNSUPPORTED              MissionResult_Result = 7
	MissionResult_NO_MISSION_AVAILABLE     MissionResult_Result = 8
	MissionResult_FAILED_TO_OPEN_QGC_PLAN  MissionResult_Result = 9
	MissionResult_FAILED_TO_PARSE_QGC_PLAN MissionResult_Result = 10
	MissionResult_UNSUPPORTED_MISSION_CMD  MissionResult_Result = 11
	MissionResult_TRANSFER_CANCELLED       MissionResult_Result = 12
)

var MissionResult_Result_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "SUCCESS",
	2:  "ERROR",
	3:  "TOO_MANY_MISSION_ITEMS",
	4:  "BUSY",
	5:  "TIMEOUT",
	6:  "INVALID_ARGUMENT",
	7:  "UNSUPPORTED",
	8:  "NO_MISSION_AVAILABLE",
	9:  "FAILED_TO_OPEN_QGC_PLAN",
	10: "FAILED_TO_PARSE_QGC_PLAN",
	11: "UNSUPPORTED_MISSION_CMD",
	12: "TRANSFER_CANCELLED",
}

var MissionResult_Result_value = map[string]int32{
	"UNKNOWN":                  0,
	"SUCCESS":                  1,
	"ERROR":                    2,
	"TOO_MANY_MISSION_ITEMS":   3,
	"BUSY":                     4,
	"TIMEOUT":                  5,
	"INVALID_ARGUMENT":         6,
	"UNSUPPORTED":              7,
	"NO_MISSION_AVAILABLE":     8,
	"FAILED_TO_OPEN_QGC_PLAN":  9,
	"FAILED_TO_PARSE_QGC_PLAN": 10,
	"UNSUPPORTED_MISSION_CMD":  11,
	"TRANSFER_CANCELLED":       12,
}

func (x MissionResult_Result) String() string {
	return proto.EnumName(MissionResult_Result_name, int32(x))
}

func (MissionResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{26, 0}
}

type UploadMissionRequest struct {
	MissionItems         []*MissionItem `protobuf:"bytes,1,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UploadMissionRequest) Reset()         { *m = UploadMissionRequest{} }
func (m *UploadMissionRequest) String() string { return proto.CompactTextString(m) }
func (*UploadMissionRequest) ProtoMessage()    {}
func (*UploadMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{0}
}

func (m *UploadMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadMissionRequest.Unmarshal(m, b)
}
func (m *UploadMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadMissionRequest.Marshal(b, m, deterministic)
}
func (m *UploadMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadMissionRequest.Merge(m, src)
}
func (m *UploadMissionRequest) XXX_Size() int {
	return xxx_messageInfo_UploadMissionRequest.Size(m)
}
func (m *UploadMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadMissionRequest proto.InternalMessageInfo

func (m *UploadMissionRequest) GetMissionItems() []*MissionItem {
	if m != nil {
		return m.MissionItems
	}
	return nil
}

type UploadMissionResponse struct {
	MissionResult        *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UploadMissionResponse) Reset()         { *m = UploadMissionResponse{} }
func (m *UploadMissionResponse) String() string { return proto.CompactTextString(m) }
func (*UploadMissionResponse) ProtoMessage()    {}
func (*UploadMissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{1}
}

func (m *UploadMissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadMissionResponse.Unmarshal(m, b)
}
func (m *UploadMissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadMissionResponse.Marshal(b, m, deterministic)
}
func (m *UploadMissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadMissionResponse.Merge(m, src)
}
func (m *UploadMissionResponse) XXX_Size() int {
	return xxx_messageInfo_UploadMissionResponse.Size(m)
}
func (m *UploadMissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadMissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadMissionResponse proto.InternalMessageInfo

func (m *UploadMissionResponse) GetMissionResult() *MissionResult {
	if m != nil {
		return m.MissionResult
	}
	return nil
}

type CancelMissionUploadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelMissionUploadRequest) Reset()         { *m = CancelMissionUploadRequest{} }
func (m *CancelMissionUploadRequest) String() string { return proto.CompactTextString(m) }
func (*CancelMissionUploadRequest) ProtoMessage()    {}
func (*CancelMissionUploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{2}
}

func (m *CancelMissionUploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelMissionUploadRequest.Unmarshal(m, b)
}
func (m *CancelMissionUploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelMissionUploadRequest.Marshal(b, m, deterministic)
}
func (m *CancelMissionUploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelMissionUploadRequest.Merge(m, src)
}
func (m *CancelMissionUploadRequest) XXX_Size() int {
	return xxx_messageInfo_CancelMissionUploadRequest.Size(m)
}
func (m *CancelMissionUploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelMissionUploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelMissionUploadRequest proto.InternalMessageInfo

type CancelMissionUploadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelMissionUploadResponse) Reset()         { *m = CancelMissionUploadResponse{} }
func (m *CancelMissionUploadResponse) String() string { return proto.CompactTextString(m) }
func (*CancelMissionUploadResponse) ProtoMessage()    {}
func (*CancelMissionUploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{3}
}

func (m *CancelMissionUploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelMissionUploadResponse.Unmarshal(m, b)
}
func (m *CancelMissionUploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelMissionUploadResponse.Marshal(b, m, deterministic)
}
func (m *CancelMissionUploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelMissionUploadResponse.Merge(m, src)
}
func (m *CancelMissionUploadResponse) XXX_Size() int {
	return xxx_messageInfo_CancelMissionUploadResponse.Size(m)
}
func (m *CancelMissionUploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelMissionUploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelMissionUploadResponse proto.InternalMessageInfo

type DownloadMissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadMissionRequest) Reset()         { *m = DownloadMissionRequest{} }
func (m *DownloadMissionRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadMissionRequest) ProtoMessage()    {}
func (*DownloadMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{4}
}

func (m *DownloadMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadMissionRequest.Unmarshal(m, b)
}
func (m *DownloadMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadMissionRequest.Marshal(b, m, deterministic)
}
func (m *DownloadMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadMissionRequest.Merge(m, src)
}
func (m *DownloadMissionRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadMissionRequest.Size(m)
}
func (m *DownloadMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadMissionRequest proto.InternalMessageInfo

type DownloadMissionResponse struct {
	MissionResult        *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	MissionItems         []*MissionItem `protobuf:"bytes,2,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DownloadMissionResponse) Reset()         { *m = DownloadMissionResponse{} }
func (m *DownloadMissionResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadMissionResponse) ProtoMessage()    {}
func (*DownloadMissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{5}
}

func (m *DownloadMissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadMissionResponse.Unmarshal(m, b)
}
func (m *DownloadMissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadMissionResponse.Marshal(b, m, deterministic)
}
func (m *DownloadMissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadMissionResponse.Merge(m, src)
}
func (m *DownloadMissionResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadMissionResponse.Size(m)
}
func (m *DownloadMissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadMissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadMissionResponse proto.InternalMessageInfo

func (m *DownloadMissionResponse) GetMissionResult() *MissionResult {
	if m != nil {
		return m.MissionResult
	}
	return nil
}

func (m *DownloadMissionResponse) GetMissionItems() []*MissionItem {
	if m != nil {
		return m.MissionItems
	}
	return nil
}

type CancelMissionDownloadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelMissionDownloadRequest) Reset()         { *m = CancelMissionDownloadRequest{} }
func (m *CancelMissionDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*CancelMissionDownloadRequest) ProtoMessage()    {}
func (*CancelMissionDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{6}
}

func (m *CancelMissionDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelMissionDownloadRequest.Unmarshal(m, b)
}
func (m *CancelMissionDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelMissionDownloadRequest.Marshal(b, m, deterministic)
}
func (m *CancelMissionDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelMissionDownloadRequest.Merge(m, src)
}
func (m *CancelMissionDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_CancelMissionDownloadRequest.Size(m)
}
func (m *CancelMissionDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelMissionDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelMissionDownloadRequest proto.InternalMessageInfo

type CancelMissionDownloadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelMissionDownloadResponse) Reset()         { *m = CancelMissionDownloadResponse{} }
func (m *CancelMissionDownloadResponse) String() string { return proto.CompactTextString(m) }
func (*CancelMissionDownloadResponse) ProtoMessage()    {}
func (*CancelMissionDownloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{7}
}

func (m *CancelMissionDownloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelMissionDownloadResponse.Unmarshal(m, b)
}
func (m *CancelMissionDownloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelMissionDownloadResponse.Marshal(b, m, deterministic)
}
func (m *CancelMissionDownloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelMissionDownloadResponse.Merge(m, src)
}
func (m *CancelMissionDownloadResponse) XXX_Size() int {
	return xxx_messageInfo_CancelMissionDownloadResponse.Size(m)
}
func (m *CancelMissionDownloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelMissionDownloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelMissionDownloadResponse proto.InternalMessageInfo

type StartMissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartMissionRequest) Reset()         { *m = StartMissionRequest{} }
func (m *StartMissionRequest) String() string { return proto.CompactTextString(m) }
func (*StartMissionRequest) ProtoMessage()    {}
func (*StartMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{8}
}

func (m *StartMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartMissionRequest.Unmarshal(m, b)
}
func (m *StartMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartMissionRequest.Marshal(b, m, deterministic)
}
func (m *StartMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartMissionRequest.Merge(m, src)
}
func (m *StartMissionRequest) XXX_Size() int {
	return xxx_messageInfo_StartMissionRequest.Size(m)
}
func (m *StartMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartMissionRequest proto.InternalMessageInfo

type StartMissionResponse struct {
	MissionResult        *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StartMissionResponse) Reset()         { *m = StartMissionResponse{} }
func (m *StartMissionResponse) String() string { return proto.CompactTextString(m) }
func (*StartMissionResponse) ProtoMessage()    {}
func (*StartMissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{9}
}

func (m *StartMissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartMissionResponse.Unmarshal(m, b)
}
func (m *StartMissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartMissionResponse.Marshal(b, m, deterministic)
}
func (m *StartMissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartMissionResponse.Merge(m, src)
}
func (m *StartMissionResponse) XXX_Size() int {
	return xxx_messageInfo_StartMissionResponse.Size(m)
}
func (m *StartMissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartMissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartMissionResponse proto.InternalMessageInfo

func (m *StartMissionResponse) GetMissionResult() *MissionResult {
	if m != nil {
		return m.MissionResult
	}
	return nil
}

type PauseMissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseMissionRequest) Reset()         { *m = PauseMissionRequest{} }
func (m *PauseMissionRequest) String() string { return proto.CompactTextString(m) }
func (*PauseMissionRequest) ProtoMessage()    {}
func (*PauseMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{10}
}

func (m *PauseMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseMissionRequest.Unmarshal(m, b)
}
func (m *PauseMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseMissionRequest.Marshal(b, m, deterministic)
}
func (m *PauseMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseMissionRequest.Merge(m, src)
}
func (m *PauseMissionRequest) XXX_Size() int {
	return xxx_messageInfo_PauseMissionRequest.Size(m)
}
func (m *PauseMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseMissionRequest proto.InternalMessageInfo

type PauseMissionResponse struct {
	MissionResult        *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PauseMissionResponse) Reset()         { *m = PauseMissionResponse{} }
func (m *PauseMissionResponse) String() string { return proto.CompactTextString(m) }
func (*PauseMissionResponse) ProtoMessage()    {}
func (*PauseMissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{11}
}

func (m *PauseMissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseMissionResponse.Unmarshal(m, b)
}
func (m *PauseMissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseMissionResponse.Marshal(b, m, deterministic)
}
func (m *PauseMissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseMissionResponse.Merge(m, src)
}
func (m *PauseMissionResponse) XXX_Size() int {
	return xxx_messageInfo_PauseMissionResponse.Size(m)
}
func (m *PauseMissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseMissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseMissionResponse proto.InternalMessageInfo

func (m *PauseMissionResponse) GetMissionResult() *MissionResult {
	if m != nil {
		return m.MissionResult
	}
	return nil
}

type ClearMissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearMissionRequest) Reset()         { *m = ClearMissionRequest{} }
func (m *ClearMissionRequest) String() string { return proto.CompactTextString(m) }
func (*ClearMissionRequest) ProtoMessage()    {}
func (*ClearMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{12}
}

func (m *ClearMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearMissionRequest.Unmarshal(m, b)
}
func (m *ClearMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearMissionRequest.Marshal(b, m, deterministic)
}
func (m *ClearMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearMissionRequest.Merge(m, src)
}
func (m *ClearMissionRequest) XXX_Size() int {
	return xxx_messageInfo_ClearMissionRequest.Size(m)
}
func (m *ClearMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearMissionRequest proto.InternalMessageInfo

type ClearMissionResponse struct {
	MissionResult        *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClearMissionResponse) Reset()         { *m = ClearMissionResponse{} }
func (m *ClearMissionResponse) String() string { return proto.CompactTextString(m) }
func (*ClearMissionResponse) ProtoMessage()    {}
func (*ClearMissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{13}
}

func (m *ClearMissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearMissionResponse.Unmarshal(m, b)
}
func (m *ClearMissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearMissionResponse.Marshal(b, m, deterministic)
}
func (m *ClearMissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearMissionResponse.Merge(m, src)
}
func (m *ClearMissionResponse) XXX_Size() int {
	return xxx_messageInfo_ClearMissionResponse.Size(m)
}
func (m *ClearMissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearMissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearMissionResponse proto.InternalMessageInfo

func (m *ClearMissionResponse) GetMissionResult() *MissionResult {
	if m != nil {
		return m.MissionResult
	}
	return nil
}

type SetCurrentMissionItemIndexRequest struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetCurrentMissionItemIndexRequest) Reset()         { *m = SetCurrentMissionItemIndexRequest{} }
func (m *SetCurrentMissionItemIndexRequest) String() string { return proto.CompactTextString(m) }
func (*SetCurrentMissionItemIndexRequest) ProtoMessage()    {}
func (*SetCurrentMissionItemIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{14}
}

func (m *SetCurrentMissionItemIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetCurrentMissionItemIndexRequest.Unmarshal(m, b)
}
func (m *SetCurrentMissionItemIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetCurrentMissionItemIndexRequest.Marshal(b, m, deterministic)
}
func (m *SetCurrentMissionItemIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetCurrentMissionItemIndexRequest.Merge(m, src)
}
func (m *SetCurrentMissionItemIndexRequest) XXX_Size() int {
	return xxx_messageInfo_SetCurrentMissionItemIndexRequest.Size(m)
}
func (m *SetCurrentMissionItemIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetCurrentMissionItemIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetCurrentMissionItemIndexRequest proto.InternalMessageInfo

func (m *SetCurrentMissionItemIndexRequest) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type SetCurrentMissionItemIndexResponse struct {
	MissionResult        *MissionResult `protobuf:"bytes,1,opt,name=mission_result,json=missionResult,proto3" json:"mission_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetCurrentMissionItemIndexResponse) Reset()         { *m = SetCurrentMissionItemIndexResponse{} }
func (m *SetCurrentMissionItemIndexResponse) String() string { return proto.CompactTextString(m) }
func (*SetCurrentMissionItemIndexResponse) ProtoMessage()    {}
func (*SetCurrentMissionItemIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{15}
}

func (m *SetCurrentMissionItemIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetCurrentMissionItemIndexResponse.Unmarshal(m, b)
}
func (m *SetCurrentMissionItemIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetCurrentMissionItemIndexResponse.Marshal(b, m, deterministic)
}
func (m *SetCurrentMissionItemIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetCurrentMissionItemIndexResponse.Merge(m, src)
}
func (m *SetCurrentMissionItemIndexResponse) XXX_Size() int {
	return xxx_messageInfo_SetCurrentMissionItemIndexResponse.Size(m)
}
func (m *SetCurrentMissionItemIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetCurrentMissionItemIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetCurrentMissionItemIndexResponse proto.InternalMessageInfo

func (m *SetCurrentMissionItemIndexResponse) GetMissionResult() *MissionResult {
	if m != nil {
		return m.MissionResult
	}
	return nil
}

type IsMissionFinishedRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsMissionFinishedRequest) Reset()         { *m = IsMissionFinishedRequest{} }
func (m *IsMissionFinishedRequest) String() string { return proto.CompactTextString(m) }
func (*IsMissionFinishedRequest) ProtoMessage()    {}
func (*IsMissionFinishedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{16}
}

func (m *IsMissionFinishedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsMissionFinishedRequest.Unmarshal(m, b)
}
func (m *IsMissionFinishedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsMissionFinishedRequest.Marshal(b, m, deterministic)
}
func (m *IsMissionFinishedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsMissionFinishedRequest.Merge(m, src)
}
func (m *IsMissionFinishedRequest) XXX_Size() int {
	return xxx_messageInfo_IsMissionFinishedRequest.Size(m)
}
func (m *IsMissionFinishedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsMissionFinishedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsMissionFinishedRequest proto.InternalMessageInfo

type IsMissionFinishedResponse struct {
	IsFinished           bool     `protobuf:"varint,1,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsMissionFinishedResponse) Reset()         { *m = IsMissionFinishedResponse{} }
func (m *IsMissionFinishedResponse) String() string { return proto.CompactTextString(m) }
func (*IsMissionFinishedResponse) ProtoMessage()    {}
func (*IsMissionFinishedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{17}
}

func (m *IsMissionFinishedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsMissionFinishedResponse.Unmarshal(m, b)
}
func (m *IsMissionFinishedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsMissionFinishedResponse.Marshal(b, m, deterministic)
}
func (m *IsMissionFinishedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsMissionFinishedResponse.Merge(m, src)
}
func (m *IsMissionFinishedResponse) XXX_Size() int {
	return xxx_messageInfo_IsMissionFinishedResponse.Size(m)
}
func (m *IsMissionFinishedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsMissionFinishedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsMissionFinishedResponse proto.InternalMessageInfo

func (m *IsMissionFinishedResponse) GetIsFinished() bool {
	if m != nil {
		return m.IsFinished
	}
	return false
}

type SubscribeMissionProgressRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeMissionProgressRequest) Reset()         { *m = SubscribeMissionProgressRequest{} }
func (m *SubscribeMissionProgressRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeMissionProgressRequest) ProtoMessage()    {}
func (*SubscribeMissionProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{18}
}

func (m *SubscribeMissionProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeMissionProgressRequest.Unmarshal(m, b)
}
func (m *SubscribeMissionProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeMissionProgressRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeMissionProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeMissionProgressRequest.Merge(m, src)
}
func (m *SubscribeMissionProgressRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeMissionProgressRequest.Size(m)
}
func (m *SubscribeMissionProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeMissionProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeMissionProgressRequest proto.InternalMessageInfo

type MissionProgressResponse struct {
	MissionProgress      *MissionProgress `protobuf:"bytes,1,opt,name=mission_progress,json=missionProgress,proto3" json:"mission_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MissionProgressResponse) Reset()         { *m = MissionProgressResponse{} }
func (m *MissionProgressResponse) String() string { return proto.CompactTextString(m) }
func (*MissionProgressResponse) ProtoMessage()    {}
func (*MissionProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{19}
}

func (m *MissionProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissionProgressResponse.Unmarshal(m, b)
}
func (m *MissionProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissionProgressResponse.Marshal(b, m, deterministic)
}
func (m *MissionProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissionProgressResponse.Merge(m, src)
}
func (m *MissionProgressResponse) XXX_Size() int {
	return xxx_messageInfo_MissionProgressResponse.Size(m)
}
func (m *MissionProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MissionProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MissionProgressResponse proto.InternalMessageInfo

func (m *MissionProgressResponse) GetMissionProgress() *MissionProgress {
	if m != nil {
		return m.MissionProgress
	}
	return nil
}

type GetReturnToLaunchAfterMissionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReturnToLaunchAfterMissionRequest) Reset()         { *m = GetReturnToLaunchAfterMissionRequest{} }
func (m *GetReturnToLaunchAfterMissionRequest) String() string { return proto.CompactTextString(m) }
func (*GetReturnToLaunchAfterMissionRequest) ProtoMessage()    {}
func (*GetReturnToLaunchAfterMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{20}
}

func (m *GetReturnToLaunchAfterMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReturnToLaunchAfterMissionRequest.Unmarshal(m, b)
}
func (m *GetReturnToLaunchAfterMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReturnToLaunchAfterMissionRequest.Marshal(b, m, deterministic)
}
func (m *GetReturnToLaunchAfterMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReturnToLaunchAfterMissionRequest.Merge(m, src)
}
func (m *GetReturnToLaunchAfterMissionRequest) XXX_Size() int {
	return xxx_messageInfo_GetReturnToLaunchAfterMissionRequest.Size(m)
}
func (m *GetReturnToLaunchAfterMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReturnToLaunchAfterMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReturnToLaunchAfterMissionRequest proto.InternalMessageInfo

type GetReturnToLaunchAfterMissionResponse struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReturnToLaunchAfterMissionResponse) Reset()         { *m = GetReturnToLaunchAfterMissionResponse{} }
func (m *GetReturnToLaunchAfterMissionResponse) String() string { return proto.CompactTextString(m) }
func (*GetReturnToLaunchAfterMissionResponse) ProtoMessage()    {}
func (*GetReturnToLaunchAfterMissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{21}
}

func (m *GetReturnToLaunchAfterMissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReturnToLaunchAfterMissionResponse.Unmarshal(m, b)
}
func (m *GetReturnToLaunchAfterMissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReturnToLaunchAfterMissionResponse.Marshal(b, m, deterministic)
}
func (m *GetReturnToLaunchAfterMissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReturnToLaunchAfterMissionResponse.Merge(m, src)
}
func (m *GetReturnToLaunchAfterMissionResponse) XXX_Size() int {
	return xxx_messageInfo_GetReturnToLaunchAfterMissionResponse.Size(m)
}
func (m *GetReturnToLaunchAfterMissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReturnToLaunchAfterMissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReturnToLaunchAfterMissionResponse proto.InternalMessageInfo

func (m *GetReturnToLaunchAfterMissionResponse) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type SetReturnToLaunchAfterMissionRequest struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReturnToLaunchAfterMissionRequest) Reset()         { *m = SetReturnToLaunchAfterMissionRequest{} }
func (m *SetReturnToLaunchAfterMissionRequest) String() string { return proto.CompactTextString(m) }
func (*SetReturnToLaunchAfterMissionRequest) ProtoMessage()    {}
func (*SetReturnToLaunchAfterMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{22}
}

func (m *SetReturnToLaunchAfterMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReturnToLaunchAfterMissionRequest.Unmarshal(m, b)
}
func (m *SetReturnToLaunchAfterMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReturnToLaunchAfterMissionRequest.Marshal(b, m, deterministic)
}
func (m *SetReturnToLaunchAfterMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReturnToLaunchAfterMissionRequest.Merge(m, src)
}
func (m *SetReturnToLaunchAfterMissionRequest) XXX_Size() int {
	return xxx_messageInfo_SetReturnToLaunchAfterMissionRequest.Size(m)
}
func (m *SetReturnToLaunchAfterMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReturnToLaunchAfterMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetReturnToLaunchAfterMissionRequest proto.InternalMessageInfo

func (m *SetReturnToLaunchAfterMissionRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type SetReturnToLaunchAfterMissionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReturnToLaunchAfterMissionResponse) Reset()         { *m = SetReturnToLaunchAfterMissionResponse{} }
func (m *SetReturnToLaunchAfterMissionResponse) String() string { return proto.CompactTextString(m) }
func (*SetReturnToLaunchAfterMissionResponse) ProtoMessage()    {}
func (*SetReturnToLaunchAfterMissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{23}
}

func (m *SetReturnToLaunchAfterMissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReturnToLaunchAfterMissionResponse.Unmarshal(m, b)
}
func (m *SetReturnToLaunchAfterMissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReturnToLaunchAfterMissionResponse.Marshal(b, m, deterministic)
}
func (m *SetReturnToLaunchAfterMissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReturnToLaunchAfterMissionResponse.Merge(m, src)
}
func (m *SetReturnToLaunchAfterMissionResponse) XXX_Size() int {
	return xxx_messageInfo_SetReturnToLaunchAfterMissionResponse.Size(m)
}
func (m *SetReturnToLaunchAfterMissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReturnToLaunchAfterMissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetReturnToLaunchAfterMissionResponse proto.InternalMessageInfo

//
// Type representing a mission item.
//
// A MissionItem can contain a position and/or actions.
// Mission items are building blocks to assemble a mission,
// which can be sent to (or received from) a system.
// They cannot be used independently.
type MissionItem struct {
	LatitudeDeg          float64                  `protobuf:"fixed64,1,opt,name=latitude_deg,json=latitudeDeg,proto3" json:"latitude_deg,omitempty"`
	LongitudeDeg         float64                  `protobuf:"fixed64,2,opt,name=longitude_deg,json=longitudeDeg,proto3" json:"longitude_deg,omitempty"`
	RelativeAltitudeM    float32                  `protobuf:"fixed32,3,opt,name=relative_altitude_m,json=relativeAltitudeM,proto3" json:"relative_altitude_m,omitempty"`
	SpeedMS              float32                  `protobuf:"fixed32,4,opt,name=speed_m_s,json=speedMS,proto3" json:"speed_m_s,omitempty"`
	IsFlyThrough         bool                     `protobuf:"varint,5,opt,name=is_fly_through,json=isFlyThrough,proto3" json:"is_fly_through,omitempty"`
	GimbalPitchDeg       float32                  `protobuf:"fixed32,6,opt,name=gimbal_pitch_deg,json=gimbalPitchDeg,proto3" json:"gimbal_pitch_deg,omitempty"`
	GimbalYawDeg         float32                  `protobuf:"fixed32,7,opt,name=gimbal_yaw_deg,json=gimbalYawDeg,proto3" json:"gimbal_yaw_deg,omitempty"`
	CameraAction         MissionItem_CameraAction `protobuf:"varint,8,opt,name=camera_action,json=cameraAction,proto3,enum=mavsdk.rpc.mission.MissionItem_CameraAction" json:"camera_action,omitempty"`
	LoiterTimeS          float32                  `protobuf:"fixed32,9,opt,name=loiter_time_s,json=loiterTimeS,proto3" json:"loiter_time_s,omitempty"`
	CameraPhotoIntervalS float64                  `protobuf:"fixed64,10,opt,name=camera_photo_interval_s,json=cameraPhotoIntervalS,proto3" json:"camera_photo_interval_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MissionItem) Reset()         { *m = MissionItem{} }
func (m *MissionItem) String() string { return proto.CompactTextString(m) }
func (*MissionItem) ProtoMessage()    {}
func (*MissionItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{24}
}

func (m *MissionItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissionItem.Unmarshal(m, b)
}
func (m *MissionItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissionItem.Marshal(b, m, deterministic)
}
func (m *MissionItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissionItem.Merge(m, src)
}
func (m *MissionItem) XXX_Size() int {
	return xxx_messageInfo_MissionItem.Size(m)
}
func (m *MissionItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MissionItem.DiscardUnknown(m)
}

var xxx_messageInfo_MissionItem proto.InternalMessageInfo

func (m *MissionItem) GetLatitudeDeg() float64 {
	if m != nil {
		return m.LatitudeDeg
	}
	return 0
}

func (m *MissionItem) GetLongitudeDeg() float64 {
	if m != nil {
		return m.LongitudeDeg
	}
	return 0
}

func (m *MissionItem) GetRelativeAltitudeM() float32 {
	if m != nil {
		return m.RelativeAltitudeM
	}
	return 0
}

func (m *MissionItem) GetSpeedMS() float32 {
	if m != nil {
		return m.SpeedMS
	}
	return 0
}

func (m *MissionItem) GetIsFlyThrough() bool {
	if m != nil {
		return m.IsFlyThrough
	}
	return false
}

func (m *MissionItem) GetGimbalPitchDeg() float32 {
	if m != nil {
		return m.GimbalPitchDeg
	}
	return 0
}

func (m *MissionItem) GetGimbalYawDeg() float32 {
	if m != nil {
		return m.GimbalYawDeg
	}
	return 0
}

func (m *MissionItem) GetCameraAction() MissionItem_CameraAction {
	if m != nil {
		return m.CameraAction
	}
	return MissionItem_NONE
}

func (m *MissionItem) GetLoiterTimeS() float32 {
	if m != nil {
		return m.LoiterTimeS
	}
	return 0
}

func (m *MissionItem) GetCameraPhotoIntervalS() float64 {
	if m != nil {
		return m.CameraPhotoIntervalS
	}
	return 0
}

// Mission progress type.
type MissionProgress struct {
	CurrentItemIndex     int32    `protobuf:"varint,1,opt,name=current_item_index,json=currentItemIndex,proto3" json:"current_item_index,omitempty"`
	MissionCount         int32    `protobuf:"varint,2,opt,name=mission_count,json=missionCount,proto3" json:"mission_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MissionProgress) Reset()         { *m = MissionProgress{} }
func (m *MissionProgress) String() string { return proto.CompactTextString(m) }
func (*MissionProgress) ProtoMessage()    {}
func (*MissionProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{25}
}

func (m *MissionProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissionProgress.Unmarshal(m, b)
}
func (m *MissionProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissionProgress.Marshal(b, m, deterministic)
}
func (m *MissionProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissionProgress.Merge(m, src)
}
func (m *MissionProgress) XXX_Size() int {
	return xxx_messageInfo_MissionProgress.Size(m)
}
func (m *MissionProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_MissionProgress.DiscardUnknown(m)
}

var xxx_messageInfo_MissionProgress proto.InternalMessageInfo

func (m *MissionProgress) GetCurrentItemIndex() int32 {
	if m != nil {
		return m.CurrentItemIndex
	}
	return 0
}

func (m *MissionProgress) GetMissionCount() int32 {
	if m != nil {
		return m.MissionCount
	}
	return 0
}

// Result type.
type MissionResult struct {
	Result               MissionResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mavsdk.rpc.mission.MissionResult_Result" json:"result,omitempty"`
	ResultStr            string               `protobuf:"bytes,2,opt,name=result_str,json=resultStr,proto3" json:"result_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MissionResult) Reset()         { *m = MissionResult{} }
func (m *MissionResult) String() string { return proto.CompactTextString(m) }
func (*MissionResult) ProtoMessage()    {}
func (*MissionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2bcf7c051ec322, []int{26}
}

func (m *MissionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissionResult.Unmarshal(m, b)
}
func (m *MissionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissionResult.Marshal(b, m, deterministic)
}
func (m *MissionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissionResult.Merge(m, src)
}
func (m *MissionResult) XXX_Size() int {
	return xxx_messageInfo_MissionResult.Size(m)
}
func (m *MissionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MissionResult.DiscardUnknown(m)
}

var xxx_messageInfo_MissionResult proto.InternalMessageInfo

func (m *MissionResult) GetResult() MissionResult_Result {
	if m != nil {
		return m.Result
	}
	return MissionResult_UNKNOWN
}

func (m *MissionResult) GetResultStr() string {
	if m != nil {
		return m.ResultStr
	}
	return ""
}

func init() {
	proto.RegisterEnum("mavsdk.rpc.mission.MissionItem_CameraAction", MissionItem_CameraAction_name, MissionItem_CameraAction_value)
	proto.RegisterEnum("mavsdk.rpc.mission.MissionResult_Result", MissionResult_Result_name, MissionResult_Result_value)
	proto.RegisterType((*UploadMissionRequest)(nil), "mavsdk.rpc.mission.UploadMissionRequest")
	proto.RegisterType((*UploadMissionResponse)(nil), "mavsdk.rpc.mission.UploadMissionResponse")
	proto.RegisterType((*CancelMissionUploadRequest)(nil), "mavsdk.rpc.mission.CancelMissionUploadRequest")
	proto.RegisterType((*CancelMissionUploadResponse)(nil), "mavsdk.rpc.mission.CancelMissionUploadResponse")
	proto.RegisterType((*DownloadMissionRequest)(nil), "mavsdk.rpc.mission.DownloadMissionRequest")
	proto.RegisterType((*DownloadMissionResponse)(nil), "mavsdk.rpc.mission.DownloadMissionResponse")
	proto.RegisterType((*CancelMissionDownloadRequest)(nil), "mavsdk.rpc.mission.CancelMissionDownloadRequest")
	proto.RegisterType((*CancelMissionDownloadResponse)(nil), "mavsdk.rpc.mission.CancelMissionDownloadResponse")
	proto.RegisterType((*StartMissionRequest)(nil), "mavsdk.rpc.mission.StartMissionRequest")
	proto.RegisterType((*StartMissionResponse)(nil), "mavsdk.rpc.mission.StartMissionResponse")
	proto.RegisterType((*PauseMissionRequest)(nil), "mavsdk.rpc.mission.PauseMissionRequest")
	proto.RegisterType((*PauseMissionResponse)(nil), "mavsdk.rpc.mission.PauseMissionResponse")
	proto.RegisterType((*ClearMissionRequest)(nil), "mavsdk.rpc.mission.ClearMissionRequest")
	proto.RegisterType((*ClearMissionResponse)(nil), "mavsdk.rpc.mission.ClearMissionResponse")
	proto.RegisterType((*SetCurrentMissionItemIndexRequest)(nil), "mavsdk.rpc.mission.SetCurrentMissionItemIndexRequest")
	proto.RegisterType((*SetCurrentMissionItemIndexResponse)(nil), "mavsdk.rpc.mission.SetCurrentMissionItemIndexResponse")
	proto.RegisterType((*IsMissionFinishedRequest)(nil), "mavsdk.rpc.mission.IsMissionFinishedRequest")
	proto.RegisterType((*IsMissionFinishedResponse)(nil), "mavsdk.rpc.mission.IsMissionFinishedResponse")
	proto.RegisterType((*SubscribeMissionProgressRequest)(nil), "mavsdk.rpc.mission.SubscribeMissionProgressRequest")
	proto.RegisterType((*MissionProgressResponse)(nil), "mavsdk.rpc.mission.MissionProgressResponse")
	proto.RegisterType((*GetReturnToLaunchAfterMissionRequest)(nil), "mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest")
	proto.RegisterType((*GetReturnToLaunchAfterMissionResponse)(nil), "mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse")
	proto.RegisterType((*SetReturnToLaunchAfterMissionRequest)(nil), "mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest")
	proto.RegisterType((*SetReturnToLaunchAfterMissionResponse)(nil), "mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse")
	proto.RegisterType((*MissionItem)(nil), "mavsdk.rpc.mission.MissionItem")
	proto.RegisterType((*MissionProgress)(nil), "mavsdk.rpc.mission.MissionProgress")
	proto.RegisterType((*MissionResult)(nil), "mavsdk.rpc.mission.MissionResult")
}

func init() {
	proto.RegisterFile("MAVSDK-Proto/protos/mission/mission.proto", fileDescriptor_0c2bcf7c051ec322)
}

var fileDescriptor_0c2bcf7c051ec322 = []byte{
	// 1305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0xb6, 0x6c, 0xcb, 0x87, 0x91, 0x2c, 0x33, 0xeb, 0x13, 0x7f, 0x26, 0xfe, 0x6d, 0x33, 0x4e,
	0xa3, 0xb4, 0x89, 0x92, 0x3a, 0x48, 0xd1, 0x00, 0x45, 0x5b, 0x5a, 0xa2, 0x13, 0x22, 0x12, 0xa9,
	0x90, 0x94, 0x8b, 0x00, 0x05, 0xb6, 0xb4, 0xb4, 0xb1, 0x89, 0x52, 0xa4, 0x4a, 0xae, 0x9c, 0x04,
	0x28, 0x8a, 0x5e, 0xf4, 0xb6, 0x17, 0xbd, 0xe9, 0x3b, 0xf4, 0x39, 0x7a, 0xd3, 0xc7, 0x2a, 0x48,
	0x2e, 0x69, 0x1d, 0x28, 0x5b, 0x31, 0xdc, 0x1b, 0xdb, 0x3b, 0xf3, 0xcd, 0x7c, 0x33, 0xb3, 0x07,
	0x7e, 0x30, 0x3c, 0x68, 0x48, 0xc7, 0x46, 0xed, 0xd5, 0xa3, 0xa6, 0xef, 0x51, 0xef, 0x71, 0x2f,
	0xfc, 0x19, 0x3c, 0xee, 0xda, 0x41, 0x60, 0x7b, 0x6e, 0xf2, 0xbb, 0x12, 0x99, 0x11, 0xea, 0x5a,
	0xe7, 0x41, 0xe7, 0xc7, 0x8a, 0xdf, 0x6b, 0x57, 0x98, 0x47, 0xfc, 0x1e, 0xd6, 0x5b, 0x3d, 0xc7,
	0xb3, 0x3a, 0x8d, 0xd8, 0xa0, 0x93, 0x9f, 0xfa, 0x24, 0xa0, 0xa8, 0x06, 0x2b, 0x0c, 0x82, 0x6d,
	0x4a, 0xba, 0x01, 0x9f, 0xdb, 0x9d, 0x2b, 0x17, 0x0e, 0x76, 0x2a, 0xe3, 0x39, 0x2a, 0x2c, 0x54,
	0xa1, 0xa4, 0xab, 0x17, 0xbb, 0x17, 0x8b, 0x40, 0xb4, 0x60, 0x63, 0x24, 0x7b, 0xd0, 0xf3, 0xdc,
	0x80, 0xa0, 0x97, 0x50, 0x4a, 0xd2, 0xfb, 0x24, 0xe8, 0x3b, 0x94, 0xcf, 0xed, 0xe6, 0xca, 0x85,
	0x83, 0xbd, 0x4b, 0xf2, 0xeb, 0x11, 0x50, 0x4f, 0xea, 0x8a, 0x97, 0xe2, 0x1d, 0x10, 0xaa, 0x96,
	0xdb, 0x26, 0x0e, 0x43, 0xc5, 0x7c, 0xac, 0x0d, 0x71, 0x1b, 0x6e, 0x67, 0x7a, 0xe3, 0x32, 0x44,
	0x1e, 0x36, 0x6b, 0xde, 0x3b, 0x77, 0xbc, 0x7f, 0xf1, 0xaf, 0x1c, 0x6c, 0x8d, 0xb9, 0x6e, 0xba,
	0xf8, 0xf1, 0x29, 0xcf, 0x5e, 0x67, 0xca, 0xff, 0x87, 0x3b, 0x43, 0x4d, 0x26, 0x75, 0x27, 0xbd,
	0xec, 0xc0, 0xf6, 0x04, 0x3f, 0x1b, 0xc3, 0x06, 0xac, 0x19, 0xd4, 0xf2, 0xe9, 0xc8, 0x0c, 0x7e,
	0x80, 0xf5, 0x61, 0xf3, 0x8d, 0x6f, 0xde, 0x06, 0xac, 0x35, 0xad, 0x7e, 0x40, 0xc6, 0x89, 0x87,
	0xcd, 0xff, 0x05, 0x71, 0xd5, 0x21, 0x96, 0x3f, 0x4e, 0x3c, 0x6c, 0xbe, 0x71, 0xe2, 0xe7, 0xb0,
	0x67, 0x10, 0x5a, 0xed, 0xfb, 0x3e, 0x71, 0xe9, 0xc0, 0x96, 0x2a, 0x6e, 0x87, 0xbc, 0x4f, 0x2e,
	0xdf, 0x3a, 0xe4, 0xed, 0x70, 0x1d, 0xb1, 0xe4, 0xf5, 0x78, 0x21, 0xba, 0x20, 0x5e, 0x16, 0x7a,
	0xe3, 0xa5, 0x0a, 0xc0, 0x2b, 0x01, 0x43, 0x1c, 0xd9, 0xae, 0x1d, 0x9c, 0x91, 0xf4, 0x48, 0x7d,
	0x05, 0xff, 0xcb, 0xf0, 0xb1, 0x12, 0x76, 0xa0, 0x60, 0x07, 0xf8, 0x2d, 0x33, 0x47, 0xfc, 0x4b,
	0x3a, 0xd8, 0x41, 0x02, 0x14, 0xf7, 0x60, 0xc7, 0xe8, 0x9f, 0x04, 0x6d, 0xdf, 0x3e, 0x49, 0xf6,
	0xb8, 0xe9, 0x7b, 0xa7, 0x3e, 0x09, 0x82, 0x84, 0xc0, 0x86, 0xad, 0x31, 0x0f, 0x4b, 0xaf, 0x02,
	0x97, 0x74, 0xd8, 0x63, 0x3e, 0xd6, 0xe3, 0xdd, 0x4b, 0x7a, 0x4c, 0xd3, 0xac, 0x76, 0x87, 0x0d,
	0xe2, 0x27, 0xb0, 0xff, 0x82, 0x50, 0x9d, 0xd0, 0xbe, 0xef, 0x9a, 0x5e, 0xdd, 0xea, 0xbb, 0xed,
	0x33, 0xe9, 0x2d, 0x25, 0xa3, 0x87, 0xe3, 0x1b, 0xb8, 0x77, 0x05, 0x8e, 0x15, 0xb8, 0x09, 0x0b,
	0xc4, 0xb5, 0x4e, 0x1c, 0xc2, 0x5a, 0x67, 0x2b, 0xf1, 0x6b, 0xd8, 0x37, 0xa6, 0x20, 0x9a, 0x18,
	0x7f, 0x1f, 0xee, 0x19, 0xd3, 0x14, 0x20, 0xfe, 0x3d, 0x0f, 0x85, 0x81, 0x03, 0x82, 0xf6, 0xa0,
	0xe8, 0x58, 0xd4, 0xa6, 0xfd, 0x0e, 0xc1, 0x1d, 0x72, 0x1a, 0xa5, 0xcd, 0xe9, 0x85, 0xc4, 0x56,
	0x23, 0xa7, 0xe8, 0x2e, 0xac, 0x38, 0x9e, 0x7b, 0x7a, 0x81, 0x99, 0x8d, 0x30, 0xc5, 0xd4, 0x18,
	0x82, 0x2a, 0xb0, 0xe6, 0x93, 0x30, 0xea, 0x9c, 0x60, 0xcb, 0x61, 0x09, 0xbb, 0xfc, 0xdc, 0x6e,
	0xae, 0x3c, 0xab, 0xdf, 0x4a, 0x5c, 0x12, 0xf3, 0x34, 0x90, 0x00, 0xcb, 0x41, 0x8f, 0x90, 0x0e,
	0xee, 0xe2, 0x80, 0x9f, 0x8f, 0x50, 0x8b, 0x91, 0xa1, 0x61, 0xa0, 0x7d, 0x28, 0x85, 0x87, 0xc4,
	0xf9, 0x80, 0xe9, 0x99, 0xef, 0xf5, 0x4f, 0xcf, 0xf8, 0x7c, 0xd4, 0x6c, 0xd1, 0x0e, 0x8e, 0x9c,
	0x0f, 0x66, 0x6c, 0x43, 0x65, 0xe0, 0x4e, 0xed, 0xee, 0x89, 0xe5, 0xe0, 0x9e, 0x4d, 0xdb, 0x67,
	0x51, 0x65, 0x0b, 0x51, 0xa2, 0x52, 0x6c, 0x6f, 0x86, 0xe6, 0xb0, 0xb6, 0x7d, 0x60, 0x16, 0xfc,
	0xc1, 0x7a, 0x17, 0xe1, 0x16, 0x23, 0x5c, 0x31, 0xb6, 0xbe, 0xb1, 0xde, 0x85, 0xa8, 0xd7, 0xb0,
	0xd2, 0xb6, 0xba, 0xc4, 0xb7, 0xb0, 0xd5, 0xa6, 0xb6, 0xe7, 0xf2, 0x4b, 0xbb, 0xb9, 0x72, 0xe9,
	0xe0, 0xe1, 0x15, 0x0f, 0x6e, 0xa5, 0x1a, 0x05, 0x49, 0x51, 0x8c, 0x5e, 0x6c, 0x0f, 0xac, 0x90,
	0x18, 0x4e, 0xce, 0xa6, 0xc4, 0xc7, 0xd4, 0xee, 0x12, 0x1c, 0xf0, 0xcb, 0x11, 0x6f, 0x21, 0x36,
	0x9a, 0x76, 0x97, 0x18, 0xe8, 0x19, 0x6c, 0x31, 0xda, 0xde, 0x99, 0x47, 0x3d, 0x6c, 0xbb, 0x94,
	0xf8, 0xe7, 0x96, 0x83, 0x03, 0x1e, 0xa2, 0x39, 0xaf, 0xc7, 0xee, 0x66, 0xe8, 0x55, 0x98, 0xd3,
	0x10, 0x7f, 0x86, 0xe2, 0x20, 0x31, 0x5a, 0x82, 0x79, 0x55, 0x53, 0x65, 0x6e, 0x06, 0x95, 0x00,
	0x4c, 0xe9, 0x95, 0x8c, 0x9b, 0x2f, 0x35, 0x53, 0xe3, 0x72, 0x88, 0x87, 0x75, 0xc3, 0x94, 0x74,
	0x33, 0x36, 0x60, 0x45, 0x35, 0x65, 0xfd, 0x58, 0xaa, 0x73, 0xb3, 0x68, 0x0b, 0xd6, 0x0c, 0x53,
	0x6b, 0x8e, 0x3a, 0xe6, 0xd0, 0x2a, 0x14, 0xe2, 0x90, 0x63, 0xa5, 0x26, 0x6b, 0xdc, 0x7c, 0x98,
	0x33, 0x42, 0xc6, 0xeb, 0xbc, 0xd8, 0x81, 0xd5, 0x91, 0xbb, 0x83, 0x1e, 0x02, 0x6a, 0xc7, 0xef,
	0x4f, 0xf4, 0xbd, 0xc2, 0x83, 0xaf, 0x14, 0xc7, 0x3c, 0xe9, 0x93, 0x14, 0x9e, 0xa9, 0xe4, 0xa2,
	0xb6, 0xbd, 0xbe, 0x4b, 0xa3, 0x33, 0x95, 0x4f, 0x3f, 0x5e, 0xd5, 0xd0, 0x26, 0xfe, 0x36, 0x07,
	0x2b, 0x43, 0xcf, 0x10, 0xfa, 0x16, 0x16, 0x06, 0x5e, 0xae, 0xd2, 0x41, 0xf9, 0xca, 0x97, 0xab,
	0xc2, 0x1e, 0x30, 0x16, 0x87, 0xb6, 0x01, 0xe2, 0xbf, 0x70, 0x40, 0xfd, 0x88, 0x75, 0x59, 0x5f,
	0x8e, 0x2d, 0x06, 0xf5, 0xc5, 0x3f, 0x66, 0x61, 0x81, 0x71, 0x15, 0x60, 0xb1, 0xa5, 0xbe, 0x52,
	0xb5, 0xef, 0x54, 0x6e, 0x26, 0x5c, 0x18, 0xad, 0x6a, 0x55, 0x36, 0x0c, 0x2e, 0x87, 0x96, 0x21,
	0x2f, 0xeb, 0xba, 0xa6, 0x73, 0xb3, 0x48, 0x80, 0x4d, 0x53, 0xd3, 0x70, 0x43, 0x52, 0xdf, 0xe0,
	0x86, 0x62, 0x18, 0x8a, 0xa6, 0x62, 0xc5, 0x94, 0x1b, 0x06, 0x37, 0x17, 0x6e, 0xc9, 0x61, 0xcb,
	0x78, 0xc3, 0xcd, 0x87, 0xd1, 0xa6, 0xd2, 0x90, 0xb5, 0x96, 0xc9, 0xe5, 0xd1, 0x3a, 0x70, 0x8a,
	0x7a, 0x2c, 0xd5, 0x95, 0x1a, 0x96, 0xf4, 0x17, 0xad, 0x86, 0xac, 0x9a, 0xdc, 0x42, 0x38, 0xf2,
	0x96, 0x6a, 0xb4, 0x9a, 0x4d, 0x4d, 0x37, 0xe5, 0x1a, 0xb7, 0x18, 0x6e, 0x9b, 0xaa, 0xa5, 0x39,
	0xa5, 0x63, 0x49, 0xa9, 0x4b, 0x87, 0x75, 0x99, 0x5b, 0x42, 0xb7, 0x61, 0xeb, 0x48, 0x52, 0xea,
	0x72, 0x0d, 0x9b, 0x1a, 0xd6, 0x9a, 0xb2, 0x8a, 0x5f, 0xbf, 0xa8, 0xe2, 0x66, 0x5d, 0x52, 0xb9,
	0x65, 0x74, 0x07, 0xf8, 0x0b, 0x67, 0x53, 0xd2, 0x0d, 0xf9, 0xc2, 0x0b, 0x61, 0xe8, 0x00, 0x4b,
	0x9a, 0xbd, 0xda, 0xa8, 0x71, 0x05, 0xb4, 0x09, 0xc8, 0xd4, 0x25, 0xd5, 0x38, 0x92, 0x75, 0x5c,
	0x95, 0xd4, 0xaa, 0x5c, 0xaf, 0xcb, 0x35, 0xae, 0x78, 0xf0, 0x4f, 0x01, 0x4a, 0x6c, 0xa6, 0x06,
	0xf1, 0xcf, 0xed, 0x36, 0x41, 0x6f, 0x61, 0x65, 0x48, 0xbc, 0xa1, 0xcc, 0x8d, 0xc8, 0x52, 0x8f,
	0xc2, 0x83, 0x29, 0x90, 0xec, 0xad, 0x9a, 0x41, 0xef, 0x61, 0x2d, 0x43, 0xa3, 0xa1, 0x4a, 0x56,
	0x8e, 0xc9, 0x52, 0x4f, 0x78, 0x3c, 0x35, 0x3e, 0x65, 0x76, 0x60, 0x75, 0x44, 0xe3, 0xa1, 0x4f,
	0xb3, 0xb2, 0x64, 0x6b, 0x44, 0xe1, 0xb3, 0xa9, 0xb0, 0x29, 0xdb, 0x2f, 0xb0, 0x91, 0x29, 0xc3,
	0xd0, 0x93, 0x2b, 0x2b, 0x1f, 0x51, 0x74, 0xc2, 0xe7, 0x1f, 0x11, 0x91, 0xf2, 0xb7, 0xa1, 0x38,
	0x28, 0xe7, 0xd0, 0xfd, 0xac, 0x24, 0x19, 0x3a, 0x50, 0x28, 0x5f, 0x0d, 0x1c, 0x24, 0x19, 0x94,
	0x6e, 0xd9, 0x24, 0x19, 0x9a, 0x2f, 0x9b, 0x24, 0x4b, 0x05, 0xc6, 0x24, 0x83, 0x32, 0x2d, 0x9b,
	0x24, 0x43, 0xdf, 0x65, 0x93, 0x64, 0x29, 0x3e, 0x71, 0x06, 0xfd, 0x9e, 0x03, 0x61, 0xb2, 0xde,
	0x42, 0xcf, 0x32, 0x87, 0x72, 0x95, 0xb4, 0x13, 0xbe, 0xf8, 0xd8, 0xb0, 0xb4, 0x1e, 0x1f, 0x6e,
	0x8d, 0x49, 0x2e, 0x94, 0xf9, 0xe1, 0x9a, 0xa4, 0xda, 0x84, 0x47, 0x53, 0xa2, 0x53, 0xce, 0x5f,
	0x73, 0xc0, 0x4f, 0x52, 0x6a, 0xe8, 0x69, 0x66, 0x2b, 0x97, 0xeb, 0xba, 0xec, 0x3b, 0x33, 0x41,
	0xe9, 0x89, 0x33, 0x4f, 0x72, 0xe8, 0xcf, 0x1c, 0x6c, 0x5f, 0x2a, 0xbb, 0xd0, 0x97, 0x59, 0x29,
	0xa7, 0x51, 0x74, 0xc2, 0xf3, 0x6b, 0x44, 0xa6, 0xb3, 0x09, 0x0b, 0x33, 0x3e, 0xbe, 0x30, 0xe3,
	0xda, 0x85, 0x4d, 0xa7, 0xfd, 0x66, 0x0e, 0xf7, 0xe0, 0x96, 0xed, 0x25, 0x09, 0x58, 0xf0, 0x61,
	0xf1, 0x62, 0xc6, 0xd4, 0x3b, 0x59, 0x88, 0xfe, 0x21, 0xf0, 0xf4, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x84, 0xe7, 0x19, 0x81, 0x3d, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MissionServiceClient is the client API for MissionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MissionServiceClient interface {
	//
	// Upload a list of mission items to the system.
	//
	// The mission items are uploaded to a drone. Once uploaded the mission can be started and
	// executed even if the connection is lost.
	UploadMission(ctx context.Context, in *UploadMissionRequest, opts ...grpc.CallOption) (*UploadMissionResponse, error)
	//
	// Cancel an ongoing mission upload.
	CancelMissionUpload(ctx context.Context, in *CancelMissionUploadRequest, opts ...grpc.CallOption) (*CancelMissionUploadResponse, error)
	//
	// Download a list of mission items from the system (asynchronous).
	//
	// Will fail if any of the downloaded mission items are not supported
	// by the MAVSDK API.
	DownloadMission(ctx context.Context, in *DownloadMissionRequest, opts ...grpc.CallOption) (*DownloadMissionResponse, error)
	//
	// Cancel an ongoing mission download.
	CancelMissionDownload(ctx context.Context, in *CancelMissionDownloadRequest, opts ...grpc.CallOption) (*CancelMissionDownloadResponse, error)
	//
	// Start the mission.
	//
	// A mission must be uploaded to the vehicle before this can be called.
	StartMission(ctx context.Context, in *StartMissionRequest, opts ...grpc.CallOption) (*StartMissionResponse, error)
	//
	// Pause the mission.
	//
	// Pausing the mission puts the vehicle into
	// [HOLD mode](https://docs.px4.io/en/flight_modes/hold.html).
	// A multicopter should just hover at the spot while a fixedwing vehicle should loiter
	// around the location where it paused.
	PauseMission(ctx context.Context, in *PauseMissionRequest, opts ...grpc.CallOption) (*PauseMissionResponse, error)
	//
	// Clear the mission saved on the vehicle.
	ClearMission(ctx context.Context, in *ClearMissionRequest, opts ...grpc.CallOption) (*ClearMissionResponse, error)
	//
	// Sets the mission item index to go to.
	//
	// By setting the current index to 0, the mission is restarted from the beginning. If it is set
	// to a specific index of a mission item, the mission will be set to this item.
	//
	// Note that this is not necessarily true for general missions using MAVLink if loop counters
	// are used.
	SetCurrentMissionItemIndex(ctx context.Context, in *SetCurrentMissionItemIndexRequest, opts ...grpc.CallOption) (*SetCurrentMissionItemIndexResponse, error)
	//
	// Check if the mission has been finished.
	IsMissionFinished(ctx context.Context, in *IsMissionFinishedRequest, opts ...grpc.CallOption) (*IsMissionFinishedResponse, error)
	//
	// Subscribe to mission progress updates.
	SubscribeMissionProgress(ctx context.Context, in *SubscribeMissionProgressRequest, opts ...grpc.CallOption) (MissionService_SubscribeMissionProgressClient, error)
	//
	// Get whether to trigger Return-to-Launch (RTL) after mission is complete.
	//
	// Before getting this option, it needs to be set, or a mission
	// needs to be downloaded.
	GetReturnToLaunchAfterMission(ctx context.Context, in *GetReturnToLaunchAfterMissionRequest, opts ...grpc.CallOption) (*GetReturnToLaunchAfterMissionResponse, error)
	//
	// Set whether to trigger Return-to-Launch (RTL) after the mission is complete.
	//
	// This will only take effect for the next mission upload, meaning that
	// the mission may have to be uploaded again.
	SetReturnToLaunchAfterMission(ctx context.Context, in *SetReturnToLaunchAfterMissionRequest, opts ...grpc.CallOption) (*SetReturnToLaunchAfterMissionResponse, error)
}

type missionServiceClient struct {
	cc *grpc.ClientConn
}

func NewMissionServiceClient(cc *grpc.ClientConn) MissionServiceClient {
	return &missionServiceClient{cc}
}

func (c *missionServiceClient) UploadMission(ctx context.Context, in *UploadMissionRequest, opts ...grpc.CallOption) (*UploadMissionResponse, error) {
	out := new(UploadMissionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/UploadMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) CancelMissionUpload(ctx context.Context, in *CancelMissionUploadRequest, opts ...grpc.CallOption) (*CancelMissionUploadResponse, error) {
	out := new(CancelMissionUploadResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/CancelMissionUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) DownloadMission(ctx context.Context, in *DownloadMissionRequest, opts ...grpc.CallOption) (*DownloadMissionResponse, error) {
	out := new(DownloadMissionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/DownloadMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) CancelMissionDownload(ctx context.Context, in *CancelMissionDownloadRequest, opts ...grpc.CallOption) (*CancelMissionDownloadResponse, error) {
	out := new(CancelMissionDownloadResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/CancelMissionDownload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) StartMission(ctx context.Context, in *StartMissionRequest, opts ...grpc.CallOption) (*StartMissionResponse, error) {
	out := new(StartMissionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/StartMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) PauseMission(ctx context.Context, in *PauseMissionRequest, opts ...grpc.CallOption) (*PauseMissionResponse, error) {
	out := new(PauseMissionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/PauseMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) ClearMission(ctx context.Context, in *ClearMissionRequest, opts ...grpc.CallOption) (*ClearMissionResponse, error) {
	out := new(ClearMissionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/ClearMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) SetCurrentMissionItemIndex(ctx context.Context, in *SetCurrentMissionItemIndexRequest, opts ...grpc.CallOption) (*SetCurrentMissionItemIndexResponse, error) {
	out := new(SetCurrentMissionItemIndexResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/SetCurrentMissionItemIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) IsMissionFinished(ctx context.Context, in *IsMissionFinishedRequest, opts ...grpc.CallOption) (*IsMissionFinishedResponse, error) {
	out := new(IsMissionFinishedResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/IsMissionFinished", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) SubscribeMissionProgress(ctx context.Context, in *SubscribeMissionProgressRequest, opts ...grpc.CallOption) (MissionService_SubscribeMissionProgressClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MissionService_serviceDesc.Streams[0], "/mavsdk.rpc.mission.MissionService/SubscribeMissionProgress", opts...)
	if err != nil {
		return nil, err
	}
	x := &missionServiceSubscribeMissionProgressClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MissionService_SubscribeMissionProgressClient interface {
	Recv() (*MissionProgressResponse, error)
	grpc.ClientStream
}

type missionServiceSubscribeMissionProgressClient struct {
	grpc.ClientStream
}

func (x *missionServiceSubscribeMissionProgressClient) Recv() (*MissionProgressResponse, error) {
	m := new(MissionProgressResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *missionServiceClient) GetReturnToLaunchAfterMission(ctx context.Context, in *GetReturnToLaunchAfterMissionRequest, opts ...grpc.CallOption) (*GetReturnToLaunchAfterMissionResponse, error) {
	out := new(GetReturnToLaunchAfterMissionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/GetReturnToLaunchAfterMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *missionServiceClient) SetReturnToLaunchAfterMission(ctx context.Context, in *SetReturnToLaunchAfterMissionRequest, opts ...grpc.CallOption) (*SetReturnToLaunchAfterMissionResponse, error) {
	out := new(SetReturnToLaunchAfterMissionResponse)
	err := c.cc.Invoke(ctx, "/mavsdk.rpc.mission.MissionService/SetReturnToLaunchAfterMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MissionServiceServer is the server API for MissionService service.
type MissionServiceServer interface {
	//
	// Upload a list of mission items to the system.
	//
	// The mission items are uploaded to a drone. Once uploaded the mission can be started and
	// executed even if the connection is lost.
	UploadMission(context.Context, *UploadMissionRequest) (*UploadMissionResponse, error)
	//
	// Cancel an ongoing mission upload.
	CancelMissionUpload(context.Context, *CancelMissionUploadRequest) (*CancelMissionUploadResponse, error)
	//
	// Download a list of mission items from the system (asynchronous).
	//
	// Will fail if any of the downloaded mission items are not supported
	// by the MAVSDK API.
	DownloadMission(context.Context, *DownloadMissionRequest) (*DownloadMissionResponse, error)
	//
	// Cancel an ongoing mission download.
	CancelMissionDownload(context.Context, *CancelMissionDownloadRequest) (*CancelMissionDownloadResponse, error)
	//
	// Start the mission.
	//
	// A mission must be uploaded to the vehicle before this can be called.
	StartMission(context.Context, *StartMissionRequest) (*StartMissionResponse, error)
	//
	// Pause the mission.
	//
	// Pausing the mission puts the vehicle into
	// [HOLD mode](https://docs.px4.io/en/flight_modes/hold.html).
	// A multicopter should just hover at the spot while a fixedwing vehicle should loiter
	// around the location where it paused.
	PauseMission(context.Context, *PauseMissionRequest) (*PauseMissionResponse, error)
	//
	// Clear the mission saved on the vehicle.
	ClearMission(context.Context, *ClearMissionRequest) (*ClearMissionResponse, error)
	//
	// Sets the mission item index to go to.
	//
	// By setting the current index to 0, the mission is restarted from the beginning. If it is set
	// to a specific index of a mission item, the mission will be set to this item.
	//
	// Note that this is not necessarily true for general missions using MAVLink if loop counters
	// are used.
	SetCurrentMissionItemIndex(context.Context, *SetCurrentMissionItemIndexRequest) (*SetCurrentMissionItemIndexResponse, error)
	//
	// Check if the mission has been finished.
	IsMissionFinished(context.Context, *IsMissionFinishedRequest) (*IsMissionFinishedResponse, error)
	//
	// Subscribe to mission progress updates.
	SubscribeMissionProgress(*SubscribeMissionProgressRequest, MissionService_SubscribeMissionProgressServer) error
	//
	// Get whether to trigger Return-to-Launch (RTL) after mission is complete.
	//
	// Before getting this option, it needs to be set, or a mission
	// needs to be downloaded.
	GetReturnToLaunchAfterMission(context.Context, *GetReturnToLaunchAfterMissionRequest) (*GetReturnToLaunchAfterMissionResponse, error)
	//
	// Set whether to trigger Return-to-Launch (RTL) after the mission is complete.
	//
	// This will only take effect for the next mission upload, meaning that
	// the mission may have to be uploaded again.
	SetReturnToLaunchAfterMission(context.Context, *SetReturnToLaunchAfterMissionRequest) (*SetReturnToLaunchAfterMissionResponse, error)
}

// UnimplementedMissionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMissionServiceServer struct {
}

func (*UnimplementedMissionServiceServer) UploadMission(ctx context.Context, req *UploadMissionRequest) (*UploadMissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadMission not implemented")
}
func (*UnimplementedMissionServiceServer) CancelMissionUpload(ctx context.Context, req *CancelMissionUploadRequest) (*CancelMissionUploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelMissionUpload not implemented")
}
func (*UnimplementedMissionServiceServer) DownloadMission(ctx context.Context, req *DownloadMissionRequest) (*DownloadMissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadMission not implemented")
}
func (*UnimplementedMissionServiceServer) CancelMissionDownload(ctx context.Context, req *CancelMissionDownloadRequest) (*CancelMissionDownloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelMissionDownload not implemented")
}
func (*UnimplementedMissionServiceServer) StartMission(ctx context.Context, req *StartMissionRequest) (*StartMissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartMission not implemented")
}
func (*UnimplementedMissionServiceServer) PauseMission(ctx context.Context, req *PauseMissionRequest) (*PauseMissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseMission not implemented")
}
func (*UnimplementedMissionServiceServer) ClearMission(ctx context.Context, req *ClearMissionRequest) (*ClearMissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearMission not implemented")
}
func (*UnimplementedMissionServiceServer) SetCurrentMissionItemIndex(ctx context.Context, req *SetCurrentMissionItemIndexRequest) (*SetCurrentMissionItemIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCurrentMissionItemIndex not implemented")
}
func (*UnimplementedMissionServiceServer) IsMissionFinished(ctx context.Context, req *IsMissionFinishedRequest) (*IsMissionFinishedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsMissionFinished not implemented")
}
func (*UnimplementedMissionServiceServer) SubscribeMissionProgress(req *SubscribeMissionProgressRequest, srv MissionService_SubscribeMissionProgressServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeMissionProgress not implemented")
}
func (*UnimplementedMissionServiceServer) GetReturnToLaunchAfterMission(ctx context.Context, req *GetReturnToLaunchAfterMissionRequest) (*GetReturnToLaunchAfterMissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReturnToLaunchAfterMission not implemented")
}
func (*UnimplementedMissionServiceServer) SetReturnToLaunchAfterMission(ctx context.Context, req *SetReturnToLaunchAfterMissionRequest) (*SetReturnToLaunchAfterMissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetReturnToLaunchAfterMission not implemented")
}

func RegisterMissionServiceServer(s *grpc.Server, srv MissionServiceServer) {
	s.RegisterService(&_MissionService_serviceDesc, srv)
}

func _MissionService_UploadMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).UploadMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/UploadMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).UploadMission(ctx, req.(*UploadMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_CancelMissionUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelMissionUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).CancelMissionUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/CancelMissionUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).CancelMissionUpload(ctx, req.(*CancelMissionUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_DownloadMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).DownloadMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/DownloadMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).DownloadMission(ctx, req.(*DownloadMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_CancelMissionDownload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelMissionDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).CancelMissionDownload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/CancelMissionDownload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).CancelMissionDownload(ctx, req.(*CancelMissionDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_StartMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).StartMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/StartMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).StartMission(ctx, req.(*StartMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_PauseMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).PauseMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/PauseMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).PauseMission(ctx, req.(*PauseMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_ClearMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).ClearMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/ClearMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).ClearMission(ctx, req.(*ClearMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_SetCurrentMissionItemIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCurrentMissionItemIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).SetCurrentMissionItemIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/SetCurrentMissionItemIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).SetCurrentMissionItemIndex(ctx, req.(*SetCurrentMissionItemIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_IsMissionFinished_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsMissionFinishedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).IsMissionFinished(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/IsMissionFinished",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).IsMissionFinished(ctx, req.(*IsMissionFinishedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_SubscribeMissionProgress_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeMissionProgressRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MissionServiceServer).SubscribeMissionProgress(m, &missionServiceSubscribeMissionProgressServer{stream})
}

type MissionService_SubscribeMissionProgressServer interface {
	Send(*MissionProgressResponse) error
	grpc.ServerStream
}

type missionServiceSubscribeMissionProgressServer struct {
	grpc.ServerStream
}

func (x *missionServiceSubscribeMissionProgressServer) Send(m *MissionProgressResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MissionService_GetReturnToLaunchAfterMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReturnToLaunchAfterMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).GetReturnToLaunchAfterMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/GetReturnToLaunchAfterMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).GetReturnToLaunchAfterMission(ctx, req.(*GetReturnToLaunchAfterMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MissionService_SetReturnToLaunchAfterMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetReturnToLaunchAfterMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MissionServiceServer).SetReturnToLaunchAfterMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mavsdk.rpc.mission.MissionService/SetReturnToLaunchAfterMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MissionServiceServer).SetReturnToLaunchAfterMission(ctx, req.(*SetReturnToLaunchAfterMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mavsdk.rpc.mission.MissionService",
	HandlerType: (*MissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadMission",
			Handler:    _MissionService_UploadMission_Handler,
		},
		{
			MethodName: "CancelMissionUpload",
			Handler:    _MissionService_CancelMissionUpload_Handler,
		},
		{
			MethodName: "DownloadMission",
			Handler:    _MissionService_DownloadMission_Handler,
		},
		{
			MethodName: "CancelMissionDownload",
			Handler:    _MissionService_CancelMissionDownload_Handler,
		},
		{
			MethodName: "StartMission",
			Handler:    _MissionService_StartMission_Handler,
		},
		{
			MethodName: "PauseMission",
			Handler:    _MissionService_PauseMission_Handler,
		},
		{
			MethodName: "ClearMission",
			Handler:    _MissionService_ClearMission_Handler,
		},
		{
			MethodName: "SetCurrentMissionItemIndex",
			Handler:    _MissionService_SetCurrentMissionItemIndex_Handler,
		},
		{
			MethodName: "IsMissionFinished",
			Handler:    _MissionService_IsMissionFinished_Handler,
		},
		{
			MethodName: "GetReturnToLaunchAfterMission",
			Handler:    _MissionService_GetReturnToLaunchAfterMission_Handler,
		},
		{
			MethodName: "SetReturnToLaunchAfterMission",
			Handler:    _MissionService_SetReturnToLaunchAfterMission_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeMissionProgress",
			Handler:       _MissionService_SubscribeMissionProgress_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "MAVSDK-Proto/protos/mission/mission.proto",
}
