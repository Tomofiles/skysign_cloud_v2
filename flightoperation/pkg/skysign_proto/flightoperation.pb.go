// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.10.0
// source: flightoperation.proto

package skysign_proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Flightoperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlightplanId string `protobuf:"bytes,2,opt,name=flightplan_id,json=flightplanId,proto3" json:"flightplan_id,omitempty"`
}

func (x *Flightoperation) Reset() {
	*x = Flightoperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flightoperation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flightoperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flightoperation) ProtoMessage() {}

func (x *Flightoperation) ProtoReflect() protoreflect.Message {
	mi := &file_flightoperation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flightoperation.ProtoReflect.Descriptor instead.
func (*Flightoperation) Descriptor() ([]byte, []int) {
	return file_flightoperation_proto_rawDescGZIP(), []int{0}
}

func (x *Flightoperation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Flightoperation) GetFlightplanId() string {
	if x != nil {
		return x.FlightplanId
	}
	return ""
}

type GetFlightoperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFlightoperationRequest) Reset() {
	*x = GetFlightoperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flightoperation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightoperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightoperationRequest) ProtoMessage() {}

func (x *GetFlightoperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flightoperation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightoperationRequest.ProtoReflect.Descriptor instead.
func (*GetFlightoperationRequest) Descriptor() ([]byte, []int) {
	return file_flightoperation_proto_rawDescGZIP(), []int{1}
}

func (x *GetFlightoperationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateFlightoperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightplanId string `protobuf:"bytes,1,opt,name=flightplan_id,json=flightplanId,proto3" json:"flightplan_id,omitempty"`
}

func (x *CreateFlightoperationRequest) Reset() {
	*x = CreateFlightoperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flightoperation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlightoperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlightoperationRequest) ProtoMessage() {}

func (x *CreateFlightoperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flightoperation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlightoperationRequest.ProtoReflect.Descriptor instead.
func (*CreateFlightoperationRequest) Descriptor() ([]byte, []int) {
	return file_flightoperation_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFlightoperationRequest) GetFlightplanId() string {
	if x != nil {
		return x.FlightplanId
	}
	return ""
}

type ListFlightoperationsResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flightoperations []*Flightoperation `protobuf:"bytes,1,rep,name=flightoperations,proto3" json:"flightoperations,omitempty"`
}

func (x *ListFlightoperationsResponses) Reset() {
	*x = ListFlightoperationsResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flightoperation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFlightoperationsResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlightoperationsResponses) ProtoMessage() {}

func (x *ListFlightoperationsResponses) ProtoReflect() protoreflect.Message {
	mi := &file_flightoperation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlightoperationsResponses.ProtoReflect.Descriptor instead.
func (*ListFlightoperationsResponses) Descriptor() ([]byte, []int) {
	return file_flightoperation_proto_rawDescGZIP(), []int{3}
}

func (x *ListFlightoperationsResponses) GetFlightoperations() []*Flightoperation {
	if x != nil {
		return x.Flightoperations
	}
	return nil
}

var File_flightoperation_proto protoreflect.FileDescriptor

var file_flightoperation_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x46, 0x0a, 0x0f, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x1d,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x4a, 0x0a,
	0x10, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xa8, 0x03, 0x0a, 0x14, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x6b, 0x79,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2c, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x85, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x89, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x3a, 0x01, 0x2a, 0x42, 0x22, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x6b,
	0x79, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x01, 0x5a, 0x0f, 0x2e, 0x3b, 0x73, 0x6b, 0x79, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flightoperation_proto_rawDescOnce sync.Once
	file_flightoperation_proto_rawDescData = file_flightoperation_proto_rawDesc
)

func file_flightoperation_proto_rawDescGZIP() []byte {
	file_flightoperation_proto_rawDescOnce.Do(func() {
		file_flightoperation_proto_rawDescData = protoimpl.X.CompressGZIP(file_flightoperation_proto_rawDescData)
	})
	return file_flightoperation_proto_rawDescData
}

var file_flightoperation_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_flightoperation_proto_goTypes = []interface{}{
	(*Flightoperation)(nil),               // 0: skysign_proto.Flightoperation
	(*GetFlightoperationRequest)(nil),     // 1: skysign_proto.GetFlightoperationRequest
	(*CreateFlightoperationRequest)(nil),  // 2: skysign_proto.CreateFlightoperationRequest
	(*ListFlightoperationsResponses)(nil), // 3: skysign_proto.ListFlightoperationsResponses
	(*Empty)(nil),                         // 4: skysign_proto.Empty
}
var file_flightoperation_proto_depIdxs = []int32{
	0, // 0: skysign_proto.ListFlightoperationsResponses.flightoperations:type_name -> skysign_proto.Flightoperation
	4, // 1: skysign_proto.OperateFlightService.ListFlightoperations:input_type -> skysign_proto.Empty
	1, // 2: skysign_proto.OperateFlightService.GetFlightoperation:input_type -> skysign_proto.GetFlightoperationRequest
	2, // 3: skysign_proto.OperateFlightService.CreateFlightoperation:input_type -> skysign_proto.CreateFlightoperationRequest
	3, // 4: skysign_proto.OperateFlightService.ListFlightoperations:output_type -> skysign_proto.ListFlightoperationsResponses
	0, // 5: skysign_proto.OperateFlightService.GetFlightoperation:output_type -> skysign_proto.Flightoperation
	0, // 6: skysign_proto.OperateFlightService.CreateFlightoperation:output_type -> skysign_proto.Flightoperation
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_flightoperation_proto_init() }
func file_flightoperation_proto_init() {
	if File_flightoperation_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flightoperation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flightoperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flightoperation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlightoperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flightoperation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlightoperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flightoperation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFlightoperationsResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flightoperation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flightoperation_proto_goTypes,
		DependencyIndexes: file_flightoperation_proto_depIdxs,
		MessageInfos:      file_flightoperation_proto_msgTypes,
	}.Build()
	File_flightoperation_proto = out.File
	file_flightoperation_proto_rawDesc = nil
	file_flightoperation_proto_goTypes = nil
	file_flightoperation_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OperateFlightServiceClient is the client API for OperateFlightService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OperateFlightServiceClient interface {
	ListFlightoperations(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListFlightoperationsResponses, error)
	GetFlightoperation(ctx context.Context, in *GetFlightoperationRequest, opts ...grpc.CallOption) (*Flightoperation, error)
	CreateFlightoperation(ctx context.Context, in *CreateFlightoperationRequest, opts ...grpc.CallOption) (*Flightoperation, error)
}

type operateFlightServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOperateFlightServiceClient(cc grpc.ClientConnInterface) OperateFlightServiceClient {
	return &operateFlightServiceClient{cc}
}

func (c *operateFlightServiceClient) ListFlightoperations(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListFlightoperationsResponses, error) {
	out := new(ListFlightoperationsResponses)
	err := c.cc.Invoke(ctx, "/skysign_proto.OperateFlightService/ListFlightoperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operateFlightServiceClient) GetFlightoperation(ctx context.Context, in *GetFlightoperationRequest, opts ...grpc.CallOption) (*Flightoperation, error) {
	out := new(Flightoperation)
	err := c.cc.Invoke(ctx, "/skysign_proto.OperateFlightService/GetFlightoperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operateFlightServiceClient) CreateFlightoperation(ctx context.Context, in *CreateFlightoperationRequest, opts ...grpc.CallOption) (*Flightoperation, error) {
	out := new(Flightoperation)
	err := c.cc.Invoke(ctx, "/skysign_proto.OperateFlightService/CreateFlightoperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OperateFlightServiceServer is the server API for OperateFlightService service.
type OperateFlightServiceServer interface {
	ListFlightoperations(context.Context, *Empty) (*ListFlightoperationsResponses, error)
	GetFlightoperation(context.Context, *GetFlightoperationRequest) (*Flightoperation, error)
	CreateFlightoperation(context.Context, *CreateFlightoperationRequest) (*Flightoperation, error)
}

// UnimplementedOperateFlightServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOperateFlightServiceServer struct {
}

func (*UnimplementedOperateFlightServiceServer) ListFlightoperations(context.Context, *Empty) (*ListFlightoperationsResponses, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFlightoperations not implemented")
}
func (*UnimplementedOperateFlightServiceServer) GetFlightoperation(context.Context, *GetFlightoperationRequest) (*Flightoperation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlightoperation not implemented")
}
func (*UnimplementedOperateFlightServiceServer) CreateFlightoperation(context.Context, *CreateFlightoperationRequest) (*Flightoperation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFlightoperation not implemented")
}

func RegisterOperateFlightServiceServer(s *grpc.Server, srv OperateFlightServiceServer) {
	s.RegisterService(&_OperateFlightService_serviceDesc, srv)
}

func _OperateFlightService_ListFlightoperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperateFlightServiceServer).ListFlightoperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.OperateFlightService/ListFlightoperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperateFlightServiceServer).ListFlightoperations(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperateFlightService_GetFlightoperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlightoperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperateFlightServiceServer).GetFlightoperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.OperateFlightService/GetFlightoperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperateFlightServiceServer).GetFlightoperation(ctx, req.(*GetFlightoperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperateFlightService_CreateFlightoperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFlightoperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperateFlightServiceServer).CreateFlightoperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.OperateFlightService/CreateFlightoperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperateFlightServiceServer).CreateFlightoperation(ctx, req.(*CreateFlightoperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OperateFlightService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "skysign_proto.OperateFlightService",
	HandlerType: (*OperateFlightServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFlightoperations",
			Handler:    _OperateFlightService_ListFlightoperations_Handler,
		},
		{
			MethodName: "GetFlightoperation",
			Handler:    _OperateFlightService_GetFlightoperation_Handler,
		},
		{
			MethodName: "CreateFlightoperation",
			Handler:    _OperateFlightService_CreateFlightoperation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flightoperation.proto",
}
