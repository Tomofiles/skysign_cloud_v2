// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.10.0
// source: manage_mission.proto

package skysign_proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListMissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMissionsRequest) Reset() {
	*x = ListMissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_mission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionsRequest) ProtoMessage() {}

func (x *ListMissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_mission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionsRequest.ProtoReflect.Descriptor instead.
func (*ListMissionsRequest) Descriptor() ([]byte, []int) {
	return file_manage_mission_proto_rawDescGZIP(), []int{0}
}

type GetMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMissionRequest) Reset() {
	*x = GetMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_mission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMissionRequest) ProtoMessage() {}

func (x *GetMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_mission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMissionRequest.ProtoReflect.Descriptor instead.
func (*GetMissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_mission_proto_rawDescGZIP(), []int{1}
}

func (x *GetMissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mission *Mission `protobuf:"bytes,1,opt,name=mission,proto3" json:"mission,omitempty"`
}

func (x *CreateMissionRequest) Reset() {
	*x = CreateMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_mission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMissionRequest) ProtoMessage() {}

func (x *CreateMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_mission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMissionRequest.ProtoReflect.Descriptor instead.
func (*CreateMissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_mission_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMissionRequest) GetMission() *Mission {
	if x != nil {
		return x.Mission
	}
	return nil
}

type UpdateMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mission *Mission `protobuf:"bytes,2,opt,name=mission,proto3" json:"mission,omitempty"`
}

func (x *UpdateMissionRequest) Reset() {
	*x = UpdateMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_mission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMissionRequest) ProtoMessage() {}

func (x *UpdateMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_mission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateMissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_mission_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMissionRequest) GetMission() *Mission {
	if x != nil {
		return x.Mission
	}
	return nil
}

type DeleteMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMissionRequest) Reset() {
	*x = DeleteMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_mission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMissionRequest) ProtoMessage() {}

func (x *DeleteMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manage_mission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteMissionRequest) Descriptor() ([]byte, []int) {
	return file_manage_mission_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteMissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListMissionsResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Missions []*Mission `protobuf:"bytes,1,rep,name=missions,proto3" json:"missions,omitempty"`
}

func (x *ListMissionsResponses) Reset() {
	*x = ListMissionsResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_mission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionsResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionsResponses) ProtoMessage() {}

func (x *ListMissionsResponses) ProtoReflect() protoreflect.Message {
	mi := &file_manage_mission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionsResponses.ProtoReflect.Descriptor instead.
func (*ListMissionsResponses) Descriptor() ([]byte, []int) {
	return file_manage_mission_proto_rawDescGZIP(), []int{5}
}

func (x *ListMissionsResponses) GetMissions() []*Mission {
	if x != nil {
		return x.Missions
	}
	return nil
}

var File_manage_mission_proto protoreflect.FileDescriptor

var file_manage_mission_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x30, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xb7, 0x04, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x72, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x22, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x65, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x69, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x6b,
	0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x6b,
	0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x1a, 0x15, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x6b,
	0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0x22, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67,
	0x6e, 0x50, 0x01, 0x5a, 0x0f, 0x2e, 0x3b, 0x73, 0x6b, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_manage_mission_proto_rawDescOnce sync.Once
	file_manage_mission_proto_rawDescData = file_manage_mission_proto_rawDesc
)

func file_manage_mission_proto_rawDescGZIP() []byte {
	file_manage_mission_proto_rawDescOnce.Do(func() {
		file_manage_mission_proto_rawDescData = protoimpl.X.CompressGZIP(file_manage_mission_proto_rawDescData)
	})
	return file_manage_mission_proto_rawDescData
}

var file_manage_mission_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_manage_mission_proto_goTypes = []interface{}{
	(*ListMissionsRequest)(nil),   // 0: skysign_proto.ListMissionsRequest
	(*GetMissionRequest)(nil),     // 1: skysign_proto.GetMissionRequest
	(*CreateMissionRequest)(nil),  // 2: skysign_proto.CreateMissionRequest
	(*UpdateMissionRequest)(nil),  // 3: skysign_proto.UpdateMissionRequest
	(*DeleteMissionRequest)(nil),  // 4: skysign_proto.DeleteMissionRequest
	(*ListMissionsResponses)(nil), // 5: skysign_proto.ListMissionsResponses
	(*Mission)(nil),               // 6: skysign_proto.Mission
	(*Empty)(nil),                 // 7: skysign_proto.Empty
}
var file_manage_mission_proto_depIdxs = []int32{
	6, // 0: skysign_proto.CreateMissionRequest.mission:type_name -> skysign_proto.Mission
	6, // 1: skysign_proto.UpdateMissionRequest.mission:type_name -> skysign_proto.Mission
	6, // 2: skysign_proto.ListMissionsResponses.missions:type_name -> skysign_proto.Mission
	0, // 3: skysign_proto.ManageMissionService.ListMissions:input_type -> skysign_proto.ListMissionsRequest
	1, // 4: skysign_proto.ManageMissionService.GetMission:input_type -> skysign_proto.GetMissionRequest
	2, // 5: skysign_proto.ManageMissionService.CreateMission:input_type -> skysign_proto.CreateMissionRequest
	3, // 6: skysign_proto.ManageMissionService.UpdateMission:input_type -> skysign_proto.UpdateMissionRequest
	4, // 7: skysign_proto.ManageMissionService.DeleteMission:input_type -> skysign_proto.DeleteMissionRequest
	5, // 8: skysign_proto.ManageMissionService.ListMissions:output_type -> skysign_proto.ListMissionsResponses
	6, // 9: skysign_proto.ManageMissionService.GetMission:output_type -> skysign_proto.Mission
	6, // 10: skysign_proto.ManageMissionService.CreateMission:output_type -> skysign_proto.Mission
	6, // 11: skysign_proto.ManageMissionService.UpdateMission:output_type -> skysign_proto.Mission
	7, // 12: skysign_proto.ManageMissionService.DeleteMission:output_type -> skysign_proto.Empty
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_manage_mission_proto_init() }
func file_manage_mission_proto_init() {
	if File_manage_mission_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_manage_mission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_mission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_mission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_mission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_mission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_mission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionsResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manage_mission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manage_mission_proto_goTypes,
		DependencyIndexes: file_manage_mission_proto_depIdxs,
		MessageInfos:      file_manage_mission_proto_msgTypes,
	}.Build()
	File_manage_mission_proto = out.File
	file_manage_mission_proto_rawDesc = nil
	file_manage_mission_proto_goTypes = nil
	file_manage_mission_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManageMissionServiceClient is the client API for ManageMissionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManageMissionServiceClient interface {
	ListMissions(ctx context.Context, in *ListMissionsRequest, opts ...grpc.CallOption) (*ListMissionsResponses, error)
	GetMission(ctx context.Context, in *GetMissionRequest, opts ...grpc.CallOption) (*Mission, error)
	CreateMission(ctx context.Context, in *CreateMissionRequest, opts ...grpc.CallOption) (*Mission, error)
	UpdateMission(ctx context.Context, in *UpdateMissionRequest, opts ...grpc.CallOption) (*Mission, error)
	DeleteMission(ctx context.Context, in *DeleteMissionRequest, opts ...grpc.CallOption) (*Empty, error)
}

type manageMissionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewManageMissionServiceClient(cc grpc.ClientConnInterface) ManageMissionServiceClient {
	return &manageMissionServiceClient{cc}
}

func (c *manageMissionServiceClient) ListMissions(ctx context.Context, in *ListMissionsRequest, opts ...grpc.CallOption) (*ListMissionsResponses, error) {
	out := new(ListMissionsResponses)
	err := c.cc.Invoke(ctx, "/skysign_proto.ManageMissionService/ListMissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *manageMissionServiceClient) GetMission(ctx context.Context, in *GetMissionRequest, opts ...grpc.CallOption) (*Mission, error) {
	out := new(Mission)
	err := c.cc.Invoke(ctx, "/skysign_proto.ManageMissionService/GetMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *manageMissionServiceClient) CreateMission(ctx context.Context, in *CreateMissionRequest, opts ...grpc.CallOption) (*Mission, error) {
	out := new(Mission)
	err := c.cc.Invoke(ctx, "/skysign_proto.ManageMissionService/CreateMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *manageMissionServiceClient) UpdateMission(ctx context.Context, in *UpdateMissionRequest, opts ...grpc.CallOption) (*Mission, error) {
	out := new(Mission)
	err := c.cc.Invoke(ctx, "/skysign_proto.ManageMissionService/UpdateMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *manageMissionServiceClient) DeleteMission(ctx context.Context, in *DeleteMissionRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/skysign_proto.ManageMissionService/DeleteMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManageMissionServiceServer is the server API for ManageMissionService service.
type ManageMissionServiceServer interface {
	ListMissions(context.Context, *ListMissionsRequest) (*ListMissionsResponses, error)
	GetMission(context.Context, *GetMissionRequest) (*Mission, error)
	CreateMission(context.Context, *CreateMissionRequest) (*Mission, error)
	UpdateMission(context.Context, *UpdateMissionRequest) (*Mission, error)
	DeleteMission(context.Context, *DeleteMissionRequest) (*Empty, error)
}

// UnimplementedManageMissionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedManageMissionServiceServer struct {
}

func (*UnimplementedManageMissionServiceServer) ListMissions(context.Context, *ListMissionsRequest) (*ListMissionsResponses, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMissions not implemented")
}
func (*UnimplementedManageMissionServiceServer) GetMission(context.Context, *GetMissionRequest) (*Mission, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMission not implemented")
}
func (*UnimplementedManageMissionServiceServer) CreateMission(context.Context, *CreateMissionRequest) (*Mission, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMission not implemented")
}
func (*UnimplementedManageMissionServiceServer) UpdateMission(context.Context, *UpdateMissionRequest) (*Mission, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMission not implemented")
}
func (*UnimplementedManageMissionServiceServer) DeleteMission(context.Context, *DeleteMissionRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMission not implemented")
}

func RegisterManageMissionServiceServer(s *grpc.Server, srv ManageMissionServiceServer) {
	s.RegisterService(&_ManageMissionService_serviceDesc, srv)
}

func _ManageMissionService_ListMissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManageMissionServiceServer).ListMissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.ManageMissionService/ListMissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManageMissionServiceServer).ListMissions(ctx, req.(*ListMissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManageMissionService_GetMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManageMissionServiceServer).GetMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.ManageMissionService/GetMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManageMissionServiceServer).GetMission(ctx, req.(*GetMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManageMissionService_CreateMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManageMissionServiceServer).CreateMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.ManageMissionService/CreateMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManageMissionServiceServer).CreateMission(ctx, req.(*CreateMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManageMissionService_UpdateMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManageMissionServiceServer).UpdateMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.ManageMissionService/UpdateMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManageMissionServiceServer).UpdateMission(ctx, req.(*UpdateMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManageMissionService_DeleteMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManageMissionServiceServer).DeleteMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.ManageMissionService/DeleteMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManageMissionServiceServer).DeleteMission(ctx, req.(*DeleteMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManageMissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "skysign_proto.ManageMissionService",
	HandlerType: (*ManageMissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMissions",
			Handler:    _ManageMissionService_ListMissions_Handler,
		},
		{
			MethodName: "GetMission",
			Handler:    _ManageMissionService_GetMission_Handler,
		},
		{
			MethodName: "CreateMission",
			Handler:    _ManageMissionService_CreateMission_Handler,
		},
		{
			MethodName: "UpdateMission",
			Handler:    _ManageMissionService_UpdateMission_Handler,
		},
		{
			MethodName: "DeleteMission",
			Handler:    _ManageMissionService_DeleteMission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "manage_mission.proto",
}
