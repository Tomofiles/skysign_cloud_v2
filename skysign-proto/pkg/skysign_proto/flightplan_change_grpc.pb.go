// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package skysign_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ChangeFlightplanServiceClient is the client API for ChangeFlightplanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ChangeFlightplanServiceClient interface {
	ChangeNumberOfVehicles(ctx context.Context, in *ChangeNumberOfVehiclesRequest, opts ...grpc.CallOption) (*ChangeNumberOfVehiclesResponse, error)
}

type changeFlightplanServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChangeFlightplanServiceClient(cc grpc.ClientConnInterface) ChangeFlightplanServiceClient {
	return &changeFlightplanServiceClient{cc}
}

func (c *changeFlightplanServiceClient) ChangeNumberOfVehicles(ctx context.Context, in *ChangeNumberOfVehiclesRequest, opts ...grpc.CallOption) (*ChangeNumberOfVehiclesResponse, error) {
	out := new(ChangeNumberOfVehiclesResponse)
	err := c.cc.Invoke(ctx, "/skysign_proto.ChangeFlightplanService/ChangeNumberOfVehicles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChangeFlightplanServiceServer is the server API for ChangeFlightplanService service.
// All implementations must embed UnimplementedChangeFlightplanServiceServer
// for forward compatibility
type ChangeFlightplanServiceServer interface {
	ChangeNumberOfVehicles(context.Context, *ChangeNumberOfVehiclesRequest) (*ChangeNumberOfVehiclesResponse, error)
	mustEmbedUnimplementedChangeFlightplanServiceServer()
}

// UnimplementedChangeFlightplanServiceServer must be embedded to have forward compatible implementations.
type UnimplementedChangeFlightplanServiceServer struct {
}

func (UnimplementedChangeFlightplanServiceServer) ChangeNumberOfVehicles(context.Context, *ChangeNumberOfVehiclesRequest) (*ChangeNumberOfVehiclesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeNumberOfVehicles not implemented")
}
func (UnimplementedChangeFlightplanServiceServer) mustEmbedUnimplementedChangeFlightplanServiceServer() {
}

// UnsafeChangeFlightplanServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ChangeFlightplanServiceServer will
// result in compilation errors.
type UnsafeChangeFlightplanServiceServer interface {
	mustEmbedUnimplementedChangeFlightplanServiceServer()
}

func RegisterChangeFlightplanServiceServer(s grpc.ServiceRegistrar, srv ChangeFlightplanServiceServer) {
	s.RegisterService(&ChangeFlightplanService_ServiceDesc, srv)
}

func _ChangeFlightplanService_ChangeNumberOfVehicles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeNumberOfVehiclesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangeFlightplanServiceServer).ChangeNumberOfVehicles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/skysign_proto.ChangeFlightplanService/ChangeNumberOfVehicles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangeFlightplanServiceServer).ChangeNumberOfVehicles(ctx, req.(*ChangeNumberOfVehiclesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ChangeFlightplanService_ServiceDesc is the grpc.ServiceDesc for ChangeFlightplanService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ChangeFlightplanService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "skysign_proto.ChangeFlightplanService",
	HandlerType: (*ChangeFlightplanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChangeNumberOfVehicles",
			Handler:    _ChangeFlightplanService_ChangeNumberOfVehicles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/flightplan_change.proto",
}
